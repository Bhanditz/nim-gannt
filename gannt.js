/* Generated by the Nim Compiler v0.17.2 */
/*   (c) 2017 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI80729 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI77158 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI80686 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI128 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI80683 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI79084 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI79067 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI79528 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI79497 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI79387 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI79369 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI79015 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI79244 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI79207 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI43604 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI77176 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI36224 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI77031 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI3462 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3446 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3448 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI44513 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI44503 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI3440 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3454 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI46017 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI3458 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI43620 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI43404 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI43402 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI43614 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI43611 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI43608 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI43605 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI43602 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI79027 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI80873 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI71008 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI71003 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI80510 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI13609 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3506 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI3501 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3424 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3438 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3442 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI77005 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI77064 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI77006 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI77003 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI77046 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI73003 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI130 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI3408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI75004 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI75003 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI124 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI76003 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI75004 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI124, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI124, name: "b", sons: null}, 
{kind: 1, offset: "c", len: 0, typ: NTI124, name: "c", sons: null}, 
{kind: 1, offset: "r1", len: 0, typ: NTI124, name: "r1", sons: null}, 
{kind: 1, offset: "r2", len: 0, typ: NTI124, name: "r2", sons: null}, 
{kind: 1, offset: "d1", len: 0, typ: NTI124, name: "d1", sons: null}, 
{kind: 1, offset: "d2", len: 0, typ: NTI124, name: "d2", sons: null}]};
NTI75004.node = NNI75004;
var NNI3408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3408.node = NNI3408;
NTI75004.base = NTI3408;
NTI75003.base = NTI75004;
var NNI73003 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"10": {kind: 1, offset: 10, typ: NTI73003, name: "DEBUG", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI73003, name: "INFO", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI73003, name: "WARNING", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI73003, name: "ERROR", len: 0, sons: null}}};
NTI73003.node = NNI73003;
var NNI76003 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "X1", len: 0, typ: NTI124, name: "X1", sons: null}, 
{kind: 1, offset: "X2", len: 0, typ: NTI124, name: "X2", sons: null}, 
{kind: 1, offset: "Y1", len: 0, typ: NTI124, name: "Y1", sons: null}, 
{kind: 1, offset: "Y2", len: 0, typ: NTI124, name: "Y2", sons: null}, 
{kind: 1, offset: "H1", len: 0, typ: NTI124, name: "H1", sons: null}, 
{kind: 1, offset: "H2", len: 0, typ: NTI104, name: "H2", sons: null}, 
{kind: 1, offset: "H3", len: 0, typ: NTI104, name: "H3", sons: null}, 
{kind: 1, offset: "H4", len: 0, typ: NTI104, name: "H4", sons: null}, 
{kind: 1, offset: "H5", len: 0, typ: NTI104, name: "H5", sons: null}, 
{kind: 1, offset: "H6", len: 0, typ: NTI104, name: "H6", sons: null}, 
{kind: 1, offset: "W1", len: 0, typ: NTI104, name: "W1", sons: null}, 
{kind: 1, offset: "S1", len: 0, typ: NTI104, name: "S1", sons: null}, 
{kind: 1, offset: "sx", len: 0, typ: NTI75003, name: "sx", sons: null}, 
{kind: 1, offset: "rx", len: 0, typ: NTI75003, name: "rx", sons: null}, 
{kind: 1, offset: "ry", len: 0, typ: NTI75003, name: "ry", sons: null}, 
{kind: 1, offset: "sy", len: 0, typ: NTI75003, name: "sy", sons: null}, 
{kind: 1, offset: "mode_xrange", len: 0, typ: NTI104, name: "mode_xrange", sons: null}, 
{kind: 1, offset: "mode_title", len: 0, typ: NTI104, name: "mode_title", sons: null}, 
{kind: 1, offset: "mode_q1jan", len: 0, typ: NTI130, name: "mode_q1jan", sons: null}, 
{kind: 1, offset: "mode_from_dtstring", len: 0, typ: NTI130, name: "mode_from_dtstring", sons: null}, 
{kind: 1, offset: "fmt_dtstring", len: 0, typ: NTI140, name: "fmt_dtstring", sons: null}, 
{kind: 1, offset: "log_level", len: 0, typ: NTI73003, name: "log_level", sons: null}]};
NTI76003.node = NNI76003;
NTI76003.base = NTI3408;
var NNI77006 = {kind: 2, len: 9, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "group", len: 0, typ: NTI140, name: "group", sons: null}, 
{kind: 1, offset: "file", len: 0, typ: NTI140, name: "file", sons: null}, 
{kind: 1, offset: "idx", len: 0, typ: NTI104, name: "idx", sons: null}, 
{kind: 1, offset: "begin", len: 0, typ: NTI124, name: "begin", sons: null}, 
{kind: 1, offset: "fin", len: 0, typ: NTI124, name: "fin", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI140, name: "text", sons: null}, 
{kind: 1, offset: "beginstr", len: 0, typ: NTI140, name: "beginstr", sons: null}, 
{kind: 1, offset: "endstr", len: 0, typ: NTI140, name: "endstr", sons: null}, 
{kind: 1, offset: "misc", len: 0, typ: NTI140, name: "misc", sons: null}]};
NTI77006.node = NNI77006;
NTI77006.base = NTI3408;
NTI77003.base = NTI77006;
NTI77046.base = NTI77003;
var NNI77005 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "idx", len: 0, typ: NTI104, name: "idx", sons: null}, 
{kind: 1, offset: "at_or_on", len: 0, typ: NTI124, name: "at_or_on", sons: null}, 
{kind: 1, offset: "title", len: 0, typ: NTI140, name: "title", sons: null}]};
NTI77005.node = NNI77005;
NTI77005.base = NTI3408;
NTI77064.base = NTI77005;
var NNI3442 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3442.node = NNI3442;
var NNI3438 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3438.node = NNI3438;
NTI3501.base = NTI3424;
NTI3506.base = NTI3424;
var NNI3424 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3501, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI3506, name: "up", sons: null}]};
NTI3424.node = NNI3424;
NTI3424.base = NTI3408;
NTI3438.base = NTI3424;
NTI3442.base = NTI3438;
var NNI13609 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI13609.node = NNI13609;
var NNI71008 = {kind: 1, offset: "dmy", len: 0, typ: NTI104, name: "dmy", sons: null};
NTI71008.node = NNI71008;
NTI71008.base = NTI3408;
NTI71003.base = NTI71008;
var NNI80510 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI71003, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI104, name: "Field2", sons: null}]};
NTI80510.node = NNI80510;
var NNI80873 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI138, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI138, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI79027, name: "Field2", sons: null}]};
NTI80873.node = NNI80873;
NTI43605.base = NTI104;
NTI43608.base = NTI104;
NTI43611.base = NTI104;
NTI43614.base = NTI104;
var NNI43402 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"0": {kind: 1, offset: 0, typ: NTI43402, name: "mJan", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI43402, name: "mFeb", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI43402, name: "mMar", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI43402, name: "mApr", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI43402, name: "mMay", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI43402, name: "mJun", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI43402, name: "mJul", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI43402, name: "mAug", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI43402, name: "mSep", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI43402, name: "mOct", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI43402, name: "mNov", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI43402, name: "mDec", len: 0, sons: null}}};
NTI43402.node = NNI43402;
var NNI43404 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI43404, name: "dMon", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI43404, name: "dTue", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI43404, name: "dWed", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI43404, name: "dThu", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI43404, name: "dFri", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI43404, name: "dSat", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI43404, name: "dSun", len: 0, sons: null}}};
NTI43404.node = NNI43404;
NTI43620.base = NTI104;
var NNI43602 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "second", len: 0, typ: NTI43605, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI43608, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI43611, name: "hour", sons: null}, 
{kind: 1, offset: "monthday", len: 0, typ: NTI43614, name: "monthday", sons: null}, 
{kind: 1, offset: "month", len: 0, typ: NTI43402, name: "month", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI104, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI43404, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI43620, name: "yearday", sons: null}, 
{kind: 1, offset: "isDST", len: 0, typ: NTI130, name: "isDST", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI104, name: "timezone", sons: null}]};
NTI43602.node = NNI43602;
NTI43602.base = NTI3408;
var NNI3458 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3458.node = NNI3458;
NTI3458.base = NTI3424;
NTI46017.base = NTI43404;
var NNI3454 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3454.node = NNI3454;
NTI3454.base = NTI3424;
var NNI3440 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3440.node = NNI3440;
NTI3440.base = NTI3438;
NTI44503.base = NTI138;
NTI44513.base = NTI138;
var NNI3448 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3448.node = NNI3448;
NTI3448.base = NTI3424;
var NNI3446 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3446.node = NNI3446;
NTI3446.base = NTI3424;
var NNI3462 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3462.node = NNI3462;
NTI3462.base = NTI3424;
NTI77031.base = NTI77003;
NTI36224.base = NTI138;
NTI77176.base = NTI77003;
var NNI43604 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "milliseconds", len: 0, typ: NTI104, name: "milliseconds", sons: null}, 
{kind: 1, offset: "seconds", len: 0, typ: NTI104, name: "seconds", sons: null}, 
{kind: 1, offset: "minutes", len: 0, typ: NTI104, name: "minutes", sons: null}, 
{kind: 1, offset: "hours", len: 0, typ: NTI104, name: "hours", sons: null}, 
{kind: 1, offset: "days", len: 0, typ: NTI104, name: "days", sons: null}, 
{kind: 1, offset: "months", len: 0, typ: NTI104, name: "months", sons: null}, 
{kind: 1, offset: "years", len: 0, typ: NTI104, name: "years", sons: null}]};
NTI43604.node = NNI43604;
var NNI79207 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI140, name: "Field1", sons: null}]};
NTI79207.node = NNI79207;
var NNI79244 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI79244.node = NNI79244;
var NNI79015 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI104, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI140, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI104, name: "Field2", sons: null}]};
NTI79015.node = NNI79015;
var NNI79369 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI140, name: "Field1", sons: null}]};
NTI79369.node = NNI79369;
var NNI79387 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI79387.node = NNI79387;
var NNI79497 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI140, name: "Field1", sons: null}]};
NTI79497.node = NNI79497;
var NNI79528 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI79528.node = NNI79528;
var NNI79067 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI140, name: "Field1", sons: null}]};
NTI79067.node = NNI79067;
var NNI79084 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI79084.node = NNI79084;
NTI80683.base = NTI128;
NTI80686.base = NTI124;
NTI77158.base = NTI77003;
NTI80729.base = NTI77003;

function setConstr() {
		      var result = {};
      for (var i = 0; i < arguments.length; ++i) {
        var x = arguments[i];
        if (typeof(x) == "object") {
          for (var j = x[0]; j <= x[1]; ++j) {
            result[j] = true;
          }
        } else {
          result[x] = true;
        }
      }
      return result;
    

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_19817, src_19818, ti_19819) {
	var result_20229 = null;

		switch (ti_19819.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(isFatPointer_19801(ti_19819))) {
			result_20229 = src_19818;
			}
			else {
				result_20229 = [src_19818[0], src_19818[1]];
			}
			
			break;
		case 19:
			      if (dest_19817 === null || dest_19817 === undefined) {
        dest_19817 = {};
      }
      else {
        for (var key in dest_19817) { delete dest_19817[key]; }
      }
      for (var key in src_19818) { dest_19817[key] = src_19818[key]; }
      result_20229 = dest_19817;
    
			break;
		case 18:
		case 17:
			if (!((ti_19819.base == null))) {
			result_20229 = nimCopy(dest_19817, src_19818, ti_19819.base);
			}
			else {
			if ((ti_19819.kind == 17)) {
			result_20229 = (dest_19817 === null || dest_19817 === undefined) ? {m_type: ti_19819} : dest_19817;
			}
			else {
				result_20229 = (dest_19817 === null || dest_19817 === undefined) ? {} : dest_19817;
			}
			}
			nimCopyAux(result_20229, src_19818, ti_19819.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_19818 === null) {
        result_20229 = null;
      }
      else {
        if (dest_19817 === null || dest_19817 === undefined) {
          dest_19817 = new Array(src_19818.length);
        }
        else {
          dest_19817.length = src_19818.length;
        }
        result_20229 = dest_19817;
        for (var i = 0; i < src_19818.length; ++i) {
          result_20229[i] = nimCopy(result_20229[i], src_19818[i], ti_19819.base);
        }
      }
    
			break;
		case 28:
			      if (src_19818 !== null) {
        result_20229 = src_19818.slice(0);
      }
    
			break;
		default: 
			result_20229 = src_19818;
			break;
		}

	return result_20229;

}

function cstrToNimstr(c_14803) {
		  var ln = c_14803.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_14803.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_14803.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  result[r] = 0; // terminating zero
  return result;
  

	
}

function makeNimstrLit(c_14603) {
		    var ln = c_14603.length;
    var result = new Array(ln + 1);
    var i = 0;
    for (; i < ln; ++i) {
      result[i] = c_14603.charCodeAt(i);
    }
    result[i] = 0; // terminating zero
    return result;
    

	
}

function eqStrings(a_17203, b_17204) {
		    if (a_17203 == b_17204) return true;
    if ((!a_17203) || (!b_17204)) return false;
    var alen = a_17203.length;
    if (alen != b_17204.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_17203[i] != b_17204[i]) return false;
    return true;
  

	
}

function arrayConstr(len_20264, value_20265, typ_20266) {
		      var result = new Array(len_20264);
      for (var i = 0; i < len_20264; ++i) result[i] = nimCopy(null, value_20265, typ_20266);
      return result;
    

	
}

function toJSStr(s_15003) {
		    var len = s_15003.length-1;
    var asciiPart = new Array(len);
    var fcc = String.fromCharCode;
    var nonAsciiPart = null;
    var nonAsciiOffset = 0;
    for (var i = 0; i < len; ++i) {
      if (nonAsciiPart !== null) {
        var offset = (i - nonAsciiOffset) * 2;
        var code = s_15003[i].toString(16);
        if (code.length == 1) {
          code = "0"+code;
        }
        nonAsciiPart[offset] = "%";
        nonAsciiPart[offset + 1] = code;
      }
      else if (s_15003[i] < 128)
        asciiPart[i] = fcc(s_15003[i]);
      else {
        asciiPart.length = i;
        nonAsciiOffset = i;
        nonAsciiPart = new Array((len - i) * 2);
        --i;
      }
    }
    asciiPart = asciiPart.join("");
    return (nonAsciiPart === null) ?
        asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function raiseException(e_14006, ename_14007) {
		e_14006.name = ename_14007;
		if ((excHandler == 0)) {
		unhandledException(e_14006);
		}
		
		e_14006.trace = nimCopy(null, rawWriteStackTrace_13828(), NTI138);
		throw e_14006;

	
}

function subInt(a_17603, b_17604) {
		      var result = a_17603 - b_17604;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    

	
}

function chckRange(i_20409, a_20410, b_20411) {
			var Tmp1;

	var result_20412 = 0;

	BeforeRet: do {
			if (!(a_20410 <= i_20409)) Tmp1 = false; else {				Tmp1 = (i_20409 <= b_20411);			}		if (Tmp1) {
		result_20412 = i_20409;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_20412;

}
		var weekDays_46014 = nimCopy(null, [6, 0, 1, 2, 3, 4, 5], NTI46017);

function chckIndx(i_20403, a_20404, b_20405) {
			var Tmp1;

	var result_20406 = 0;

	BeforeRet: do {
			if (!(a_20404 <= i_20403)) Tmp1 = false; else {				Tmp1 = (i_20403 <= b_20405);			}		if (Tmp1) {
		result_20406 = i_20403;
		break BeforeRet;
		}
		else {
		raiseIndexError();
		}
		
	} while (false);

	return result_20406;

}

function mulInt(a_17803, b_17804) {
		      var result = a_17803 * b_17804;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    

	
}

function addInt(a_17403, b_17404) {
		      var result = a_17403 + b_17404;
      if (result > 2147483647 || result < -2147483648) raiseOverflow();
      return result;
    

	
}

function modInt(a_18203, b_18204) {
		      if (b_18204 == 0) raiseDivByZero();
      if (b_18204 == -1 && a_18203 == 2147483647) raiseOverflow();
      return Math.floor(a_18203 % b_18204);
    

	
}
		var lookup_44500 = nimCopy(null, [makeNimstrLit("Monday"), makeNimstrLit("Tuesday"), makeNimstrLit("Wednesday"), makeNimstrLit("Thursday"), makeNimstrLit("Friday"), makeNimstrLit("Saturday"), makeNimstrLit("Sunday")], NTI44503);

function addChar(x_20506, c_20507) {
		    x_20506[x_20506.length-1] = c_20507; x_20506.push(0);
  

	
}
		var lookup_44510 = nimCopy(null, [makeNimstrLit("January"), makeNimstrLit("February"), makeNimstrLit("March"), makeNimstrLit("April"), makeNimstrLit("May"), makeNimstrLit("June"), makeNimstrLit("July"), makeNimstrLit("August"), makeNimstrLit("September"), makeNimstrLit("October"), makeNimstrLit("November"), makeNimstrLit("December")], NTI44513);

function mnewString(len_15203) {
		      var result = new Array(len_15203+1);
      result[0] = 0;
      result[len_15203] = 0;
      return result;
    

	
}

function divInt(a_18003, b_18004) {
		      if (b_18004 == 0) raiseDivByZero();
      if (b_18004 == -1 && a_18003 == 2147483647) raiseOverflow();
      return Math.floor(a_18003 / b_18004);
    

	
}

function absInt(a_19411) {
		var Tmp1;

	var result_19412 = 0;

		if ((a_19411 < 0)) {
		Tmp1 = (a_19411 * -1);
		}
		else {
		Tmp1 = a_19411;
		}
		
		result_19412 = Tmp1;

	return result_19412;

}
var ConstSet2 = setConstr([48, 57]);
var ConstSet3 = setConstr([48, 57]);
var ConstSet4 = setConstr([65, 90]);

function nimMin(a_19439, b_19440) {
		var Tmp1;

	var result_19441 = 0;

	BeforeRet: do {
		if ((a_19439 <= b_19440)) {
		Tmp1 = a_19439;
		}
		else {
		Tmp1 = b_19440;
		}
		
		result_19441 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_19441;

}

function nimCharToStr(x_13251) {
	var result_13252 = null;

		result_13252 = nimCopy(null, mnewString(1), NTI138);
		result_13252[0] = x_13251;

	return result_13252;

}

function isObj(obj_20468, subclass_20469) {
	var result_20470 = false;

	BeforeRet: do {
		var x_20471 = obj_20468;
		if ((x_20471 == subclass_20469)) {
		result_20470 = true;
		break BeforeRet;
		}
		
		L1: do {
				L2: while (true) {
				if (!!((x_20471 == subclass_20469))) break L2;
					if ((x_20471 == null)) {
					result_20470 = false;
					break BeforeRet;
					}
					
					x_20471 = x_20471.base;
				}
		} while(false);
		result_20470 = true;
		break BeforeRet;
	} while (false);

	return result_20470;

}

function reraiseException() {
		if ((lastJSError == null)) {
		var e_14420 = null;
		e_14420 = {m_type: NTI3462, parent: null, name: null, message: null, trace: null, up: null};
		e_14420.message = nimCopy(null, makeNimstrLit("no exception to reraise"), NTI138);
		e_14420.parent = null;
		raiseException(e_14420, "ReraiseError");
		}
		else {
			if ((excHandler == 0)) {
			if (isNimException_13253()) {
			unhandledException(lastJSError);
			}
			
			}
			
			throw lastJSError;
		}
		

	
}

function negInt(a_19403) {
	var result_19404 = 0;

		result_19404 = (a_19403 * -1);

	return result_19404;

}
var ConstSet5 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr(0, 13, 10);
var nimvm_6119 = false;
var nim_program_result = 0;
var globalRaiseHook_11605 = [null];
var localRaiseHook_11610 = [null];
var outOfMemHook_11613 = [null];

function getTime_43642() {
	var result_46013 = 0.0;

	var F={procname:"times.getTime",prev:framePtr,filename:"lib/nim/pure/times.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 1333;
		result_46013 = new Date();
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_46013;

}
var startMilsecs_46112 = [getTime_43642()];
var objectID_53232 = [0];
var level_cur_73019 = [10];
var cfg_76027 = [{X1: 2.0000000000000000e+02, Y1: 5.0000000000000000e+01, X2: 1.0000000000000000e+03, Y2: 5.0000000000000000e+02, H1: 2.0000000000000000e+01, H2: 2, H3: 3, H4: 10, H5: 14, H6: 20, W1: 10, S1: 10, mode_xrange: 0, mode_title: 0, mode_q1jan: false, fmt_dtstring: "yyyy/MM/dd hh:mm:ss", mode_from_dtstring: true, log_level: 20, m_type: NTI76003, sx: null, rx: null, ry: null, sy: null}];

function isFatPointer_19801(ti_19803) {
	var result_19804 = false;

	BeforeRet: do {
		result_19804 = !((ConstSet1[ti_19803.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_19804;

}

function nimCopyAux(dest_19822, src_19823, n_19825) {
		switch (n_19825.kind) {
		case 0:
			break;
		case 1:
			      dest_19822[n_19825.offset] = nimCopy(dest_19822[n_19825.offset], src_19823[n_19825.offset], n_19825.typ);
    
			break;
		case 2:
			L1: do {
				var i_20215 = 0;
				var colontmp__20217 = 0;
				colontmp__20217 = (n_19825.len - 1);
				var res_20220 = 0;
				L2: do {
						L3: while (true) {
						if (!(res_20220 <= colontmp__20217)) break L3;
							i_20215 = res_20220;
							nimCopyAux(dest_19822, src_19823, n_19825.sons[i_20215]);
							res_20220 += 1;
						}
				} while(false);
			} while(false);
			break;
		case 3:
			      dest_19822[n_19825.offset] = nimCopy(dest_19822[n_19825.offset], src_19823[n_19825.offset], n_19825.typ);
      for (var i = 0; i < n_19825.sons.length; ++i) {
        nimCopyAux(dest_19822, src_19823, n_19825.sons[i][1]);
      }
    
			break;
		}

	
}
var gnt_bars_77047 = [nimCopy(null, [], NTI77046)];
var mi_stones_77065 = [nimCopy(null, [], NTI77064)];
var drag_mode_79030 = [0];
var drag_x_79031 = [0];
var drag_y_79032 = [0];

function setLevel_73033(n_73035) {
	var F={procname:"logging.setLevel",prev:framePtr,filename:"logging.nim",line:0};
	framePtr = F;
		F.line = 28;
		level_cur_73019[0] = n_73035;
	framePtr = F.prev;

	
}

function add_11629(x_11632, x_11632_Idx, y_11633) {
		        var len = x_11632[0].length-1;
        for (var i = 0; i < y_11633.length; ++i) {
          x_11632[0][len] = y_11633.charCodeAt(i);
          ++len;
        }
        x_11632[0][len] = 0
      

	
}

function auxWriteStackTrace_13604(f_13606) {
					var Tmp3;

	var result_13607 = [null];

		var it_13615 = f_13606;
		var i_13616 = 0;
		var total_13617 = 0;
		var tempFrames_13621 = arrayConstr(64, {Field0: null, Field1: 0}, NTI13609);
		L1: do {
				L2: while (true) {
					if (!!((it_13615 == null))) Tmp3 = false; else {						Tmp3 = (i_13616 <= 63);					}				if (!Tmp3) break L2;
					tempFrames_13621[i_13616].Field0 = it_13615.procname;
					tempFrames_13621[i_13616].Field1 = it_13615.line;
					i_13616 += 1;
					total_13617 += 1;
					it_13615 = it_13615.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_13615 == null))) break L5;
					total_13617 += 1;
					it_13615 = it_13615.prev;
				}
		} while(false);
		result_13607[0] = nimCopy(null, makeNimstrLit(""), NTI138);
		if (!((total_13617 == i_13616))) {
		if (result_13607[0] != null) { result_13607[0] = (result_13607[0].slice(0, -1)).concat(makeNimstrLit("(")); } else { result_13607[0] = makeNimstrLit("(");};
		if (result_13607[0] != null) { result_13607[0] = (result_13607[0].slice(0, -1)).concat(cstrToNimstr(((total_13617 - i_13616))+"")); } else { result_13607[0] = cstrToNimstr(((total_13617 - i_13616))+"");};
		if (result_13607[0] != null) { result_13607[0] = (result_13607[0].slice(0, -1)).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_13607[0] = makeNimstrLit(" calls omitted) ...\x0A");};
		}
		
		L6: do {
			var j_13815 = 0;
			var colontmp__13821 = 0;
			colontmp__13821 = (i_13616 - 1);
			var res_13824 = colontmp__13821;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_13824)) break L8;
						j_13815 = res_13824;
						add_11629(result_13607, 0, tempFrames_13621[j_13815].Field0);
						if ((0 < tempFrames_13621[j_13815].Field1)) {
						if (result_13607[0] != null) { result_13607[0] = (result_13607[0].slice(0, -1)).concat(makeNimstrLit(", line: ")); } else { result_13607[0] = makeNimstrLit(", line: ");};
						if (result_13607[0] != null) { result_13607[0] = (result_13607[0].slice(0, -1)).concat(cstrToNimstr((tempFrames_13621[j_13815].Field1)+"")); } else { result_13607[0] = cstrToNimstr((tempFrames_13621[j_13815].Field1)+"");};
						}
						
						if (result_13607[0] != null) { result_13607[0] = (result_13607[0].slice(0, -1)).concat(makeNimstrLit("\x0A")); } else { result_13607[0] = makeNimstrLit("\x0A");};
						res_13824 -= 1;
					}
			} while(false);
		} while(false);

	return result_13607[0];

}

function rawWriteStackTrace_13828() {
	var result_13830 = null;

		if (!((framePtr == null))) {
		result_13830 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A").slice(0,-1)).concat(auxWriteStackTrace_13604(framePtr)), NTI138);
		}
		else {
			result_13830 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI138);
		}
		

	return result_13830;

}

function unhandledException(e_13853) {
			var Tmp1;

		var buf_13854 = [makeNimstrLit("")];
			if (!!(eqStrings(e_13853.message, null))) Tmp1 = false; else {				Tmp1 = !((e_13853.message[0] == 0));			}		if (Tmp1) {
		if (buf_13854[0] != null) { buf_13854[0] = (buf_13854[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_13854[0] = makeNimstrLit("Error: unhandled exception: ");};
		if (buf_13854[0] != null) { buf_13854[0] = (buf_13854[0].slice(0, -1)).concat(e_13853.message); } else { buf_13854[0] = e_13853.message;};
		}
		else {
		if (buf_13854[0] != null) { buf_13854[0] = (buf_13854[0].slice(0, -1)).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_13854[0] = makeNimstrLit("Error: unhandled exception");};
		}
		
		if (buf_13854[0] != null) { buf_13854[0] = (buf_13854[0].slice(0, -1)).concat(makeNimstrLit(" [")); } else { buf_13854[0] = makeNimstrLit(" [");};
		add_11629(buf_13854, 0, e_13853.name);
		if (buf_13854[0] != null) { buf_13854[0] = (buf_13854[0].slice(0, -1)).concat(makeNimstrLit("]\x0A")); } else { buf_13854[0] = makeNimstrLit("]\x0A");};
		if (buf_13854[0] != null) { buf_13854[0] = (buf_13854[0].slice(0, -1)).concat(rawWriteStackTrace_13828()); } else { buf_13854[0] = rawWriteStackTrace_13828();};
		var cbuf_14001 = toJSStr(buf_13854[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_14001);
  }
  else {
    throw cbuf_14001;
  }
  

	
}

function raiseOverflow() {
		var e_14440 = null;
		e_14440 = {m_type: NTI3442, parent: null, name: null, message: null, trace: null, up: null};
		e_14440.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
		e_14440.parent = null;
		raiseException(e_14440, "OverflowError");

	
}

function on_cm_setup_80507(ev_80509) {
	var result_80511 = {Field0: null, Field1: 0, Field2: 0};

	var F={procname:"gannt.on_cm_setup",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 564;
		ev_80509.preventDefault();
		F.line = 565;
		var x_80512 = ev_80509.pageX;
		F.line = 566;
		var y_80513 = ev_80509.pageY;
		F.line = 569;
		jQuery("#contextmenu").css("left", toJSStr((cstrToNimstr((subInt(x_80512, 10))+"").slice(0,-1)).concat(makeNimstrLit("px")))).css("top", toJSStr((cstrToNimstr((subInt(y_80513, 10))+"").slice(0,-1)).concat(makeNimstrLit("px")))).css("display", "block");
		F.line = 570;
		jQuery("#contextmenu li").remove();
		F.line = 571;
		nimCopy(result_80511, {Field0: jQuery("#contextmenu ul"), Field1: x_80512, Field2: y_80513}, NTI80510);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_80511;

}

function debg_73036(fmt_73038) {
	var F={procname:"logging.debg",prev:framePtr,filename:"logging.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((10 < level_cur_73019[0])) {
		F.line = 33;
		break BeforeRet;
		}
		
		F.line = 34;
		console.debug(toJSStr(fmt_73038));
	} while (false);
	framePtr = F.prev;

	
}

function on_cm_focus_80865(ev_80867) {
	var result_80868 = false;

	var F={procname:"gannt.on_cm_focus",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 882;
		debg_73036(makeNimstrLit("on_cm_focus"));
		F.line = 883;
		result_80868 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_80868;

}

function info_73048(fmt_73050) {
	var F={procname:"logging.info",prev:framePtr,filename:"logging.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((20 < level_cur_73019[0])) {
		F.line = 39;
		break BeforeRet;
		}
		
		F.line = 40;
		console.info(toJSStr(fmt_73050));
	} while (false);
	framePtr = F.prev;

	
}

function to_75057(self_75059, x_75060) {
	var result_75061 = 0.0;

	var F={procname:"common.to",prev:framePtr,filename:"common.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 55;
		var ret_75062 = ((self_75059.a * (x_75060 - self_75059.b)) + self_75059.c);
		F.line = 56;
		debg_73036((makeNimstrLit("scale.to: ").slice(0,-1)).concat(cstrToNimstr((x_75060)+"").slice(0,-1),makeNimstrLit("->").slice(0,-1),cstrToNimstr((ret_75062)+"")));
		F.line = 57;
		result_75061 = ret_75062;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_75061;

}

function raiseRangeError() {
		var e_14476 = null;
		e_14476 = {m_type: NTI3458, parent: null, name: null, message: null, trace: null, up: null};
		e_14476.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
		e_14476.parent = null;
		raiseException(e_14476, "RangeError");

	
}

function raiseIndexError() {
		var e_14494 = null;
		e_14494 = {m_type: NTI3454, parent: null, name: null, message: null, trace: null, up: null};
		e_14494.message = nimCopy(null, makeNimstrLit("index out of bounds"), NTI138);
		e_14494.parent = null;
		raiseException(e_14494, "IndexError");

	
}

function getTimezone_44203() {
	var result_46130 = 0;

	var F={procname:"times.getTimezone",prev:framePtr,filename:"lib/nim/pure/times.nim",line:0};
	framePtr = F;
		F.line = 1384;
		result_46130 = mulInt(new Date().getTimezoneOffset(), 60);
	framePtr = F.prev;

	return result_46130;

}

function raiseDivByZero() {
		var e_14458 = null;
		e_14458 = {m_type: NTI3440, parent: null, name: null, message: null, trace: null, up: null};
		e_14458.message = nimCopy(null, makeNimstrLit("division by zero"), NTI138);
		e_14458.parent = null;
		raiseException(e_14458, "DivByZeroError");

	
}

function isLeapYear_44250(year_44252) {
	var result_44253 = false;

	var F={procname:"times.isLeapYear",prev:framePtr,filename:"lib/nim/pure/times.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((modInt(year_44252, 400) == 0)) {
		F.line = 341;
		result_44253 = true;
		break BeforeRet;
		}
		else {
		if ((modInt(year_44252, 100) == 0)) {
		F.line = 343;
		result_44253 = false;
		break BeforeRet;
		}
		else {
		if ((modInt(year_44252, 4) == 0)) {
		F.line = 345;
		result_44253 = true;
		break BeforeRet;
		}
		else {
			F.line = 347;
			result_44253 = false;
			break BeforeRet;
		}
		}}
	} while (false);
	framePtr = F.prev;

	return result_44253;

}

function getDaysInMonth_44259(month_44261, year_44262) {
			var Tmp1;

	var result_44263 = 0;

	var F={procname:"times.getDaysInMonth",prev:framePtr,filename:"lib/nim/pure/times.nim",line:0};
	framePtr = F;
		F.line = 353;
		switch (month_44261) {
		case 1:
			F.line = 354;
			if (isLeapYear_44250(year_44262)) {
			Tmp1 = 29;
			}
			else {
			Tmp1 = 28;
			}
			
			result_44263 = Tmp1;
			break;
		case 3:
		case 5:
		case 8:
		case 10:
			F.line = 355;
			result_44263 = 30;
			break;
		default: 
			F.line = 356;
			result_44263 = 31;
			break;
		}
	framePtr = F.prev;

	return result_44263;

}

function getLocalTime_43644(t_43646) {
	var result_46022 = {m_type: NTI43602, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isDST: false, timezone: 0};

	var F={procname:"times.getLocalTime",prev:framePtr,filename:"lib/nim/pure/times.nim",line:0};
	framePtr = F;
		F.line = 1340;
		result_46022.second = chckRange(t_43646.getSeconds(), 0, 61);
		F.line = 1341;
		result_46022.minute = chckRange(t_43646.getMinutes(), 0, 59);
		F.line = 1342;
		result_46022.hour = chckRange(t_43646.getHours(), 0, 23);
		F.line = 1343;
		result_46022.monthday = chckRange(t_43646.getDate(), 1, 31);
		F.line = 1344;
		result_46022.month = chckRange(t_43646.getMonth(), 0, 11);
		F.line = 1345;
		result_46022.year = t_43646.getFullYear();
		F.line = 1346;
		result_46022.weekday = weekDays_46014[chckIndx(t_43646.getDay(), 0, weekDays_46014.length-1)-0];
		F.line = 1347;
		result_46022.timezone = getTimezone_44203();
		F.line = 1349;
		result_46022.yearday = subInt(result_46022.monthday, 1);
		L1: do {
			F.line = 1350;
			var month_46053 = 0;
			F.line = 3831;
			var colontmp__46064 = 0;
			F.line = 1350;
			colontmp__46064 = result_46022.month;
			F.line = 3832;
			var i_46067 = 0;
			L2: do {
				F.line = 3833;
					L3: while (true) {
					if (!(i_46067 < colontmp__46064)) break L3;
						F.line = 3834;
						month_46053 = i_46067;
						F.line = 1351;
						result_46022.yearday = addInt(result_46022.yearday, chckRange(getDaysInMonth_44259(month_46053, result_46022.year), 0, 365));
						F.line = 3835;
						i_46067 = addInt(i_46067, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_46022;

}

function fromSeconds_43656(since1970_43658) {
	var result_46119 = 0.0;

	var F={procname:"times.fromSeconds",prev:framePtr,filename:"lib/nim/pure/times.nim",line:0};
	framePtr = F;
		F.line = 1380;
		result_46119 = new Date((since1970_43658 * 1.0000000000000000e+03));
	framePtr = F.prev;

	return result_46119;

}

function fromSeconds_43659(since1970_43661) {
	var result_43662 = 0.0;

	var F={procname:"times.fromSeconds",prev:framePtr,filename:"lib/nim/pure/times.nim",line:0};
	framePtr = F;
		F.line = 215;
		result_43662 = fromSeconds_43656(since1970_43661);
	framePtr = F.prev;

	return result_43662;

}

function new_78277() {
	var result_78282 = null;

	var F={procname:"new.new",prev:framePtr,filename:"lib/nim/system.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 210;
		var r_78401 = null;
		F.line = 213;
		r_78401 = {m_type: NTI77006, group: null, file: null, idx: 0, begin: 0.0, fin: 0.0, text: null, beginstr: null, endstr: null, misc: null};
		F.line = 214;
		result_78282 = r_78401;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_78282;

}

function initBar_78272() {
	var result_78274 = null;

	var F={procname:"bars.initBar",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
		F.line = 160;
		result_78274 = new_78277();
	framePtr = F.prev;

	return result_78274;

}

function X5BX5D__21642(s_21644, x_21654) {
	var result_21655 = null;

	var F={procname:"system.[]",prev:framePtr,filename:"lib/nim/system.nim",line:0};
	framePtr = F;
		F.line = 3404;
		result_21655 = nimCopy(null, (s_21644.slice(x_21654.a, (x_21654.b)+1).concat(0)), NTI138);
	framePtr = F.prev;

	return result_21655;

}

function dollar__44496(day_44498) {
	var result_44499 = null;

	var F={procname:"times.$",prev:framePtr,filename:"lib/nim/pure/times.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 444;
		result_44499 = nimCopy(null, lookup_44500[chckIndx(day_44498, 0, lookup_44500.length-1)-0], NTI138);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_44499;

}

function dotdot__37462(a_37466, b_37468) {
	var result_37470 = {a: 0, b: 0};

	var F={procname:".....",prev:framePtr,filename:"lib/nim/system.nim",line:0};
	framePtr = F;
		F.line = 305;
		result_37470.a = a_37466;
		F.line = 306;
		result_37470.b = b_37468;
	framePtr = F.prev;

	return result_37470;

}

function dollar__44506(m_44508) {
	var result_44509 = null;

	var F={procname:"times.$",prev:framePtr,filename:"lib/nim/pure/times.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 451;
		result_44509 = nimCopy(null, lookup_44510[chckIndx(m_44508, 0, lookup_44510.length-1)-0], NTI138);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_44509;

}

function nsuRepeatChar(c_36977, count_36978) {
	var result_36979 = null;

		result_36979 = nimCopy(null, mnewString(count_36978), NTI138);
		L1: do {
			var i_37014 = 0;
			var colontmp__37016 = 0;
			colontmp__37016 = (count_36978 - 1);
			var res_37019 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_37019 <= colontmp__37016)) break L3;
						i_37014 = res_37019;
						result_36979[i_37014] = c_36977;
						res_37019 += 1;
					}
			} while(false);
		} while(false);

	return result_36979;

}

function formatToken_44580(info_44582, token_44583, buf_44585, buf_44585_Idx) {
			var Tmp1;
			var Tmp2;

	var F={procname:"times.formatToken",prev:framePtr,filename:"lib/nim/pure/times.nim",line:0};
	framePtr = F;
		F.line = 529;
		switch (toJSStr(token_44583)) {
		case "d":
			F.line = 531;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(cstrToNimstr((info_44582.monthday)+"")); } else { buf_44585[buf_44585_Idx] = cstrToNimstr((info_44582.monthday)+"");};
			break;
		case "dd":
			if ((info_44582.monthday < 10)) {
			F.line = 534;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(makeNimstrLit("0")); } else { buf_44585[buf_44585_Idx] = makeNimstrLit("0");};
			}
			
			F.line = 535;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(cstrToNimstr((info_44582.monthday)+"")); } else { buf_44585[buf_44585_Idx] = cstrToNimstr((info_44582.monthday)+"");};
			break;
		case "ddd":
			F.line = 537;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(X5BX5D__21642(dollar__44496(info_44582.weekday), dotdot__37462(0, 2))); } else { buf_44585[buf_44585_Idx] = X5BX5D__21642(dollar__44496(info_44582.weekday), dotdot__37462(0, 2));};
			break;
		case "dddd":
			F.line = 539;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(dollar__44496(info_44582.weekday)); } else { buf_44585[buf_44585_Idx] = dollar__44496(info_44582.weekday);};
			break;
		case "h":
			F.line = 541;
			if ((12 < info_44582.hour)) {
			Tmp1 = subInt(info_44582.hour, 12);
			}
			else {
			Tmp1 = info_44582.hour;
			}
			
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(cstrToNimstr((Tmp1)+"")); } else { buf_44585[buf_44585_Idx] = cstrToNimstr((Tmp1)+"");};
			break;
		case "hh":
			F.line = 543;
			if ((12 < info_44582.hour)) {
			Tmp2 = subInt(info_44582.hour, 12);
			}
			else {
			Tmp2 = info_44582.hour;
			}
			
			var amerHour_44597 = Tmp2;
			if ((amerHour_44597 < 10)) {
			F.line = 545;
			if (buf_44585[buf_44585_Idx] != null) { addChar(buf_44585[buf_44585_Idx], 48); } else { buf_44585[buf_44585_Idx] = [48, 0]; };
			}
			
			F.line = 546;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(cstrToNimstr((amerHour_44597)+"")); } else { buf_44585[buf_44585_Idx] = cstrToNimstr((amerHour_44597)+"");};
			break;
		case "H":
			F.line = 548;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(cstrToNimstr((info_44582.hour)+"")); } else { buf_44585[buf_44585_Idx] = cstrToNimstr((info_44582.hour)+"");};
			break;
		case "HH":
			if ((info_44582.hour < 10)) {
			F.line = 551;
			if (buf_44585[buf_44585_Idx] != null) { addChar(buf_44585[buf_44585_Idx], 48); } else { buf_44585[buf_44585_Idx] = [48, 0]; };
			}
			
			F.line = 552;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(cstrToNimstr((info_44582.hour)+"")); } else { buf_44585[buf_44585_Idx] = cstrToNimstr((info_44582.hour)+"");};
			break;
		case "m":
			F.line = 554;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(cstrToNimstr((info_44582.minute)+"")); } else { buf_44585[buf_44585_Idx] = cstrToNimstr((info_44582.minute)+"");};
			break;
		case "mm":
			if ((info_44582.minute < 10)) {
			F.line = 557;
			if (buf_44585[buf_44585_Idx] != null) { addChar(buf_44585[buf_44585_Idx], 48); } else { buf_44585[buf_44585_Idx] = [48, 0]; };
			}
			
			F.line = 558;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(cstrToNimstr((info_44582.minute)+"")); } else { buf_44585[buf_44585_Idx] = cstrToNimstr((info_44582.minute)+"");};
			break;
		case "M":
			F.line = 560;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(cstrToNimstr((addInt((info_44582.month|0), 1))+"")); } else { buf_44585[buf_44585_Idx] = cstrToNimstr((addInt((info_44582.month|0), 1))+"");};
			break;
		case "MM":
			if ((info_44582.month < 9)) {
			F.line = 563;
			if (buf_44585[buf_44585_Idx] != null) { addChar(buf_44585[buf_44585_Idx], 48); } else { buf_44585[buf_44585_Idx] = [48, 0]; };
			}
			
			F.line = 564;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(cstrToNimstr((addInt((info_44582.month|0), 1))+"")); } else { buf_44585[buf_44585_Idx] = cstrToNimstr((addInt((info_44582.month|0), 1))+"");};
			break;
		case "MMM":
			F.line = 566;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(X5BX5D__21642(dollar__44506(info_44582.month), dotdot__37462(0, 2))); } else { buf_44585[buf_44585_Idx] = X5BX5D__21642(dollar__44506(info_44582.month), dotdot__37462(0, 2));};
			break;
		case "MMMM":
			F.line = 568;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(dollar__44506(info_44582.month)); } else { buf_44585[buf_44585_Idx] = dollar__44506(info_44582.month);};
			break;
		case "s":
			F.line = 570;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(cstrToNimstr((info_44582.second)+"")); } else { buf_44585[buf_44585_Idx] = cstrToNimstr((info_44582.second)+"");};
			break;
		case "ss":
			if ((info_44582.second < 10)) {
			F.line = 573;
			if (buf_44585[buf_44585_Idx] != null) { addChar(buf_44585[buf_44585_Idx], 48); } else { buf_44585[buf_44585_Idx] = [48, 0]; };
			}
			
			F.line = 574;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(cstrToNimstr((info_44582.second)+"")); } else { buf_44585[buf_44585_Idx] = cstrToNimstr((info_44582.second)+"");};
			break;
		case "t":
			if ((12 <= info_44582.hour)) {
			F.line = 577;
			if (buf_44585[buf_44585_Idx] != null) { addChar(buf_44585[buf_44585_Idx], 80); } else { buf_44585[buf_44585_Idx] = [80, 0]; };
			}
			else {
				F.line = 578;
			if (buf_44585[buf_44585_Idx] != null) { addChar(buf_44585[buf_44585_Idx], 65); } else { buf_44585[buf_44585_Idx] = [65, 0]; };
			}
			
			break;
		case "tt":
			if ((12 <= info_44582.hour)) {
			F.line = 581;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(makeNimstrLit("PM")); } else { buf_44585[buf_44585_Idx] = makeNimstrLit("PM");};
			}
			else {
				F.line = 582;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(makeNimstrLit("AM")); } else { buf_44585[buf_44585_Idx] = makeNimstrLit("AM");};
			}
			
			break;
		case "y":
			F.line = 584;
			var fr_44615 = subInt((cstrToNimstr((info_44582.year)+"") != null ? cstrToNimstr((info_44582.year)+"").length-1 : 0), 1);
			if ((fr_44615 < 0)) {
			F.line = 585;
			fr_44615 = 0;
			}
			
			F.line = 586;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(X5BX5D__21642(cstrToNimstr((info_44582.year)+""), dotdot__37462(fr_44615, subInt((cstrToNimstr((info_44582.year)+"") != null ? cstrToNimstr((info_44582.year)+"").length-1 : 0), 1)))); } else { buf_44585[buf_44585_Idx] = X5BX5D__21642(cstrToNimstr((info_44582.year)+""), dotdot__37462(fr_44615, subInt((cstrToNimstr((info_44582.year)+"") != null ? cstrToNimstr((info_44582.year)+"").length-1 : 0), 1)));};
			break;
		case "yy":
			F.line = 588;
			var fr_44625 = subInt((cstrToNimstr((info_44582.year)+"") != null ? cstrToNimstr((info_44582.year)+"").length-1 : 0), 2);
			if ((fr_44625 < 0)) {
			F.line = 589;
			fr_44625 = 0;
			}
			
			F.line = 590;
			var fyear_44635 = X5BX5D__21642(cstrToNimstr((info_44582.year)+""), dotdot__37462(fr_44625, subInt((cstrToNimstr((info_44582.year)+"") != null ? cstrToNimstr((info_44582.year)+"").length-1 : 0), 1)));
			if (!(((fyear_44635 != null ? fyear_44635.length-1 : 0) == 2))) {
			F.line = 591;
			fyear_44635 = nimCopy(null, (nsuRepeatChar(48, chckRange(subInt(2, (fyear_44635 != null ? fyear_44635.length-1 : 0)), 0, 2147483647)).slice(0,-1)).concat(fyear_44635), NTI138);
			}
			
			F.line = 592;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(fyear_44635); } else { buf_44585[buf_44585_Idx] = fyear_44635;};
			break;
		case "yyy":
			F.line = 594;
			var fr_44636 = subInt((cstrToNimstr((info_44582.year)+"") != null ? cstrToNimstr((info_44582.year)+"").length-1 : 0), 3);
			if ((fr_44636 < 0)) {
			F.line = 595;
			fr_44636 = 0;
			}
			
			F.line = 596;
			var fyear_44646 = X5BX5D__21642(cstrToNimstr((info_44582.year)+""), dotdot__37462(fr_44636, subInt((cstrToNimstr((info_44582.year)+"") != null ? cstrToNimstr((info_44582.year)+"").length-1 : 0), 1)));
			if (!(((fyear_44646 != null ? fyear_44646.length-1 : 0) == 3))) {
			F.line = 597;
			fyear_44646 = nimCopy(null, (nsuRepeatChar(48, chckRange(subInt(3, (fyear_44646 != null ? fyear_44646.length-1 : 0)), 0, 2147483647)).slice(0,-1)).concat(fyear_44646), NTI138);
			}
			
			F.line = 598;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(fyear_44646); } else { buf_44585[buf_44585_Idx] = fyear_44646;};
			break;
		case "yyyy":
			F.line = 600;
			var fr_44647 = subInt((cstrToNimstr((info_44582.year)+"") != null ? cstrToNimstr((info_44582.year)+"").length-1 : 0), 4);
			if ((fr_44647 < 0)) {
			F.line = 601;
			fr_44647 = 0;
			}
			
			F.line = 602;
			var fyear_44657 = X5BX5D__21642(cstrToNimstr((info_44582.year)+""), dotdot__37462(fr_44647, subInt((cstrToNimstr((info_44582.year)+"") != null ? cstrToNimstr((info_44582.year)+"").length-1 : 0), 1)));
			if (!(((fyear_44657 != null ? fyear_44657.length-1 : 0) == 4))) {
			F.line = 603;
			fyear_44657 = nimCopy(null, (nsuRepeatChar(48, chckRange(subInt(4, (fyear_44657 != null ? fyear_44657.length-1 : 0)), 0, 2147483647)).slice(0,-1)).concat(fyear_44657), NTI138);
			}
			
			F.line = 604;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(fyear_44657); } else { buf_44585[buf_44585_Idx] = fyear_44657;};
			break;
		case "yyyyy":
			F.line = 606;
			var fr_44659 = subInt((cstrToNimstr((info_44582.year)+"") != null ? cstrToNimstr((info_44582.year)+"").length-1 : 0), 5);
			if ((fr_44659 < 0)) {
			F.line = 607;
			fr_44659 = 0;
			}
			
			F.line = 608;
			var fyear_44669 = X5BX5D__21642(cstrToNimstr((info_44582.year)+""), dotdot__37462(fr_44659, subInt((cstrToNimstr((info_44582.year)+"") != null ? cstrToNimstr((info_44582.year)+"").length-1 : 0), 1)));
			if (!(((fyear_44669 != null ? fyear_44669.length-1 : 0) == 5))) {
			F.line = 609;
			fyear_44669 = nimCopy(null, (nsuRepeatChar(48, chckRange(subInt(5, (fyear_44669 != null ? fyear_44669.length-1 : 0)), 0, 2147483647)).slice(0,-1)).concat(fyear_44669), NTI138);
			}
			
			F.line = 610;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(fyear_44669); } else { buf_44585[buf_44585_Idx] = fyear_44669;};
			break;
		case "z":
			F.line = 613;
			var nonDstTz_44670 = subInt(info_44582.timezone, mulInt((info_44582.isDST|0), 3600));
			F.line = 614;
			var hours_44671 = divInt(absInt(nonDstTz_44670), 3600);
			if ((nonDstTz_44670 <= 0)) {
			F.line = 615;
			if (buf_44585[buf_44585_Idx] != null) { addChar(buf_44585[buf_44585_Idx], 43); } else { buf_44585[buf_44585_Idx] = [43, 0]; };
			}
			else {
				F.line = 616;
			if (buf_44585[buf_44585_Idx] != null) { addChar(buf_44585[buf_44585_Idx], 45); } else { buf_44585[buf_44585_Idx] = [45, 0]; };
			}
			
			F.line = 617;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(cstrToNimstr((hours_44671)+"")); } else { buf_44585[buf_44585_Idx] = cstrToNimstr((hours_44671)+"");};
			break;
		case "zz":
			F.line = 620;
			var nonDstTz_44672 = subInt(info_44582.timezone, mulInt((info_44582.isDST|0), 3600));
			F.line = 621;
			var hours_44673 = divInt(absInt(nonDstTz_44672), 3600);
			if ((nonDstTz_44672 <= 0)) {
			F.line = 622;
			if (buf_44585[buf_44585_Idx] != null) { addChar(buf_44585[buf_44585_Idx], 43); } else { buf_44585[buf_44585_Idx] = [43, 0]; };
			}
			else {
				F.line = 623;
			if (buf_44585[buf_44585_Idx] != null) { addChar(buf_44585[buf_44585_Idx], 45); } else { buf_44585[buf_44585_Idx] = [45, 0]; };
			}
			
			if ((hours_44673 < 10)) {
			F.line = 624;
			if (buf_44585[buf_44585_Idx] != null) { addChar(buf_44585[buf_44585_Idx], 48); } else { buf_44585[buf_44585_Idx] = [48, 0]; };
			}
			
			F.line = 625;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(cstrToNimstr((hours_44673)+"")); } else { buf_44585[buf_44585_Idx] = cstrToNimstr((hours_44673)+"");};
			break;
		case "zzz":
			F.line = 628;
			var nonDstTz_44674 = subInt(info_44582.timezone, mulInt((info_44582.isDST|0), 3600));
			F.line = 629;
			var hours_44675 = divInt(absInt(nonDstTz_44674), 3600);
			F.line = 630;
			var minutes_44677 = modInt(divInt(absInt(nonDstTz_44674), 60), 60);
			if ((nonDstTz_44674 <= 0)) {
			F.line = 631;
			if (buf_44585[buf_44585_Idx] != null) { addChar(buf_44585[buf_44585_Idx], 43); } else { buf_44585[buf_44585_Idx] = [43, 0]; };
			}
			else {
				F.line = 632;
			if (buf_44585[buf_44585_Idx] != null) { addChar(buf_44585[buf_44585_Idx], 45); } else { buf_44585[buf_44585_Idx] = [45, 0]; };
			}
			
			if ((hours_44675 < 10)) {
			F.line = 633;
			if (buf_44585[buf_44585_Idx] != null) { addChar(buf_44585[buf_44585_Idx], 48); } else { buf_44585[buf_44585_Idx] = [48, 0]; };
			}
			
			F.line = 634;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(cstrToNimstr((hours_44675)+"")); } else { buf_44585[buf_44585_Idx] = cstrToNimstr((hours_44675)+"");};
			F.line = 635;
			if (buf_44585[buf_44585_Idx] != null) { addChar(buf_44585[buf_44585_Idx], 58); } else { buf_44585[buf_44585_Idx] = [58, 0]; };
			if ((minutes_44677 < 10)) {
			F.line = 636;
			if (buf_44585[buf_44585_Idx] != null) { addChar(buf_44585[buf_44585_Idx], 48); } else { buf_44585[buf_44585_Idx] = [48, 0]; };
			}
			
			F.line = 637;
			if (buf_44585[buf_44585_Idx] != null) { buf_44585[buf_44585_Idx] = (buf_44585[buf_44585_Idx].slice(0, -1)).concat(cstrToNimstr((minutes_44677)+"")); } else { buf_44585[buf_44585_Idx] = cstrToNimstr((minutes_44677)+"");};
			break;
		case "":
			break;
		default: 
			F.line = 641;
			F.line = 2701;
			var e_44684 = null;
			F.line = 2702;
			e_44684 = {m_type: NTI3448, parent: null, name: null, message: null, trace: null, up: null};
			F.line = 2703;
			e_44684.message = nimCopy(null, (makeNimstrLit("Invalid format string: ").slice(0,-1)).concat(token_44583), NTI138);
			F.line = 2704;
			e_44684.parent = null;
			raiseException(e_44684, "ValueError");
			break;
		}
	framePtr = F.prev;

	
}

function format_44699(info_44701, f_44702) {
									var Tmp5;

	var result_44703 = [null];

	var F={procname:"times.format",prev:framePtr,filename:"lib/nim/pure/times.nim",line:0};
	framePtr = F;
		F.line = 683;
		result_44703[0] = nimCopy(null, makeNimstrLit(""), NTI138);
		F.line = 684;
		var i_44704 = 0;
		F.line = 685;
		var currentF_44705 = makeNimstrLit("");
		L1: do {
			F.line = 686;
				L2: while (true) {
				if (!true) break L2;
					F.line = 687;
					switch (f_44702[chckIndx(i_44704, 0, f_44702.length-1)-0]) {
					case 32:
					case 45:
					case 47:
					case 58:
					case 39:
					case 0:
					case 40:
					case 41:
					case 91:
					case 93:
					case 44:
						F.line = 689;
						formatToken_44580(info_44701, currentF_44705, result_44703, 0);
						F.line = 691;
						currentF_44705 = nimCopy(null, makeNimstrLit(""), NTI138);
						if ((f_44702[chckIndx(i_44704, 0, f_44702.length-1)-0] == 0)) {
						F.line = 692;
						break L1;
						}
						
						if ((f_44702[chckIndx(i_44704, 0, f_44702.length-1)-0] == 39)) {
						F.line = 695;
						i_44704 = addInt(i_44704, 1);
						L3: do {
							F.line = 696;
								L4: while (true) {
									if (!!((f_44702[chckIndx(i_44704, 0, f_44702.length-1)-0] == 39))) Tmp5 = false; else {										Tmp5 = (i_44704 < subInt((f_44702 != null ? f_44702.length-1 : 0), 1));									}								if (!Tmp5) break L4;
									F.line = 697;
									if (result_44703[0] != null) { addChar(result_44703[0], f_44702[chckIndx(i_44704, 0, f_44702.length-1)-0]); } else { result_44703[0] = [f_44702[chckIndx(i_44704, 0, f_44702.length-1)-0], 0]; };
									F.line = 698;
									i_44704 = addInt(i_44704, 1);
								}
						} while(false);
						}
						else {
							F.line = 699;
						if (result_44703[0] != null) { addChar(result_44703[0], f_44702[chckIndx(i_44704, 0, f_44702.length-1)-0]); } else { result_44703[0] = [f_44702[chckIndx(i_44704, 0, f_44702.length-1)-0], 0]; };
						}
						
						break;
					default: 
						if ((((currentF_44705 != null ? currentF_44705.length-1 : 0) < 1) || (currentF_44705[chckIndx((currentF_44705 != null ? (currentF_44705.length-2) : -1), 0, currentF_44705.length-1)-0] == f_44702[chckIndx(i_44704, 0, f_44702.length-1)-0]))) {
						F.line = 704;
						if (currentF_44705 != null) { addChar(currentF_44705, f_44702[chckIndx(i_44704, 0, f_44702.length-1)-0]); } else { currentF_44705 = [f_44702[chckIndx(i_44704, 0, f_44702.length-1)-0], 0]; };
						}
						else {
							F.line = 706;
							formatToken_44580(info_44701, currentF_44705, result_44703, 0);
							F.line = 707;
							i_44704 = subInt(i_44704, 1);
							F.line = 708;
							currentF_44705 = nimCopy(null, makeNimstrLit(""), NTI138);
						}
						
						break;
					}
					F.line = 710;
					i_44704 = addInt(i_44704, 1);
				}
		} while(false);
	framePtr = F.prev;

	return result_44703[0];

}

function mi_regist_77070(mi_77072) {
	var F={procname:"bars.mi_regist",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
		F.line = 47;
		if (gnt_bars_77047[0] != null) { gnt_bars_77047[0].push(mi_77072); } else { gnt_bars_77047[0] = [mi_77072]; };
		F.line = 48;
		mi_77072.idx = (gnt_bars_77047[0] != null ? gnt_bars_77047[0].length : 0);
		F.line = 49;
		debg_73036((makeNimstrLit("mi_regist: ").slice(0,-1)).concat(cstrToNimstr(((gnt_bars_77047[0] != null ? gnt_bars_77047[0].length : 0))+"")));
	framePtr = F.prev;

	
}

function idx_to_xmlid_78490(n_78492) {
	var result_78493 = null;

	var F={procname:"bars.idx_to_xmlid",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 219;
		result_78493 = toJSStr((makeNimstrLit("gntbar-").slice(0,-1)).concat(cstrToNimstr((n_78492)+"")));
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_78493;

}

function rawParseInt_26966(s_26968, b_26970, b_26970_Idx, start_26971) {
	var result_26972 = 0;

	var F={procname:"parseutils.rawParseInt",prev:framePtr,filename:"lib/nim/pure/parseutils.nim",line:0};
	framePtr = F;
		F.line = 213;
		var sign_26973 = -1;
		F.line = 214;
		var i_26974 = start_26971;
		if ((s_26968[chckIndx(i_26974, 0, s_26968.length-1)-0] == 43)) {
		F.line = 215;
		i_26974 = addInt(i_26974, 1);
		}
		else {
		if ((s_26968[chckIndx(i_26974, 0, s_26968.length-1)-0] == 45)) {
		F.line = 217;
		i_26974 = addInt(i_26974, 1);
		F.line = 218;
		sign_26973 = 1;
		}
		}
		if ((ConstSet2[s_26968[chckIndx(i_26974, 0, s_26968.length-1)-0]] != undefined)) {
		F.line = 220;
		b_26970[b_26970_Idx] = 0;
		L1: do {
			F.line = 221;
				L2: while (true) {
				if (!(ConstSet3[s_26968[chckIndx(i_26974, 0, s_26968.length-1)-0]] != undefined)) break L2;
					F.line = 222;
					b_26970[b_26970_Idx] = subInt(mulInt(b_26970[b_26970_Idx], 10), subInt(s_26968[chckIndx(i_26974, 0, s_26968.length-1)-0], 48));
					F.line = 223;
					i_26974 = addInt(i_26974, 1);
					L3: do {
						F.line = 224;
							L4: while (true) {
							if (!(s_26968[chckIndx(i_26974, 0, s_26968.length-1)-0] == 95)) break L4;
								F.line = 224;
								i_26974 = addInt(i_26974, 1);
							}
					} while(false);
				}
		} while(false);
		F.line = 225;
		b_26970[b_26970_Idx] = mulInt(b_26970[b_26970_Idx], sign_26973);
		F.line = 226;
		result_26972 = subInt(i_26974, start_26971);
		}
		
	framePtr = F.prev;

	return result_26972;

}

function npuParseBiggestInt(s_27051, number_27053, number_27053_Idx, start_27054) {
	var result_27055 = 0;

	var F={procname:"parseutils.parseBiggestInt",prev:framePtr,filename:"lib/nim/pure/parseutils.nim",line:0};
	framePtr = F;
		F.line = 234;
		var res_27056 = [0];
		F.line = 237;
		result_27055 = rawParseInt_26966(s_27051, res_27056, 0, start_27054);
		F.line = 238;
		number_27053[number_27053_Idx] = res_27056[0];
	framePtr = F.prev;

	return result_27055;

}

function npuParseInt(s_27061, number_27063, number_27063_Idx, start_27064) {
			var Tmp1;
				var Tmp2;

	var result_27065 = 0;

	var F={procname:"parseutils.parseInt",prev:framePtr,filename:"lib/nim/pure/parseutils.nim",line:0};
	framePtr = F;
		F.line = 245;
		var res_27066 = [0];
		F.line = 246;
		result_27065 = npuParseBiggestInt(s_27061, res_27066, 0, start_27064);
			if (!true) Tmp1 = false; else {				if ((res_27066[0] < -2147483648)) Tmp2 = true; else {					Tmp2 = (2147483647 < res_27066[0]);				}				Tmp1 = Tmp2;			}		if (Tmp1) {
		F.line = 249;
		F.line = 2701;
		var e_27093 = null;
		F.line = 2702;
		e_27093 = {m_type: NTI3442, parent: null, name: null, message: null, trace: null, up: null};
		F.line = 2703;
		e_27093.message = nimCopy(null, makeNimstrLit("overflow"), NTI138);
		F.line = 2704;
		e_27093.parent = null;
		raiseException(e_27093, "OverflowError");
		}
		else {
		if (!((result_27065 == 0))) {
		F.line = 251;
		number_27063[number_27063_Idx] = chckRange(res_27066[0], -2147483648, 2147483647);
		}
		}
	framePtr = F.prev;

	return result_27065;

}

function nsuParseInt(s_36667) {
			var Tmp1;

	var result_36668 = [0];

		var L_36670 = npuParseInt(s_36667, result_36668, 0, 0);
			if (!((L_36670 == (s_36667 != null ? s_36667.length-1 : 0)))) Tmp1 = true; else {				Tmp1 = (L_36670 == 0);			}		if (Tmp1) {
		var e_36677 = null;
		e_36677 = {m_type: NTI3448, parent: null, name: null, message: null, trace: null, up: null};
		e_36677.message = nimCopy(null, (makeNimstrLit("invalid integer: ").slice(0,-1)).concat(s_36667), NTI138);
		e_36677.parent = null;
		raiseException(e_36677, "ValueError");
		}
		

	return result_36668[0];

}

function nsuToLowerAsciiChar(c_34785) {
	var result_34786 = 0;

	var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"lib/nim/pure/strutils.nim",line:0};
	framePtr = F;
		if ((ConstSet4[c_34785] != undefined)) {
		F.line = 210;
		result_34786 = chckRange(addInt(c_34785, 32), 0, 255);
		}
		else {
			F.line = 212;
			result_34786 = c_34785;
		}
		
	framePtr = F.prev;

	return result_34786;

}

function nsuToLowerAsciiStr(s_34824) {
	var result_34825 = null;

	var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"lib/nim/pure/strutils.nim",line:0};
	framePtr = F;
		F.line = 221;
		result_34825 = nimCopy(null, mnewString(chckRange((s_34824 != null ? s_34824.length-1 : 0), 0, 2147483647)), NTI138);
		L1: do {
			F.line = 222;
			var i_34835 = 0;
			F.line = 1983;
			var colontmp__34837 = 0;
			F.line = 222;
			colontmp__34837 = subInt((s_34824 != null ? s_34824.length-1 : 0), 1);
			F.line = 1986;
			var res_34840 = 0;
			L2: do {
				F.line = 1987;
					L3: while (true) {
					if (!(res_34840 <= colontmp__34837)) break L3;
						F.line = 1988;
						i_34835 = res_34840;
						F.line = 223;
						result_34825[chckIndx(i_34835, 0, result_34825.length-1)-0] = nsuToLowerAsciiChar(s_34824[chckIndx(i_34835, 0, s_34824.length-1)-0]);
						F.line = 1989;
						res_34840 = addInt(res_34840, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_34825;

}

function nsuCmpIgnoreCase(a_35037, b_35038) {
	var result_35039 = 0;

	var F={procname:"strutils.cmpIgnoreCase",prev:framePtr,filename:"lib/nim/pure/strutils.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 410;
		var i_35040 = 0;
		F.line = 411;
		var m_35041 = nimMin((a_35037 != null ? a_35037.length-1 : 0), (b_35038 != null ? b_35038.length-1 : 0));
		L1: do {
			F.line = 412;
				L2: while (true) {
				if (!(i_35040 < m_35041)) break L2;
					F.line = 413;
					result_35039 = subInt(nsuToLowerAsciiChar(a_35037[chckIndx(i_35040, 0, a_35037.length-1)-0]), nsuToLowerAsciiChar(b_35038[chckIndx(i_35040, 0, b_35038.length-1)-0]));
					if (!((result_35039 == 0))) {
					F.line = 414;
					break BeforeRet;
					}
					
					F.line = 415;
					i_35040 = addInt(i_35040, 1);
				}
		} while(false);
		F.line = 416;
		result_35039 = subInt((a_35037 != null ? a_35037.length-1 : 0), (b_35038 != null ? b_35038.length-1 : 0));
	} while (false);
	framePtr = F.prev;

	return result_35039;

}

function parseToken_44805(info_44808, token_44809, value_44810, j_44812, j_44812_Idx) {
				var Tmp1;
				var Tmp2;
				var Tmp3;
				var Tmp4;
				var Tmp5;
				var Tmp6;
				var Tmp7;
				var Tmp8;
				var Tmp9;
				var Tmp10;
				var Tmp11;
				var Tmp12;
				var Tmp13;
				var Tmp14;
				var Tmp15;
				var Tmp16;
				var Tmp17;
				var Tmp18;
				var Tmp19;
				var Tmp20;
				var Tmp21;
				var Tmp22;
				var Tmp23;

	var F={procname:"times.parseToken",prev:framePtr,filename:"lib/nim/pure/times.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 728;
		var sv_44813 = [0];
		F.line = 729;
		switch (toJSStr(token_44809)) {
		case "d":
			F.line = 731;
			var pd_44824 = npuParseInt(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 1))), sv_44813, 0, 0);
			F.line = 732;
			info_44808.monthday = chckRange(sv_44813[0], 1, 31);
			F.line = 733;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], pd_44824);
			break;
		case "dd":
			F.line = 735;
			info_44808.monthday = chckRange(nsuParseInt(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 1)))), 1, 31);
			F.line = 736;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 2);
			break;
		case "ddd":
			F.line = 738;
			switch (toJSStr(nsuToLowerAsciiStr(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 2)))))) {
			case "sun":
				F.line = 739;
				info_44808.weekday = 6;
				break;
			case "mon":
				F.line = 740;
				info_44808.weekday = 0;
				break;
			case "tue":
				F.line = 741;
				info_44808.weekday = 1;
				break;
			case "wed":
				F.line = 742;
				info_44808.weekday = 2;
				break;
			case "thu":
				F.line = 743;
				info_44808.weekday = 3;
				break;
			case "fri":
				F.line = 744;
				info_44808.weekday = 4;
				break;
			case "sat":
				F.line = 745;
				info_44808.weekday = 5;
				break;
			default: 
				F.line = 747;
				F.line = 2701;
				var e_44876 = null;
				F.line = 2702;
				e_44876 = {m_type: NTI3448, parent: null, name: null, message: null, trace: null, up: null};
				F.line = 2703;
				e_44876.message = nimCopy(null, (makeNimstrLit("Couldn\'t parse day of week (ddd), got: ").slice(0,-1)).concat(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 2)))), NTI138);
				F.line = 2704;
				e_44876.parent = null;
				raiseException(e_44876, "ValueError");
				break;
			}
			F.line = 749;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 3);
			break;
		case "dddd":
				if (!(addInt(j_44812[j_44812_Idx], 6) <= (value_44810 != null ? value_44810.length-1 : 0))) Tmp1 = false; else {					Tmp1 = (nsuCmpIgnoreCase(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 5))), makeNimstrLit("sunday")) == 0);				}			if (Tmp1) {
			F.line = 752;
			info_44808.weekday = 6;
			F.line = 753;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 6);
			}
			else {
				if (!(addInt(j_44812[j_44812_Idx], 6) <= (value_44810 != null ? value_44810.length-1 : 0))) Tmp2 = false; else {					Tmp2 = (nsuCmpIgnoreCase(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 5))), makeNimstrLit("monday")) == 0);				}			if (Tmp2) {
			F.line = 755;
			info_44808.weekday = 0;
			F.line = 756;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 6);
			}
			else {
				if (!(addInt(j_44812[j_44812_Idx], 7) <= (value_44810 != null ? value_44810.length-1 : 0))) Tmp3 = false; else {					Tmp3 = (nsuCmpIgnoreCase(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 6))), makeNimstrLit("tuesday")) == 0);				}			if (Tmp3) {
			F.line = 758;
			info_44808.weekday = 1;
			F.line = 759;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 7);
			}
			else {
				if (!(addInt(j_44812[j_44812_Idx], 9) <= (value_44810 != null ? value_44810.length-1 : 0))) Tmp4 = false; else {					Tmp4 = (nsuCmpIgnoreCase(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 8))), makeNimstrLit("wednesday")) == 0);				}			if (Tmp4) {
			F.line = 761;
			info_44808.weekday = 2;
			F.line = 762;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 9);
			}
			else {
				if (!(addInt(j_44812[j_44812_Idx], 8) <= (value_44810 != null ? value_44810.length-1 : 0))) Tmp5 = false; else {					Tmp5 = (nsuCmpIgnoreCase(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 7))), makeNimstrLit("thursday")) == 0);				}			if (Tmp5) {
			F.line = 764;
			info_44808.weekday = 3;
			F.line = 765;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 8);
			}
			else {
				if (!(addInt(j_44812[j_44812_Idx], 6) <= (value_44810 != null ? value_44810.length-1 : 0))) Tmp6 = false; else {					Tmp6 = (nsuCmpIgnoreCase(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 5))), makeNimstrLit("friday")) == 0);				}			if (Tmp6) {
			F.line = 767;
			info_44808.weekday = 4;
			F.line = 768;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 6);
			}
			else {
				if (!(addInt(j_44812[j_44812_Idx], 8) <= (value_44810 != null ? value_44810.length-1 : 0))) Tmp7 = false; else {					Tmp7 = (nsuCmpIgnoreCase(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 7))), makeNimstrLit("saturday")) == 0);				}			if (Tmp7) {
			F.line = 770;
			info_44808.weekday = 5;
			F.line = 771;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 8);
			}
			else {
				F.line = 773;
				F.line = 2701;
				var e_45026 = null;
				F.line = 2702;
				e_45026 = {m_type: NTI3448, parent: null, name: null, message: null, trace: null, up: null};
				F.line = 2703;
				e_45026.message = nimCopy(null, (makeNimstrLit("Couldn\'t parse day of week (dddd), got: ").slice(0,-1)).concat(value_44810), NTI138);
				F.line = 2704;
				e_45026.parent = null;
				raiseException(e_45026, "ValueError");
			}
			}}}}}}
			break;
		case "h":
		case "H":
			F.line = 776;
			var pd_45045 = npuParseInt(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 1))), sv_44813, 0, 0);
			F.line = 777;
			info_44808.hour = chckRange(sv_44813[0], 0, 23);
			F.line = 778;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], pd_45045);
			break;
		case "hh":
		case "HH":
			F.line = 780;
			info_44808.hour = chckRange(nsuParseInt(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 1)))), 0, 23);
			F.line = 781;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 2);
			break;
		case "m":
			F.line = 783;
			var pd_45083 = npuParseInt(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 1))), sv_44813, 0, 0);
			F.line = 784;
			info_44808.minute = chckRange(sv_44813[0], 0, 59);
			F.line = 785;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], pd_45083);
			break;
		case "mm":
			F.line = 787;
			info_44808.minute = chckRange(nsuParseInt(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 1)))), 0, 59);
			F.line = 788;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 2);
			break;
		case "M":
			F.line = 790;
			var pd_45121 = npuParseInt(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 1))), sv_44813, 0, 0);
			F.line = 791;
			info_44808.month = chckRange(subInt(sv_44813[0], 1), 0, 11);
			F.line = 792;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], pd_45121);
			break;
		case "MM":
			F.line = 794;
			var month_45140 = nsuParseInt(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 1))));
			F.line = 795;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 2);
			F.line = 796;
			info_44808.month = chckRange(subInt(month_45140, 1), 0, 11);
			break;
		case "MMM":
			F.line = 798;
			switch (toJSStr(nsuToLowerAsciiStr(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 2)))))) {
			case "jan":
				F.line = 799;
				info_44808.month = 0;
				break;
			case "feb":
				F.line = 800;
				info_44808.month = 1;
				break;
			case "mar":
				F.line = 801;
				info_44808.month = 2;
				break;
			case "apr":
				F.line = 802;
				info_44808.month = 3;
				break;
			case "may":
				F.line = 803;
				info_44808.month = 4;
				break;
			case "jun":
				F.line = 804;
				info_44808.month = 5;
				break;
			case "jul":
				F.line = 805;
				info_44808.month = 6;
				break;
			case "aug":
				F.line = 806;
				info_44808.month = 7;
				break;
			case "sep":
				F.line = 807;
				info_44808.month = 8;
				break;
			case "oct":
				F.line = 808;
				info_44808.month = 9;
				break;
			case "nov":
				F.line = 809;
				info_44808.month = 10;
				break;
			case "dec":
				F.line = 810;
				info_44808.month = 11;
				break;
			default: 
				F.line = 812;
				F.line = 2701;
				var e_45165 = null;
				F.line = 2702;
				e_45165 = {m_type: NTI3448, parent: null, name: null, message: null, trace: null, up: null};
				F.line = 2703;
				e_45165.message = nimCopy(null, (makeNimstrLit("Couldn\'t parse month (MMM), got: ").slice(0,-1)).concat(value_44810), NTI138);
				F.line = 2704;
				e_45165.parent = null;
				raiseException(e_45165, "ValueError");
				break;
			}
			F.line = 814;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 3);
			break;
		case "MMMM":
				if (!(addInt(j_44812[j_44812_Idx], 7) <= (value_44810 != null ? value_44810.length-1 : 0))) Tmp8 = false; else {					Tmp8 = (nsuCmpIgnoreCase(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 6))), makeNimstrLit("january")) == 0);				}			if (Tmp8) {
			F.line = 817;
			info_44808.month = 0;
			F.line = 818;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 7);
			}
			else {
				if (!(addInt(j_44812[j_44812_Idx], 8) <= (value_44810 != null ? value_44810.length-1 : 0))) Tmp9 = false; else {					Tmp9 = (nsuCmpIgnoreCase(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 7))), makeNimstrLit("february")) == 0);				}			if (Tmp9) {
			F.line = 820;
			info_44808.month = 1;
			F.line = 821;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 8);
			}
			else {
				if (!(addInt(j_44812[j_44812_Idx], 5) <= (value_44810 != null ? value_44810.length-1 : 0))) Tmp10 = false; else {					Tmp10 = (nsuCmpIgnoreCase(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 4))), makeNimstrLit("march")) == 0);				}			if (Tmp10) {
			F.line = 823;
			info_44808.month = 2;
			F.line = 824;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 5);
			}
			else {
				if (!(addInt(j_44812[j_44812_Idx], 5) <= (value_44810 != null ? value_44810.length-1 : 0))) Tmp11 = false; else {					Tmp11 = (nsuCmpIgnoreCase(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 4))), makeNimstrLit("april")) == 0);				}			if (Tmp11) {
			F.line = 826;
			info_44808.month = 3;
			F.line = 827;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 5);
			}
			else {
				if (!(addInt(j_44812[j_44812_Idx], 3) <= (value_44810 != null ? value_44810.length-1 : 0))) Tmp12 = false; else {					Tmp12 = (nsuCmpIgnoreCase(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 2))), makeNimstrLit("may")) == 0);				}			if (Tmp12) {
			F.line = 829;
			info_44808.month = 4;
			F.line = 830;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 3);
			}
			else {
				if (!(addInt(j_44812[j_44812_Idx], 4) <= (value_44810 != null ? value_44810.length-1 : 0))) Tmp13 = false; else {					Tmp13 = (nsuCmpIgnoreCase(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 3))), makeNimstrLit("june")) == 0);				}			if (Tmp13) {
			F.line = 832;
			info_44808.month = 5;
			F.line = 833;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 4);
			}
			else {
				if (!(addInt(j_44812[j_44812_Idx], 4) <= (value_44810 != null ? value_44810.length-1 : 0))) Tmp14 = false; else {					Tmp14 = (nsuCmpIgnoreCase(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 3))), makeNimstrLit("july")) == 0);				}			if (Tmp14) {
			F.line = 835;
			info_44808.month = 6;
			F.line = 836;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 4);
			}
			else {
				if (!(addInt(j_44812[j_44812_Idx], 6) <= (value_44810 != null ? value_44810.length-1 : 0))) Tmp15 = false; else {					Tmp15 = (nsuCmpIgnoreCase(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 5))), makeNimstrLit("august")) == 0);				}			if (Tmp15) {
			F.line = 838;
			info_44808.month = 7;
			F.line = 839;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 6);
			}
			else {
				if (!(addInt(j_44812[j_44812_Idx], 9) <= (value_44810 != null ? value_44810.length-1 : 0))) Tmp16 = false; else {					Tmp16 = (nsuCmpIgnoreCase(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 8))), makeNimstrLit("september")) == 0);				}			if (Tmp16) {
			F.line = 841;
			info_44808.month = 8;
			F.line = 842;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 9);
			}
			else {
				if (!(addInt(j_44812[j_44812_Idx], 7) <= (value_44810 != null ? value_44810.length-1 : 0))) Tmp17 = false; else {					Tmp17 = (nsuCmpIgnoreCase(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 6))), makeNimstrLit("october")) == 0);				}			if (Tmp17) {
			F.line = 844;
			info_44808.month = 9;
			F.line = 845;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 7);
			}
			else {
				if (!(addInt(j_44812[j_44812_Idx], 8) <= (value_44810 != null ? value_44810.length-1 : 0))) Tmp18 = false; else {					Tmp18 = (nsuCmpIgnoreCase(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 7))), makeNimstrLit("november")) == 0);				}			if (Tmp18) {
			F.line = 847;
			info_44808.month = 10;
			F.line = 848;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 8);
			}
			else {
				if (!(addInt(j_44812[j_44812_Idx], 8) <= (value_44810 != null ? value_44810.length-1 : 0))) Tmp19 = false; else {					Tmp19 = (nsuCmpIgnoreCase(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 7))), makeNimstrLit("december")) == 0);				}			if (Tmp19) {
			F.line = 850;
			info_44808.month = 11;
			F.line = 851;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 8);
			}
			else {
				F.line = 853;
				F.line = 2701;
				var e_45405 = null;
				F.line = 2702;
				e_45405 = {m_type: NTI3448, parent: null, name: null, message: null, trace: null, up: null};
				F.line = 2703;
				e_45405.message = nimCopy(null, (makeNimstrLit("Couldn\'t parse month (MMMM), got: ").slice(0,-1)).concat(value_44810), NTI138);
				F.line = 2704;
				e_45405.parent = null;
				raiseException(e_45405, "ValueError");
			}
			}}}}}}}}}}}
			break;
		case "s":
			F.line = 856;
			var pd_45424 = npuParseInt(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 1))), sv_44813, 0, 0);
			F.line = 857;
			info_44808.second = chckRange(sv_44813[0], 0, 61);
			F.line = 858;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], pd_45424);
			break;
		case "ss":
			F.line = 860;
			info_44808.second = chckRange(nsuParseInt(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 1)))), 0, 61);
			F.line = 861;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 2);
			break;
		case "t":
				if (!(value_44810[chckIndx(j_44812[j_44812_Idx], 0, value_44810.length-1)-0] == 80)) Tmp21 = false; else {					Tmp21 = (0 < info_44808.hour);				}				if (!Tmp21) Tmp20 = false; else {					Tmp20 = (info_44808.hour < 12);				}			if (Tmp20) {
			F.line = 864;
			info_44808.hour = addInt(info_44808.hour, 12);
			}
			
			F.line = 865;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 1);
			break;
		case "tt":
				if (!eqStrings(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 1))), makeNimstrLit("PM"))) Tmp23 = false; else {					Tmp23 = (0 < info_44808.hour);				}				if (!Tmp23) Tmp22 = false; else {					Tmp22 = (info_44808.hour < 12);				}			if (Tmp22) {
			F.line = 868;
			info_44808.hour = addInt(info_44808.hour, 12);
			}
			
			F.line = 869;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 2);
			break;
		case "yy":
			F.line = 872;
			var year_45506 = nsuParseInt(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 1))));
			F.line = 873;
			var thisCen_45508 = divInt(getLocalTime_43644(getTime_43642()).year, 100);
			F.line = 874;
			info_44808.year = addInt(mulInt(thisCen_45508, 100), year_45506);
			F.line = 875;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 2);
			break;
		case "yyyy":
			F.line = 877;
			info_44808.year = nsuParseInt(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 3))));
			F.line = 878;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 4);
			break;
		case "z":
			F.line = 880;
			info_44808.isDST = false;
			if ((value_44810[chckIndx(j_44812[j_44812_Idx], 0, value_44810.length-1)-0] == 43)) {
			F.line = 882;
			info_44808.timezone = subInt(0, mulInt(nsuParseInt(nimCharToStr(value_44810[chckIndx(addInt(j_44812[j_44812_Idx], 1), 0, value_44810.length-1)-0])), 3600));
			}
			else {
			if ((value_44810[chckIndx(j_44812[j_44812_Idx], 0, value_44810.length-1)-0] == 45)) {
			F.line = 884;
			info_44808.timezone = mulInt(nsuParseInt(nimCharToStr(value_44810[chckIndx(addInt(j_44812[j_44812_Idx], 1), 0, value_44810.length-1)-0])), 3600);
			}
			else {
			if ((value_44810[chckIndx(j_44812[j_44812_Idx], 0, value_44810.length-1)-0] == 90)) {
			F.line = 886;
			info_44808.timezone = 0;
			F.line = 887;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 1);
			F.line = 888;
			break BeforeRet;
			}
			else {
				F.line = 890;
				F.line = 2701;
				var e_45552 = null;
				F.line = 2702;
				e_45552 = {m_type: NTI3448, parent: null, name: null, message: null, trace: null, up: null};
				F.line = 2703;
				e_45552.message = nimCopy(null, (makeNimstrLit("Couldn\'t parse timezone offset (z), got: ").slice(0,-1)).concat([value_44810[chckIndx(j_44812[j_44812_Idx], 0, value_44810.length-1)-0], 0]), NTI138);
				F.line = 2704;
				e_45552.parent = null;
				raiseException(e_45552, "ValueError");
			}
			}}
			F.line = 892;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 2);
			break;
		case "zz":
			F.line = 894;
			info_44808.isDST = false;
			if ((value_44810[chckIndx(j_44812[j_44812_Idx], 0, value_44810.length-1)-0] == 43)) {
			F.line = 896;
			info_44808.timezone = subInt(0, mulInt(nsuParseInt(X5BX5D__21642(value_44810, dotdot__37462(addInt(j_44812[j_44812_Idx], 1), addInt(j_44812[j_44812_Idx], 2)))), 3600));
			}
			else {
			if ((value_44810[chckIndx(j_44812[j_44812_Idx], 0, value_44810.length-1)-0] == 45)) {
			F.line = 898;
			info_44808.timezone = mulInt(nsuParseInt(X5BX5D__21642(value_44810, dotdot__37462(addInt(j_44812[j_44812_Idx], 1), addInt(j_44812[j_44812_Idx], 2)))), 3600);
			}
			else {
			if ((value_44810[chckIndx(j_44812[j_44812_Idx], 0, value_44810.length-1)-0] == 90)) {
			F.line = 900;
			info_44808.timezone = 0;
			F.line = 901;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 1);
			F.line = 902;
			break BeforeRet;
			}
			else {
				F.line = 904;
				F.line = 2701;
				var e_45603 = null;
				F.line = 2702;
				e_45603 = {m_type: NTI3448, parent: null, name: null, message: null, trace: null, up: null};
				F.line = 2703;
				e_45603.message = nimCopy(null, (makeNimstrLit("Couldn\'t parse timezone offset (zz), got: ").slice(0,-1)).concat([value_44810[chckIndx(j_44812[j_44812_Idx], 0, value_44810.length-1)-0], 0]), NTI138);
				F.line = 2704;
				e_45603.parent = null;
				raiseException(e_45603, "ValueError");
			}
			}}
			F.line = 906;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 3);
			break;
		case "zzz":
			F.line = 908;
			info_44808.isDST = false;
			F.line = 909;
			var factor_45621 = 0;
			if ((value_44810[chckIndx(j_44812[j_44812_Idx], 0, value_44810.length-1)-0] == 43)) {
			F.line = 910;
			factor_45621 = -1;
			}
			else {
			if ((value_44810[chckIndx(j_44812[j_44812_Idx], 0, value_44810.length-1)-0] == 45)) {
			F.line = 911;
			factor_45621 = 1;
			}
			else {
			if ((value_44810[chckIndx(j_44812[j_44812_Idx], 0, value_44810.length-1)-0] == 90)) {
			F.line = 913;
			info_44808.timezone = 0;
			F.line = 914;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 1);
			F.line = 915;
			break BeforeRet;
			}
			else {
				F.line = 917;
				F.line = 2701;
				var e_45637 = null;
				F.line = 2702;
				e_45637 = {m_type: NTI3448, parent: null, name: null, message: null, trace: null, up: null};
				F.line = 2703;
				e_45637.message = nimCopy(null, (makeNimstrLit("Couldn\'t parse timezone offset (zzz), got: ").slice(0,-1)).concat([value_44810[chckIndx(j_44812[j_44812_Idx], 0, value_44810.length-1)-0], 0]), NTI138);
				F.line = 2704;
				e_45637.parent = null;
				raiseException(e_45637, "ValueError");
			}
			}}
			F.line = 919;
			info_44808.timezone = mulInt(mulInt(factor_45621, nsuParseInt(X5BX5D__21642(value_44810, dotdot__37462(addInt(j_44812[j_44812_Idx], 1), addInt(j_44812[j_44812_Idx], 2))))), 3600);
			F.line = 920;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 4);
			F.line = 921;
			info_44808.timezone = addInt(info_44808.timezone, mulInt(mulInt(factor_45621, nsuParseInt(X5BX5D__21642(value_44810, dotdot__37462(j_44812[j_44812_Idx], addInt(j_44812[j_44812_Idx], 1))))), 60));
			F.line = 922;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], 2);
			break;
		default: 
			F.line = 925;
			j_44812[j_44812_Idx] = addInt(j_44812[j_44812_Idx], (token_44809 != null ? token_44809.length-1 : 0));
			break;
		}
	} while (false);
	framePtr = F.prev;

	
}

function sysFatal_22421(message_22427) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"lib/nim/system.nim",line:0};
	framePtr = F;
		F.line = 2721;
		var e_22429 = null;
		F.line = 2722;
		e_22429 = {m_type: NTI3446, parent: null, name: null, message: null, trace: null, up: null};
		F.line = 2723;
		e_22429.message = nimCopy(null, message_22427, NTI138);
		F.line = 2724;
		raiseException(e_22429, "AssertionError");
	framePtr = F.prev;

	
}

function raiseAssert_22416(msg_22418) {
	var F={procname:"system.raiseAssert",prev:framePtr,filename:"lib/nim/system.nim",line:0};
	framePtr = F;
		F.line = 3605;
		sysFatal_22421(msg_22418);
	framePtr = F.prev;

	
}

function failedAssertImpl_22439(msg_22441) {
	var F={procname:"system.failedAssertImpl",prev:framePtr,filename:"lib/nim/system.nim",line:0};
	framePtr = F;
		F.line = 3613;
		raiseAssert_22416(msg_22441);
	framePtr = F.prev;

	
}

function isNimException_13253() {
		return lastJSError.m_type;

	
}

function dollar__44747(timeInfo_44749) {
	var result_44750 = null;

	var F={procname:"times.$",prev:framePtr,filename:"lib/nim/pure/times.nim",line:0};
	framePtr = F;
		F.line = 715;
++excHandler;
		try {
		F.line = 716;
		result_44750 = nimCopy(null, format_44699(timeInfo_44749, makeNimstrLit("yyyy-MM-dd\'T\'HH:mm:sszzz")), NTI138);
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
		framePtr = F;
		if (lastJSError && (isObj(lastJSError.m_type, NTI3448))) {
		if (true) {
		F.line = 717;
		failedAssertImpl_22439(makeNimstrLit("false "));
		}
		
		}
		else {
			reraiseException();
		}
lastJSError = prevJSError;
		} finally {
		framePtr = F;
		}
	framePtr = F.prev;

	return result_44750;

}

function toTime_43653(timeInfo_43655) {
	var result_46106 = 0.0;

	var F={procname:"times.toTime",prev:framePtr,filename:"lib/nim/pure/times.nim",line:0};
	framePtr = F;
		F.line = 1368;
		result_46106 = new Date(toJSStr(dollar__44747(timeInfo_43655)));
	framePtr = F.prev;

	return result_46106;

}

function parse_45708(value_45710, layout_45711) {
									var Tmp5;

	var result_45712 = {m_type: NTI43602, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isDST: false, timezone: 0};

	var F={procname:"times.parse",prev:framePtr,filename:"lib/nim/pure/times.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 967;
		var i_45713 = 0;
		F.line = 968;
		var j_45714 = [0];
		F.line = 969;
		var token_45715 = makeNimstrLit("");
		F.line = 971;
		var info_45716 = [getLocalTime_43644(getTime_43642())];
		F.line = 972;
		info_45716[0].hour = 0;
		F.line = 973;
		info_45716[0].minute = 0;
		F.line = 974;
		info_45716[0].second = 0;
		F.line = 975;
		info_45716[0].isDST = true;
		L1: do {
			F.line = 977;
				L2: while (true) {
				if (!true) break L2;
					F.line = 978;
					switch (layout_45711[chckIndx(i_45713, 0, layout_45711.length-1)-0]) {
					case 32:
					case 45:
					case 47:
					case 58:
					case 39:
					case 0:
					case 40:
					case 41:
					case 91:
					case 93:
					case 44:
						if ((0 < (token_45715 != null ? token_45715.length-1 : 0))) {
						F.line = 981;
						parseToken_44805(info_45716[0], token_45715, value_45710, j_45714, 0);
						}
						
						F.line = 983;
						token_45715 = nimCopy(null, makeNimstrLit(""), NTI138);
						if ((layout_45711[chckIndx(i_45713, 0, layout_45711.length-1)-0] == 0)) {
						F.line = 985;
						break L1;
						}
						
						if ((layout_45711[chckIndx(i_45713, 0, layout_45711.length-1)-0] == 39)) {
						F.line = 989;
						i_45713 = addInt(i_45713, 1);
						L3: do {
							F.line = 990;
								L4: while (true) {
									if (!!((layout_45711[chckIndx(i_45713, 0, layout_45711.length-1)-0] == 39))) Tmp5 = false; else {										Tmp5 = (i_45713 < subInt((layout_45711 != null ? layout_45711.length-1 : 0), 1));									}								if (!Tmp5) break L4;
									F.line = 991;
									i_45713 = addInt(i_45713, 1);
									F.line = 992;
									j_45714[0] = addInt(j_45714[0], 1);
								}
						} while(false);
						F.line = 993;
						i_45713 = addInt(i_45713, 1);
						}
						else {
							F.line = 995;
							i_45713 = addInt(i_45713, 1);
							F.line = 996;
							j_45714[0] = addInt(j_45714[0], 1);
						}
						
						break;
					default: 
						if ((((token_45715 != null ? token_45715.length-1 : 0) < 1) || (token_45715[chckIndx((token_45715 != null ? (token_45715.length-2) : -1), 0, token_45715.length-1)-0] == layout_45711[chckIndx(i_45713, 0, layout_45711.length-1)-0]))) {
						F.line = 1000;
						if (token_45715 != null) { addChar(token_45715, layout_45711[chckIndx(i_45713, 0, layout_45711.length-1)-0]); } else { token_45715 = [layout_45711[chckIndx(i_45713, 0, layout_45711.length-1)-0], 0]; };
						F.line = 1001;
						i_45713 = addInt(i_45713, 1);
						}
						else {
							F.line = 1003;
							parseToken_44805(info_45716[0], token_45715, value_45710, j_45714, 0);
							F.line = 1004;
							token_45715 = nimCopy(null, makeNimstrLit(""), NTI138);
						}
						
						break;
					}
				}
		} while(false);
		if (info_45716[0].isDST) {
		F.line = 1009;
		var tmp_45785 = getLocalTime_43644(toTime_43653(info_45716[0]));
		F.line = 1011;
		info_45716[0].isDST = tmp_45785.isDST;
		}
		
		F.line = 1017;
		nimCopy(result_45712, getLocalTime_43644(toTime_43653(info_45716[0])), NTI43602);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_45712;

}

function slash__21607(x_21609, y_21610) {
	var result_21611 = 0.0;

	var F={procname:"system./",prev:framePtr,filename:"lib/nim/system.nim",line:0};
	framePtr = F;
		F.line = 3384;
		result_21611 = (x_21609 / y_21610);
	framePtr = F.prev;

	return result_21611;

}

function toSeconds_43664(time_43666) {
	var result_46126 = 0.0;

	var F={procname:"times.toSeconds",prev:framePtr,filename:"lib/nim/pure/times.nim",line:0};
	framePtr = F;
		F.line = 1382;
		result_46126 = slash__21607(time_43666.getTime(), 1000);
	framePtr = F.prev;

	return result_46126;

}

function mi_begin_78241(item_78243) {
	var result_78244 = 0.0;

	var F={procname:"bars.mi_begin",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (cfg_76027[0].mode_from_dtstring) {
		F.line = 114;
		var dt_78245 = parse_45708(cstrToNimstr(item_78243.beginstr), cstrToNimstr(cfg_76027[0].fmt_dtstring));
		F.line = 115;
		debg_73036((makeNimstrLit("mi_begin:dt:").slice(0,-1)).concat(format_44699(dt_78245, makeNimstrLit("yyyy-MM-dd"))));
		F.line = 116;
		result_78244 = toSeconds_43664(toTime_43653(dt_78245));
		break BeforeRet;
		}
		
		F.line = 117;
		result_78244 = item_78243.begin;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_78244;

}

function mi_end_78246(item_78248) {
	var result_78249 = 0.0;

	var F={procname:"bars.mi_end",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (cfg_76027[0].mode_from_dtstring) {
		F.line = 122;
		var dt_78250 = parse_45708(cstrToNimstr(item_78248.endstr), cstrToNimstr(cfg_76027[0].fmt_dtstring));
		F.line = 123;
		debg_73036((makeNimstrLit("mi_end:dt:").slice(0,-1)).concat(format_44699(dt_78250, makeNimstrLit("yyyy-MM-dd"))));
		F.line = 124;
		result_78249 = toSeconds_43664(toTime_43653(dt_78250));
		break BeforeRet;
		}
		
		F.line = 125;
		result_78249 = item_78248.fin;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_78249;

}

function to_75063(self_75065, x_75066) {
	var result_75067 = 0.0;

	var F={procname:"common.to",prev:framePtr,filename:"common.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 61;
		result_75067 = to_75057(self_75065, x_75066);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_75067;

}

function create_title_78495(g_78497, r_78498, t_78499) {
	var F={procname:"bars.create_title",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
		F.line = 223;
		var t_78500 = g_78497.text(t_78499);
		F.line = 224;
		t_78500.attr("class", "bar-title");
		F.line = 225;
		switch (cfg_76027[0].mode_title) {
		case 1:
			t_78500.x(r_78498.x()).y(r_78498.y());
			break;
		case 2:
			t_78500.x(addInt(r_78498.x(), r_78498.width())).y(r_78498.y());
			break;
		default: 
			F.line = 231;
			t_78500.x(0).y(r_78498.y());
			break;
		}
	framePtr = F.prev;

	
}

function regist_as_bar_78501(mi_78503) {
	var result_78504 = null;

	var F={procname:"bars.regist_as_bar",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
		F.line = 243;
		mi_regist_77070(mi_78503);
		F.line = 244;
		var idx_78505 = mi_78503.idx;
		F.line = 245;
		var cls_78506 = mi_78503.group;
		F.line = 246;
		var text_78507 = mi_78503.text;
		if ((idx_78505 < 0)) {
		F.line = 251;
		var TODO_78508 = 0;
		}
		
		F.line = 253;
		var svg_78509 = SVG.select("svg").get(0).doc();
		F.line = 254;
		var g_78510 = svg_78509.group();
		F.line = 255;
		g_78510.id(idx_to_xmlid_78490(idx_78505));
		F.line = 257;
		var t1_78511 = mi_begin_78241(mi_78503);
		F.line = 258;
		var t2_78512 = mi_end_78246(mi_78503);
		F.line = 259;
		var x1_78513 = to_75057(cfg_76027[0].sx, t1_78511);
		F.line = 260;
		var x2_78514 = to_75057(cfg_76027[0].sx, t2_78512);
		F.line = 261;
		var w_78515 = ((x2_78514 - x1_78513)|0);
		if ((w_78515 < 1)) {
		F.line = 263;
		w_78515 = 1;
		}
		
		F.line = 264;
		var y1_78516 = to_75063(cfg_76027[0].sy, mi_78503.idx);
		F.line = 265;
		var y2_78517 = to_75063(cfg_76027[0].sy, addInt(mi_78503.idx, 1));
		F.line = 266;
		var rc_78518 = g_78510.rect(w_78515, subInt(((y2_78517 - y1_78516)|0), mulInt(2, cfg_76027[0].H2)));
		F.line = 270;
		rc_78518.radius(cfg_76027[0].H3).x((x1_78513|0)).y(addInt((y1_78516|0), cfg_76027[0].H2)).attr("class", ("bars bar-" + cls_78506));
		F.line = 272;
		create_title_78495(g_78510, rc_78518, text_78507);
	framePtr = F.prev;

	return result_78504;

}

function create_new_bar_79001(t1_79003, t2_79004) {
	var F={procname:"gannt.create_new_bar",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((t1_79003 != null ? t1_79003.length : 0) < 1)) {
		F.line = 803;
		info_73048(makeNimstrLit("new_bar: title text is not specified."));
		F.line = 804;
		break BeforeRet;
		}
		
		F.line = 806;
		var x1_80821 = (to_75057(cfg_76027[0].rx, ((cfg_76027[0].X2 + cfg_76027[0].X1) / 3.0000000000000000e+00))|0);
		F.line = 807;
		var x2_80823 = (to_75057(cfg_76027[0].rx, ((cfg_76027[0].X2 + cfg_76027[0].X1) / 2.0000000000000000e+00))|0);
		F.line = 808;
		var d1_80824 = getLocalTime_43644(fromSeconds_43659(x1_80821));
		F.line = 809;
		var d2_80825 = getLocalTime_43644(fromSeconds_43659(x2_80823));
		F.line = 811;
		var bar_80826 = initBar_78272();
		F.line = 812;
		bar_80826.begin = x1_80821;
		F.line = 813;
		bar_80826.fin = x2_80823;
		F.line = 814;
		bar_80826.beginstr = toJSStr(format_44699(d1_80824, makeNimstrLit("yyyy/MM/dd hh:mm:ss")));
		F.line = 815;
		bar_80826.endstr = toJSStr(format_44699(d2_80825, makeNimstrLit("yyyy/MM/dd hh:mm:ss")));
		F.line = 816;
		bar_80826.idx = -1;
		F.line = 817;
		bar_80826.text = t1_79003;
		F.line = 818;
		bar_80826.group = "2";
		F.line = 819;
		regist_as_bar_78501(bar_80826);
	} while (false);
	framePtr = F.prev;

	
}

function on_drag_before_y_80478(ev_80480) {
	var result_80481 = false;

	var F={procname:"gannt.on_drag_before_y",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
		F.line = 504;
		var rc_80482 = ev_80480.originalTarget.getBBox();
		F.line = 505;
		drag_x_79031[0] = rc_80482.x;
		F.line = 506;
		drag_y_79032[0] = rc_80482.y;
		F.line = 507;
		drag_mode_79030[0] = 3;
	framePtr = F.prev;

	return result_80481;

}

function on_drag_before_x_80462(ev_80464) {
	var result_80465 = false;

	var F={procname:"gannt.on_drag_before_x",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
		F.line = 483;
		var svg_80466 = SVG.select("svg").get(0).doc();
		F.line = 484;
		var m_80467 = svg_80466.screenCTM();
		F.line = 485;
		var rc_80468 = ev_80464.originalTarget.getBBox();
		F.line = 486;
		var x_80469 = subInt(ev_80464.detail.event.pageX, (m_80467.e|0));
		F.line = 487;
		var y_80470 = subInt(ev_80464.detail.event.pageY, (m_80467.f|0));
		F.line = 488;
		var msg_80471 = (makeNimstrLit("-").slice(0,-1)).concat(cstrToNimstr((rc_80468.x)+""));
		F.line = 490;
		drag_x_79031[0] = rc_80468.x;
		F.line = 491;
		drag_y_79032[0] = rc_80468.y;
		if ((subInt(x_80469, rc_80468.x) < slash__21607(rc_80468.width, 5))) {
		F.line = 493;
		debg_73036((makeNimstrLit("left:").slice(0,-1)).concat(cstrToNimstr((ev_80464.detail.event.pageX)+"").slice(0,-1),msg_80471));
		F.line = 494;
		drag_mode_79030[0] = 1;
		}
		else {
		if ((slash__21607(mulInt(rc_80468.width, 4), 5) < subInt(x_80469, rc_80468.x))) {
		F.line = 496;
		debg_73036((makeNimstrLit("right:").slice(0,-1)).concat(cstrToNimstr((ev_80464.detail.event.pageX)+"").slice(0,-1),msg_80471));
		F.line = 497;
		drag_mode_79030[0] = 2;
		}
		else {
			F.line = 499;
			debg_73036((makeNimstrLit("center:").slice(0,-1)).concat(cstrToNimstr((ev_80464.detail.event.pageX)+"").slice(0,-1),msg_80471));
			F.line = 500;
			drag_mode_79030[0] = 0;
		}
		}
	framePtr = F.prev;

	return result_80465;

}

function on_drag_before_80483(ev_80485) {
		var Tmp1;

	var result_80486 = false;

	var F={procname:"gannt.on_drag_before",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
		F.line = 511;
		if (ev_80485.detail.event.shiftKey) {
		Tmp1 = on_drag_before_y_80478(ev_80485);
		}
		else {
		Tmp1 = on_drag_before_x_80462(ev_80485);
		}
		
		result_80486 = Tmp1;
	framePtr = F.prev;

	return result_80486;

}

function substrEq_35232(s_35234, pos_35235, substr_35236) {
	var result_35237 = false;

	BeforeRet: do {
		var i_35238 = 0;
		var length_35239 = (substr_35236 != null ? substr_35236.length-1 : 0);
		L1: do {
				L2: while (true) {
				if (!((i_35238 < length_35239) && (s_35234[(pos_35235 + i_35238)] == substr_35236[i_35238]))) break L2;
					i_35238 += 1;
				}
		} while(false);
		result_35237 = (i_35238 == length_35239);
		break BeforeRet;
	} while (false);

	return result_35237;

}

function nsuSplitString(s_36203, sep_36204, maxsplit_36205) {
	var result_36207 = null;

		if (!((0 < (sep_36204 != null ? sep_36204.length-1 : 0)))) {
		raiseAssert_22416(makeNimstrLit("\x0A  0 < len(sep) "));
		}
		
		result_36207 = nimCopy(null, [], NTI36224);
		L1: do {
			var x_36226 = null;
			var last_36241 = 0;
			var splits_36243 = maxsplit_36205;
			if ((0 < (s_36203 != null ? s_36203.length-1 : 0))) {
			L2: do {
					L3: while (true) {
					if (!(last_36241 <= (s_36203 != null ? s_36203.length-1 : 0))) break L3;
						var first_36245 = last_36241;
						L4: do {
								L5: while (true) {
								if (!((last_36241 < (s_36203 != null ? s_36203.length-1 : 0)) && !(substrEq_35232(s_36203, last_36241, sep_36204)))) break L5;
									last_36241 += 1;
								}
						} while(false);
						if ((splits_36243 == 0)) {
						last_36241 = (s_36203 != null ? s_36203.length-1 : 0);
						}
						
						x_36226 = (s_36203.slice(first_36245, ((last_36241 - 1))+1).concat(0));
						var Tmp6 = nimCopy(null, x_36226, NTI138);
						if (result_36207 != null) { result_36207.push(Tmp6); } else { result_36207 = [Tmp6]; };
						if ((splits_36243 == 0)) {
						break L2;
						}
						
						splits_36243 -= 1;
						last_36241 += (sep_36204 != null ? sep_36204.length-1 : 0);
					}
			} while(false);
			}
			
		} while(false);

	return result_36207;

}

function xmlid_to_idx_77138(src_77140) {
	var result_77141 = 0;

	var F={procname:"bars.xmlid_to_idx",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 71;
		var xmlid_77142 = cstrToNimstr(src_77140);
		F.line = 72;
		result_77141 = (parseFloat(toJSStr(nsuSplitString(xmlid_77142, makeNimstrLit("-"), -1)[chckIndx(1, 0, nsuSplitString(xmlid_77142, makeNimstrLit("-"), -1).length-1)-0]))|0);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_77141;

}

function info_73087(fmt_73089) {
	var F={procname:"logging.info",prev:framePtr,filename:"logging.nim",line:0};
	framePtr = F;
		F.line = 60;
		info_73048(cstrToNimstr(fmt_73089));
	framePtr = F.prev;

	
}

function rect_to_idx_77144(rc_77146) {
	var result_77147 = 0;

	var F={procname:"bars.rect_to_idx",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 75;
		var g_77148 = rc_77146.parent();
		F.line = 76;
		var id_77149 = g_77148.id();
		F.line = 78;
		var ret_77150 = xmlid_to_idx_77138(id_77149);
		F.line = 79;
		info_73087(((((("rect_to_idx: " + rc_77146.id()) + "->") + toJSStr(cstrToNimstr((ret_77150)+""))) + "(") + id_77149));
		F.line = 80;
		result_77147 = ret_77150;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_77147;

}

function initBar_from_rect_78470(rc_78472) {
	var result_78473 = null;

	var F={procname:"bars.initBar_from_rect",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 209;
		var bars_78474 = nimCopy(null, gnt_bars_77047[0], NTI77031);
		F.line = 210;
		var n_78475 = subInt(rect_to_idx_77144(rc_78472), 1);
		if ((n_78475 < 0)) {
		F.line = 212;
		n_78475 = 0;
		}
		else {
		if (((bars_78474 != null ? bars_78474.length : 0) <= n_78475)) {
		F.line = 214;
		n_78475 = subInt((bars_78474 != null ? bars_78474.length : 0), 1);
		}
		}
		F.line = 215;
		result_78473 = bars_78474[chckIndx(n_78475, 0, bars_78474.length-1)-0];
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_78473;

}

function delete_77184(x_77190, x_77190_Idx, i_77192) {
	var F={procname:"delete.delete",prev:framePtr,filename:"lib/nim/system.nim",line:0};
	framePtr = F;
		F.line = 1507;
		x_77190[x_77190_Idx].splice(i_77192, 1);
	framePtr = F.prev;

	
}

function insert_77611(x_77617, x_77617_Idx, item_77619, i_77621) {
	var F={procname:"insert.insert",prev:framePtr,filename:"lib/nim/system.nim",line:0};
	framePtr = F;
		F.line = 1528;
		var it_78001 = null;
		F.line = 1529;
		x_77617[x_77617_Idx].splice(i_77621, 0, it_78001);
		F.line = 1532;
		x_77617[x_77617_Idx][chckIndx(i_77621, 0, x_77617[x_77617_Idx].length-1)-0] = item_77619;
	framePtr = F.prev;

	
}

function move_to_idx_77177(self_77179, n_77180) {
	var F={procname:"bars.move_to_idx",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
		F.line = 97;
		var i_77181 = subInt(n_77180, 1);
		F.line = 98;
		var j_77182 = subInt(self_77179.idx, 1);
		F.line = 99;
		delete_77184(gnt_bars_77047, 0, chckRange(j_77182, 0, 2147483647));
		F.line = 100;
		info_73048((makeNimstrLit("move ").slice(0,-1)).concat(cstrToNimstr((j_77182)+"").slice(0,-1),makeNimstrLit(" element to ").slice(0,-1),cstrToNimstr((i_77181)+"")));
		if ((i_77181 < 1)) {
		F.line = 102;
		i_77181 = 0;
		F.line = 103;
		insert_77611(gnt_bars_77047, 0, self_77179, 0);
		}
		else {
		if ((i_77181 < (gnt_bars_77047[0] != null ? gnt_bars_77047[0].length : 0))) {
		F.line = 105;
		insert_77611(gnt_bars_77047, 0, self_77179, chckRange(i_77181, 0, 2147483647));
		}
		else {
			F.line = 107;
			i_77181 = subInt((gnt_bars_77047[0] != null ? gnt_bars_77047[0].length : 0), 1);
			F.line = 108;
			if (gnt_bars_77047[0] != null) { gnt_bars_77047[0].push(self_77179); } else { gnt_bars_77047[0] = [self_77179]; };
		}
		}
		F.line = 109;
		self_77179.idx = addInt(i_77181, 1);
	framePtr = F.prev;

	
}

function bars_get_all_seq_77156() {
	var result_77159 = null;

	var F={procname:"bars.bars_get_all_seq",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 88;
		result_77159 = nimCopy(null, gnt_bars_77047[0], NTI77031);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_77159;

}

function mi_items_clear_77160() {
	var F={procname:"bars.mi_items_clear",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
		F.line = 92;
		gnt_bars_77047[0] = nimCopy(null, [], NTI77176);
	framePtr = F.prev;

	
}

function marker_arrow_74002(cont_74004) {
	var F={procname:"markers.marker_arrow",prev:framePtr,filename:"markers.nim",line:0};
	framePtr = F;
		F.line = 11;
		cont_74004.path("M0 0 L5 5 L0 10");
	framePtr = F.prev;

	
}

function marker_milestone_74005(cont_74007) {
	var F={procname:"markers.marker_milestone",prev:framePtr,filename:"markers.nim",line:0};
	framePtr = F;
		F.line = 15;
		cont_74007.path("M0 5 L5 10 L10 0");
	framePtr = F.prev;

	
}

function clear_svg_80663() {
	var F={procname:"gannt.clear_svg",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
		F.line = 691;
		var style_tag_80665 = jQuery("style:eq(1)");
		F.line = 692;
		var contents_80666 = style_tag_80665.text();
		F.line = 693;
		style_tag_80665.remove();
		F.line = 695;
		mi_items_clear_77160();
		F.line = 696;
		var svg_tag_80667 = SVG.select("svg").get(0);
		F.line = 697;
		svg_tag_80667.clear();
		F.line = 699;
		var g_80668 = svg_tag_80667.doc();
		F.line = 703;
		g_80668.defs().element("style").words(contents_80666);
		F.line = 706;
		var mk_80669 = g_80668.marker(10, 10, marker_arrow_74002);
		F.line = 707;
		mk_80669.id("marker-1");
		F.line = 708;
		mk_80669 = g_80668.marker(10, 10, marker_milestone_74005);
		F.line = 709;
		mk_80669.id("marker-2");
	framePtr = F.prev;

	
}

function min_from_78555(dat_78558, chooser_78562) {
	var result_78563 = 0.0;

	var F={procname:"bars.min_from",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 299;
		var cur_78564 = Infinity;
		L1: do {
			F.line = 300;
			var obj_78602 = null;
			F.line = 3639;
			var i_78608 = 0;
			F.line = 3640;
			var L_78610 = (dat_78558 != null ? dat_78558.length : 0);
			L2: do {
				F.line = 3641;
					L3: while (true) {
					if (!(i_78608 < L_78610)) break L3;
						F.line = 3642;
						obj_78602 = dat_78558[chckIndx(i_78608, 0, dat_78558.length-1)-0];
						F.line = 301;
						var v_78603 = chooser_78562(obj_78602);
						if ((v_78603 < cur_78564)) {
						F.line = 303;
						cur_78564 = v_78603;
						}
						
						F.line = 3643;
						i_78608 = addInt(i_78608, 1);
						if (!(((dat_78558 != null ? dat_78558.length : 0) == L_78610))) {
						F.line = 3644;
						failedAssertImpl_22439(makeNimstrLit("len(a) == L seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 304;
		result_78563 = cur_78564;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_78563;

}

function max_from_78611(dat_78614, chooser_78618) {
	var result_78619 = 0.0;

	var F={procname:"bars.max_from",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 309;
		var cur_78620 = -Infinity;
		L1: do {
			F.line = 310;
			var obj_78629 = null;
			F.line = 3639;
			var i_78635 = 0;
			F.line = 3640;
			var L_78637 = (dat_78614 != null ? dat_78614.length : 0);
			L2: do {
				F.line = 3641;
					L3: while (true) {
					if (!(i_78635 < L_78637)) break L3;
						F.line = 3642;
						obj_78629 = dat_78614[chckIndx(i_78635, 0, dat_78614.length-1)-0];
						F.line = 311;
						var v_78630 = chooser_78618(obj_78629);
						if ((cur_78620 < v_78630)) {
						F.line = 313;
						cur_78620 = v_78630;
						}
						
						F.line = 3643;
						i_78635 = addInt(i_78635, 1);
						if (!(((dat_78614 != null ? dat_78614.length : 0) == L_78637))) {
						F.line = 3644;
						failedAssertImpl_22439(makeNimstrLit("len(a) == L seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 314;
		result_78619 = cur_78620;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_78619;

}

function rect_black_80032(rect_80034, msg_80035) {
	var F={procname:"gannt.rect_black",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 420;
		rect_80034.fill("none").stroke({color: "#000", width: 2, opacity: 1.0000000000000000e+00});
		if ((msg_80035 == "")) {
		F.line = 422;
		break BeforeRet;
		}
		
		F.line = 423;
		debg_73036((cstrToNimstr(msg_80035).slice(0,-1)).concat(makeNimstrLit(": ").slice(0,-1),cstrToNimstr((rect_80034.x())+"").slice(0,-1),makeNimstrLit(",").slice(0,-1),cstrToNimstr((rect_80034.y())+"").slice(0,-1),makeNimstrLit("-").slice(0,-1),cstrToNimstr((rect_80034.width())+"").slice(0,-1),makeNimstrLit(",").slice(0,-1),cstrToNimstr((rect_80034.height())+"")));
	} while (false);
	framePtr = F.prev;

	
}

function minuseq__44302(x_44307, x_44307_Idx, y_44309) {
	var F={procname:"-=.-=",prev:framePtr,filename:"lib/nim/system.nim",line:0};
	framePtr = F;
		F.line = 3539;
		x_44307[x_44307_Idx] = (x_44307[x_44307_Idx] - y_44309);
	framePtr = F.prev;

	
}

function pluseq__40745(x_40750, x_40750_Idx, y_40752) {
	var F={procname:"+=.+=",prev:framePtr,filename:"lib/nim/system.nim",line:0};
	framePtr = F;
		F.line = 3534;
		x_40750[x_40750_Idx] = (x_40750[x_40750_Idx] + y_40752);
	framePtr = F.prev;

	
}

function toSeconds_44273(a_44275, interval_44276) {
	var result_44277 = [0.0];

	var F={procname:"times.toSeconds",prev:framePtr,filename:"lib/nim/pure/times.nim",line:0};
	framePtr = F;
		F.line = 366;
		var anew_44278 = nimCopy(null, a_44275, NTI43602);
		F.line = 367;
		var newinterv_44279 = nimCopy(null, interval_44276, NTI43604);
		F.line = 368;
		result_44277[0] = 0.0;
		F.line = 370;
		newinterv_44279.months = addInt(newinterv_44279.months, mulInt(interval_44276.years, 12));
		F.line = 371;
		var curMonth_44289 = anew_44278.month;
		if ((newinterv_44279.months < 0)) {
		L1: do {
			F.line = 373;
			var mth_44300 = 0;
			F.line = 1951;
			var colontmp__44437 = 0;
			F.line = 373;
			colontmp__44437 = mulInt(-1, newinterv_44279.months);
			F.line = 1957;
			var res_44440 = colontmp__44437;
			L2: do {
				F.line = 1958;
					L3: while (true) {
					if (!(1 <= res_44440)) break L3;
						F.line = 1959;
						mth_44300 = res_44440;
						F.line = 374;
						minuseq__44302(result_44277, 0, mulInt(mulInt(mulInt(getDaysInMonth_44259(curMonth_44289, anew_44278.year), 24), 60), 60));
						if ((curMonth_44289 == 0)) {
						F.line = 376;
						curMonth_44289 = 11;
						F.line = 377;
						anew_44278.year = subInt(anew_44278.year, 1);
						}
						else {
							F.line = 379;
						curMonth_44289 = subInt(curMonth_44289, 1);
						}
						
						F.line = 1960;
						res_44440 = subInt(res_44440, 1);
					}
			} while(false);
		} while(false);
		}
		else {
			L4: do {
				F.line = 381;
				var mth_44346 = 0;
				F.line = 1983;
				var colontmp__44446 = 0;
				F.line = 381;
				colontmp__44446 = newinterv_44279.months;
				F.line = 1986;
				var res_44449 = 1;
				L5: do {
					F.line = 1987;
						L6: while (true) {
						if (!(res_44449 <= colontmp__44446)) break L6;
							F.line = 1988;
							mth_44346 = res_44449;
							F.line = 382;
							pluseq__40745(result_44277, 0, mulInt(mulInt(mulInt(getDaysInMonth_44259(curMonth_44289, anew_44278.year), 24), 60), 60));
							if ((curMonth_44289 == 11)) {
							F.line = 384;
							curMonth_44289 = 0;
							F.line = 385;
							anew_44278.year = addInt(anew_44278.year, 1);
							}
							else {
								F.line = 387;
							curMonth_44289 = addInt(curMonth_44289, 1);
							}
							
							F.line = 1989;
							res_44449 = addInt(res_44449, 1);
						}
				} while(false);
			} while(false);
		}
		
		F.line = 388;
		pluseq__40745(result_44277, 0, mulInt(mulInt(mulInt(newinterv_44279.days, 24), 60), 60));
		F.line = 389;
		pluseq__40745(result_44277, 0, mulInt(mulInt(newinterv_44279.hours, 60), 60));
		F.line = 390;
		pluseq__40745(result_44277, 0, mulInt(newinterv_44279.minutes, 60));
		F.line = 391;
		pluseq__40745(result_44277, 0, newinterv_44279.seconds);
		F.line = 392;
		pluseq__40745(result_44277, 0, slash__21607(newinterv_44279.milliseconds, 1000));
	framePtr = F.prev;

	return result_44277[0];

}

function getGMTime_43647(t_43649) {
	var result_46072 = {m_type: NTI43602, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isDST: false, timezone: 0};

	var F={procname:"times.getGMTime",prev:framePtr,filename:"lib/nim/pure/times.nim",line:0};
	framePtr = F;
		F.line = 1354;
		result_46072.second = chckRange(t_43649.getUTCSeconds(), 0, 61);
		F.line = 1355;
		result_46072.minute = chckRange(t_43649.getUTCMinutes(), 0, 59);
		F.line = 1356;
		result_46072.hour = chckRange(t_43649.getUTCHours(), 0, 23);
		F.line = 1357;
		result_46072.monthday = chckRange(t_43649.getUTCDate(), 1, 31);
		F.line = 1358;
		result_46072.month = chckRange(t_43649.getUTCMonth(), 0, 11);
		F.line = 1359;
		result_46072.year = t_43649.getUTCFullYear();
		F.line = 1360;
		result_46072.weekday = weekDays_46014[chckIndx(t_43649.getUTCDay(), 0, weekDays_46014.length-1)-0];
		F.line = 1362;
		result_46072.yearday = subInt(result_46072.monthday, 1);
		L1: do {
			F.line = 1363;
			var month_46083 = 0;
			F.line = 3831;
			var colontmp__46094 = 0;
			F.line = 1363;
			colontmp__46094 = result_46072.month;
			F.line = 3832;
			var i_46097 = 0;
			L2: do {
				F.line = 3833;
					L3: while (true) {
					if (!(i_46097 < colontmp__46094)) break L3;
						F.line = 3834;
						month_46083 = i_46097;
						F.line = 1364;
						result_46072.yearday = addInt(result_46072.yearday, chckRange(getDaysInMonth_44259(month_46083, result_46072.year), 0, 365));
						F.line = 3835;
						i_46097 = addInt(i_46097, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_46072;

}

function plus__44457(a_44459, interval_44460) {
	var result_44461 = {m_type: NTI43602, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isDST: false, timezone: 0};

	var F={procname:"times.+",prev:framePtr,filename:"lib/nim/pure/times.nim",line:0};
	framePtr = F;
		F.line = 399;
		var t_44462 = toSeconds_43664(toTime_43653(a_44459));
		F.line = 400;
		var secs_44463 = toSeconds_44273(a_44459, interval_44460);
		if ((a_44459.timezone == 0)) {
		F.line = 402;
		nimCopy(result_44461, getGMTime_43647(fromSeconds_43656((t_44462 + secs_44463))), NTI43602);
		}
		else {
			F.line = 404;
			nimCopy(result_44461, getLocalTime_43644(fromSeconds_43656((t_44462 + secs_44463))), NTI43602);
		}
		
	framePtr = F.prev;

	return result_44461;

}

function initInterval_44207(milliseconds_44209, seconds_44210, minutes_44211, hours_44212, days_44213, months_44214, years_44215) {
	var result_44216 = {milliseconds: 0, seconds: 0, minutes: 0, hours: 0, days: 0, months: 0, years: 0};

	var F={procname:"times.initInterval",prev:framePtr,filename:"lib/nim/pure/times.nim",line:0};
	framePtr = F;
		F.line = 277;
		var carryO_44217 = 0;
		F.line = 278;
		result_44216.milliseconds = modInt(milliseconds_44209, 1000);
		F.line = 279;
		carryO_44217 = divInt(milliseconds_44209, 1000);
		F.line = 280;
		result_44216.seconds = modInt(addInt(carryO_44217, seconds_44210), 60);
		F.line = 281;
		carryO_44217 = divInt(addInt(carryO_44217, seconds_44210), 60);
		F.line = 282;
		result_44216.minutes = modInt(addInt(carryO_44217, minutes_44211), 60);
		F.line = 283;
		carryO_44217 = divInt(addInt(carryO_44217, minutes_44211), 60);
		F.line = 284;
		result_44216.hours = modInt(addInt(carryO_44217, hours_44212), 24);
		F.line = 285;
		carryO_44217 = divInt(addInt(carryO_44217, hours_44212), 24);
		F.line = 286;
		result_44216.days = addInt(carryO_44217, days_44213);
		F.line = 288;
		result_44216.months = modInt(months_44214, 12);
		F.line = 289;
		carryO_44217 = divInt(months_44214, 12);
		F.line = 290;
		result_44216.years = addInt(carryO_44217, years_44215);
	framePtr = F.prev;

	return result_44216;

}

function minus__44240(ti_44242) {
	var result_44243 = {milliseconds: 0, seconds: 0, minutes: 0, hours: 0, days: 0, months: 0, years: 0};

	var F={procname:"times.-",prev:framePtr,filename:"lib/nim/pure/times.nim",line:0};
	framePtr = F;
		F.line = 315;
		nimCopy(result_44243, {milliseconds: negInt(ti_44242.milliseconds), seconds: negInt(ti_44242.seconds), minutes: negInt(ti_44242.minutes), hours: negInt(ti_44242.hours), days: negInt(ti_44242.days), months: negInt(ti_44242.months), years: negInt(ti_44242.years)}, NTI43604);
	framePtr = F.prev;

	return result_44243;

}

function minus__44464(a_44466, interval_44467) {
	var result_44468 = {m_type: NTI43602, second: 0, minute: 0, hour: 0, monthday: 0, month: 0, year: 0, weekday: 0, yearday: 0, isDST: false, timezone: 0};

	var F={procname:"times.-",prev:framePtr,filename:"lib/nim/pure/times.nim",line:0};
	framePtr = F;
		F.line = 412;
		var t_44469 = toSeconds_43664(toTime_43653(a_44466));
		F.line = 413;
		var secs_44470 = toSeconds_44273(a_44466, minus__44240(interval_44467));
		if ((a_44466.timezone == 0)) {
		F.line = 415;
		nimCopy(result_44468, getGMTime_43647(fromSeconds_43656((t_44469 + secs_44470))), NTI43602);
		}
		else {
			F.line = 417;
			nimCopy(result_44468, getLocalTime_43644(fromSeconds_43656((t_44469 + secs_44470))), NTI43602);
		}
		
	framePtr = F.prev;

	return result_44468;

}

function week_search_79203(x_79205, dir_79206) {
	var result_79210 = {Field0: 0.0, Field1: null};

	var F={procname:"gannt.week_search",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 153;
		var d_79212 = getLocalTime_43644(fromSeconds_43659(x_79205));
		F.line = 154;
		d_79212.second = 0;
		F.line = 155;
		d_79212.minute = 0;
		F.line = 156;
		d_79212.hour = 0;
		if ((0.0 < dir_79206)) {
		F.line = 158;
		var n_79221 = addInt(subInt(6, d_79212.weekday), mulInt(7, (dir_79206|0)));
		F.line = 159;
		nimCopy(d_79212, plus__44457(d_79212, initInterval_44207(0, 0, 0, 0, n_79221, 0, 0)), NTI43602);
		}
		else {
			F.line = 162;
			nimCopy(d_79212, minus__44464(d_79212, initInterval_44207(0, 0, 0, 0, d_79212.weekday, 0, 0)), NTI43602);
		}
		
		F.line = 163;
		var w_79231 = addInt(divInt(d_79212.yearday, 7), 1);
		F.line = 164;
		var n_79232 = null;
		if ((w_79231 < 10)) {
		F.line = 166;
		n_79232 = toJSStr((makeNimstrLit("w0").slice(0,-1)).concat(cstrToNimstr((w_79231)+"")));
		}
		else {
			F.line = 168;
			n_79232 = toJSStr((makeNimstrLit("w").slice(0,-1)).concat(cstrToNimstr((w_79231)+"")));
		}
		
		F.line = 169;
		n_79232 = (toJSStr(format_44699(d_79212, makeNimstrLit("yyyy"))) + n_79232);
		F.line = 170;
		nimCopy(result_79210, {Field0: toSeconds_43664(toTime_43653(d_79212)), Field1: n_79232}, NTI79207);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_79210;

}

function calc_75034(self_75037, self_75037_Idx) {
			var Tmp1;
			var Tmp2;

	var result_75038 = false;

	var F={procname:"common.calc",prev:framePtr,filename:"common.nim",line:0};
	framePtr = F;
	BeforeRet: do {
			if (!(self_75037[self_75037_Idx].d1 == 0.0)) Tmp1 = false; else {				Tmp1 = (self_75037[self_75037_Idx].d1 == self_75037[self_75037_Idx].d2);			}		if (Tmp1) {
		F.line = 29;
		result_75038 = true;
		break BeforeRet;
		}
		else {
			if (!(self_75037[self_75037_Idx].r1 == 0.0)) Tmp2 = false; else {				Tmp2 = (self_75037[self_75037_Idx].r1 == self_75037[self_75037_Idx].r2);			}		if (Tmp2) {
		F.line = 31;
		result_75038 = true;
		break BeforeRet;
		}
		}
		F.line = 32;
		self_75037[self_75037_Idx].a = ((self_75037[self_75037_Idx].r2 - self_75037[self_75037_Idx].r1) / (self_75037[self_75037_Idx].d2 - self_75037[self_75037_Idx].d1));
		F.line = 33;
		self_75037[self_75037_Idx].b = self_75037[self_75037_Idx].d1;
		F.line = 34;
		self_75037[self_75037_Idx].c = self_75037[self_75037_Idx].r1;
		F.line = 35;
		result_75038 = false;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_75038;

}

function range_75048(self_75051, self_75051_Idx, minmax_75054) {
	var result_75056 = [null, 0];
	var result_75056_Idx = 0;

	var F={procname:"common.range",prev:framePtr,filename:"common.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 48;
		self_75051[self_75051_Idx].r1 = minmax_75054[chckIndx(0, 0, minmax_75054.length-1)-0];
		F.line = 49;
		self_75051[self_75051_Idx].r2 = minmax_75054[chckIndx(1, 0, minmax_75054.length-1)-0];
		F.line = 50;
		calc_75034(self_75051, self_75051_Idx);
		F.line = 51;
		result_75056 = self_75051; result_75056_Idx = self_75051_Idx;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return [result_75056, result_75056_Idx];

}

function domain_75039(self_75042, self_75042_Idx, minmax_75045) {
	var result_75047 = [null, 0];
	var result_75047_Idx = 0;

	var F={procname:"common.domain",prev:framePtr,filename:"common.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 40;
		self_75042[self_75042_Idx].d1 = minmax_75045[chckIndx(0, 0, minmax_75045.length-1)-0];
		F.line = 41;
		self_75042[self_75042_Idx].d2 = minmax_75045[chckIndx(1, 0, minmax_75045.length-1)-0];
		F.line = 42;
		calc_75034(self_75042, self_75042_Idx);
		F.line = 43;
		result_75047 = self_75042; result_75047_Idx = self_75042_Idx;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return [result_75047, result_75047_Idx];

}

function initScaleLinear_75022() {
	var result_75025 = [null, 0];
	var result_75025_Idx = 0;

	var F={procname:"common.initScaleLinear",prev:framePtr,filename:"common.nim",line:0};
	framePtr = F;
		F.line = 20;
		result_75025[result_75025_Idx] = {m_type: NTI75004, a: 0.0, b: 0.0, c: 0.0, r1: 0.0, r2: 0.0, d1: 0.0, d2: 0.0};
		F.line = 21;
		result_75025[result_75025_Idx].d1 = 0.0;
		F.line = 22;
		result_75025[result_75025_Idx].d2 = 0.0;
		F.line = 23;
		result_75025[result_75025_Idx].r1 = 0.0;
		F.line = 24;
		result_75025[result_75025_Idx].r2 = 0.0;
	framePtr = F.prev;

	return [result_75025, result_75025_Idx];

}

function warn_73060(fmt_73062) {
	var F={procname:"logging.warn",prev:framePtr,filename:"logging.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((30 < level_cur_73019[0])) {
		F.line = 45;
		break BeforeRet;
		}
		
		F.line = 46;
		console.log(toJSStr(fmt_73062));
	} while (false);
	framePtr = F.prev;

	
}

function xaxis_week_subtick_79241(w_79243) {
	var result_79247 = {Field0: 0.0, Field1: 0};

	var F={procname:"gannt.xaxis_week_subtick",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 174;
		var ti_79248 = initInterval_44207(0, (w_79243|0), 0, 0, 0, 0, 0);
		if ((0 < ti_79248.months)) {
		F.line = 177;
		nimCopy(result_79247, {Field0: 2.5920000000000000e+06, Field1: 10}, NTI79244);
		break BeforeRet;
		}
		
		if ((6 < ti_79248.days)) {
		F.line = 179;
		nimCopy(result_79247, {Field0: 6.0480000000000000e+05, Field1: 20}, NTI79244);
		break BeforeRet;
		}
		
		if ((2 < ti_79248.days)) {
		F.line = 181;
		nimCopy(result_79247, {Field0: 2.5920000000000000e+05, Field1: 6}, NTI79244);
		break BeforeRet;
		}
		
		if ((1 < ti_79248.days)) {
		F.line = 183;
		nimCopy(result_79247, {Field0: 1.7280000000000000e+05, Field1: 4}, NTI79244);
		break BeforeRet;
		}
		
		if ((11 < ti_79248.hours)) {
		F.line = 185;
		nimCopy(result_79247, {Field0: 8.6400000000000000e+04, Field1: 14}, NTI79244);
		break BeforeRet;
		}
		
		F.line = 186;
		nimCopy(result_79247, {Field0: 8.6400000000000000e+04, Field1: 7}, NTI79244);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_79247;

}

function month_search_79365(x_79367, dir_79368) {
	var result_79372 = {Field0: 0.0, Field1: null};

	var F={procname:"gannt.month_search",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 228;
		var d_79374 = getLocalTime_43644(fromSeconds_43659(x_79367));
		F.line = 229;
		d_79374.second = 0;
		F.line = 230;
		d_79374.minute = 0;
		F.line = 231;
		d_79374.hour = 0;
		if ((0.0 < dir_79368)) {
		F.line = 233;
		d_79374.monthday = 27;
		F.line = 234;
		nimCopy(d_79374, plus__44457(d_79374, initInterval_44207(0, 0, 0, 0, 7, (dir_79368|0), 0)), NTI43602);
		F.line = 235;
		d_79374.monthday = 1;
		F.line = 236;
		nimCopy(d_79374, minus__44464(d_79374, initInterval_44207(0, 0, 0, 0, 1, 0, 0)), NTI43602);
		}
		else {
			F.line = 238;
			d_79374.monthday = 1;
		}
		
		F.line = 240;
		var n_79377 = toJSStr(format_44699(d_79374, makeNimstrLit("yyyy/MM")));
		F.line = 241;
		nimCopy(result_79372, {Field0: toSeconds_43664(toTime_43653(d_79374)), Field1: n_79377}, NTI79369);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_79372;

}

function xaxis_month_subtick_79384(w_79386) {
			var Tmp1;

	var result_79390 = {Field0: 0.0, Field1: 0};

	var F={procname:"gannt.xaxis_month_subtick",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 245;
		var ti_79391 = initInterval_44207(0, (w_79386|0), 0, 0, 0, 0, 0);
		F.line = 246;
		debg_73036((makeNimstrLit("tick: ").slice(0,-1)).concat(cstrToNimstr((ti_79391.days)+"")));
		if ((13 < ti_79391.days)) {
		F.line = 248;
		nimCopy(result_79390, {Field0: 1.2096000000000000e+06, Field1: 2}, NTI79387);
		break BeforeRet;
		}
		
		if ((2 < ti_79391.days)) {
		F.line = 250;
		nimCopy(ti_79391, initInterval_44207(0, 0, 0, 0, 7, 0, 0), NTI43604);
		F.line = 251;
		nimCopy(result_79390, {Field0: 6.0480000000000000e+05, Field1: 4}, NTI79387);
		break BeforeRet;
		}
		
			if (!(0 < ti_79391.days)) Tmp1 = false; else {				Tmp1 = (11 < ti_79391.hours);			}		if (Tmp1) {
		F.line = 253;
		nimCopy(result_79390, {Field0: 1.7280000000000000e+05, Field1: 4}, NTI79387);
		break BeforeRet;
		}
		
		F.line = 254;
		nimCopy(result_79390, {Field0: 8.6400000000000000e+04, Field1: 28}, NTI79387);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_79390;

}

function quater_search_79493(x_79495, dir_79496) {
	var result_79500 = {Field0: 0.0, Field1: null};

	var F={procname:"gannt.quater_search",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 295;
		var d_79502 = getLocalTime_43644(fromSeconds_43659(x_79495));
		F.line = 296;
		d_79502.second = 0;
		F.line = 297;
		d_79502.minute = 0;
		F.line = 298;
		d_79502.hour = 0;
		F.line = 299;
		d_79502.monthday = 1;
		F.line = 302;
		var i_79511 = divInt(d_79502.month, 3);
		F.line = 303;
		d_79502.month = addInt(1, mulInt(i_79511, 3));
		if ((0.0 < dir_79496)) {
		F.line = 306;
		nimCopy(d_79502, plus__44457(d_79502, initInterval_44207(0, 0, 0, 0, 0, addInt(mulInt(3, (dir_79496|0)), 1), 0)), NTI43602);
		F.line = 307;
		nimCopy(d_79502, minus__44464(d_79502, initInterval_44207(0, 0, 0, 0, 1, 0, 0)), NTI43602);
		}
		
		F.line = 309;
		var n_79515 = null;
		if (cfg_76027[0].mode_q1jan) {
		F.line = 311;
		n_79515 = toJSStr((format_44699(d_79502, makeNimstrLit("yyyy")).slice(0,-1)).concat(makeNimstrLit("Q").slice(0,-1),cstrToNimstr((addInt(i_79511, 1))+"")));
		}
		else {
		if ((i_79511 < 1)) {
		F.line = 313;
		n_79515 = toJSStr((cstrToNimstr((subInt(d_79502.year, 1))+"").slice(0,-1)).concat(makeNimstrLit("Q4")));
		}
		else {
			F.line = 315;
			n_79515 = toJSStr((format_44699(d_79502, makeNimstrLit("yyyy")).slice(0,-1)).concat(makeNimstrLit("Q").slice(0,-1),cstrToNimstr((i_79511)+"")));
		}
		}
		F.line = 316;
		nimCopy(result_79500, {Field0: toSeconds_43664(toTime_43653(d_79502)), Field1: n_79515}, NTI79497);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_79500;

}

function xaxis_quater_subtick_79525(w_79527) {
	var result_79531 = {Field0: 0.0, Field1: 0};

	var F={procname:"gannt.xaxis_quater_subtick",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 320;
		var ti_79532 = initInterval_44207(0, (w_79527|0), 0, 0, 0, 0, 0);
		if ((0 < ti_79532.months)) {
		F.line = 323;
		nimCopy(result_79531, {Field0: 2.5920000000000000e+06, Field1: 5}, NTI79528);
		break BeforeRet;
		}
		
		if ((9 < ti_79532.days)) {
		F.line = 325;
		nimCopy(result_79531, {Field0: 1.2096000000000000e+06, Field1: 4}, NTI79528);
		break BeforeRet;
		}
		
		F.line = 326;
		nimCopy(result_79531, {Field0: 6.0480000000000000e+05, Field1: 4}, NTI79528);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_79531;

}

function day_search_79063(x_79065, dir_79066) {
	var result_79070 = {Field0: 0.0, Field1: null};

	var F={procname:"gannt.day_search",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 85;
		var d_79072 = getLocalTime_43644(fromSeconds_43659(x_79065));
		F.line = 86;
		d_79072.second = 0;
		F.line = 87;
		d_79072.minute = 0;
		F.line = 88;
		d_79072.hour = 0;
		if ((0.0 < dir_79066)) {
		F.line = 90;
		nimCopy(d_79072, plus__44457(d_79072, initInterval_44207(0, 0, 0, 0, 1, 0, 0)), NTI43602);
		F.line = 91;
		nimCopy(d_79072, minus__44464(d_79072, initInterval_44207(0, 2, 0, 0, 0, 0, 0)), NTI43602);
		}
		
		F.line = 92;
		var n_79074 = null;
		if ((d_79072.monthday == 1)) {
		F.line = 94;
		n_79074 = toJSStr(format_44699(d_79072, makeNimstrLit("mm")));
		}
		else {
			F.line = 96;
			n_79074 = toJSStr(format_44699(d_79072, makeNimstrLit("d")));
		}
		
		F.line = 97;
		nimCopy(result_79070, {Field0: toSeconds_43664(toTime_43653(d_79072)), Field1: n_79074}, NTI79067);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_79070;

}

function xaxis_day_subtick_79081(w_79083) {
	var result_79087 = {Field0: 0.0, Field1: 0};

	var F={procname:"gannt.xaxis_day_subtick",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 101;
		var ti_79088 = initInterval_44207(0, (w_79083|0), 0, 0, 0, 0, 0);
		if ((0 < ti_79088.months)) {
		F.line = 104;
		nimCopy(result_79087, {Field0: 2.5920000000000000e+06, Field1: 10}, NTI79084);
		break BeforeRet;
		}
		
		if ((6 < ti_79088.days)) {
		F.line = 106;
		nimCopy(result_79087, {Field0: 6.0480000000000000e+05, Field1: 20}, NTI79084);
		break BeforeRet;
		}
		
		if ((2 < ti_79088.days)) {
		F.line = 108;
		nimCopy(result_79087, {Field0: 2.5920000000000000e+05, Field1: 6}, NTI79084);
		break BeforeRet;
		}
		
		if ((1 < ti_79088.days)) {
		F.line = 110;
		nimCopy(result_79087, {Field0: 1.7280000000000000e+05, Field1: 4}, NTI79084);
		break BeforeRet;
		}
		
		if ((11 < ti_79088.hours)) {
		F.line = 112;
		nimCopy(result_79087, {Field0: 8.6400000000000000e+04, Field1: 14}, NTI79084);
		break BeforeRet;
		}
		
		F.line = 113;
		nimCopy(result_79087, {Field0: 8.6400000000000000e+04, Field1: 7}, NTI79084);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_79087;

}

function on_csv_xaxis_80036(min_80038, max_80039) {
					var Tmp3;
					var Tmp4;
					var Tmp5;
					var Tmp6;
					var Tmp7;
					var Tmp8;
					var Tmp13;
					var Tmp14;
					var Tmp15;
					var Tmp16;
					var Tmp17;
					var Tmp18;
					var Tmp22;
					var Tmp23;
					var Tmp24;
					var Tmp25;
					var Tmp26;
					var Tmp27;
						var Tmp32;
						var Tmp33;
						var Tmp34;
						var Tmp35;
						var Tmp36;
						var Tmp37;
						var Tmp42;
						var Tmp43;
						var Tmp44;
						var Tmp45;
						var Tmp46;
						var Tmp47;
						var Tmp52;
						var Tmp53;
						var Tmp54;
						var Tmp55;
						var Tmp56;
						var Tmp57;

	var F={procname:"gannt.on_csv_xaxis",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
		F.line = 428;
		var svg_80040 = SVG.select("svg").get(0).doc();
		F.line = 429;
		var bbox_80042 = svg_80040.rect(((cfg_76027[0].X2 - cfg_76027[0].X1)|0), (cfg_76027[0].Y1|0));
		F.line = 430;
		bbox_80042.x((cfg_76027[0].X1|0)).y(0);
		F.line = 431;
		rect_black_80032(bbox_80042, "xaxis: bbox");
		F.line = 433;
		var n_80043 = 0;
		F.line = 434;
		var px_80044 = 0;
		F.line = 435;
		var ga_80045 = svg_80040.group();
		F.line = 436;
		var g_80046 = ga_80045.group();
		F.line = 437;
		var gs_80047 = ga_80045.group();
		F.line = 438;
		var gt_80048 = ga_80045.group();
		L1: do {
			F.line = 439;
			var tup_80049 = {Field0: 0, Field1: null, Field2: 0};
			F.line = 382;
			var x1_80088 = 0.0;
			F.line = 382;
			var x2_80090 = 0.0;
			F.line = 383;
			var dmy_80092 = null;
			F.line = 384;
			var typ_80094 = divInt(cfg_76027[0].mode_xrange, 100);
			F.line = 385;
			var spn_80096 = modInt(cfg_76027[0].mode_xrange, 100);
			F.line = 386;
			switch (typ_80094) {
			case 1:
				if ((spn_80096 == 0)) {
				F.line = 389;
				var __80098 = {Field0: max_80039, Field1: 1.0000000000000001e-01};
				F.line = 389;
				x1_80088 = __80098["Field0"];
				F.line = 389;
				x2_80090 = __80098["Field1"];
				}
				else {
					F.line = 391;
					var __80100 = {Field0: min_80038, Field1: ((spn_80096 * 4.0000000000000000e+00) - 1.0000000000000001e-01)};
					F.line = 391;
					x1_80088 = __80100["Field0"];
					F.line = 391;
					x2_80090 = __80100["Field1"];
				}
				
				F.line = 392;
				var __80103 = week_search_79203((x1_80088|0), x2_80090);
				F.line = 392;
				x2_80090 = __80103["Field0"];
				F.line = 392;
				dmy_80092 = __80103["Field1"];
				F.line = 393;
				var __80106 = week_search_79203((min_80038|0), -1.0000000000000001e-01);
				F.line = 393;
				x1_80088 = __80106["Field0"];
				F.line = 393;
				dmy_80092 = __80106["Field1"];
				L2: do {
					F.line = 394;
					var i_80109 = {Field0: 0, Field1: null, Field2: 0};
					F.line = 190;
					var sc_80111 = (Tmp5 = range_75048((Tmp4 = domain_75039((Tmp3 = initScaleLinear_75022(), Tmp3[0]), Tmp3[1], [x1_80088, x2_80090]), Tmp4[0]), Tmp4[1], [cfg_76027[0].X1, cfg_76027[0].X2]), Tmp5[0])[Tmp5[1]];
					F.line = 192;
					cfg_76027[0].rx = (Tmp8 = range_75048((Tmp7 = domain_75039((Tmp6 = initScaleLinear_75022(), Tmp6[0]), Tmp6[1], [cfg_76027[0].X1, cfg_76027[0].X2]), Tmp7[0]), Tmp7[1], [x1_80088, x2_80090]), Tmp8[0])[Tmp8[1]];
					F.line = 194;
					cfg_76027[0].sx = sc_80111;
					F.line = 195;
					warn_73060((makeNimstrLit("xaxis_week: ").slice(0,-1)).concat(cstrToNimstr((x1_80088)+"").slice(0,-1),makeNimstrLit(" to ").slice(0,-1),cstrToNimstr((x2_80090)+"")));
					F.line = 196;
					warn_73060((makeNimstrLit("xaxis_week: sx to ").slice(0,-1)).concat(cstrToNimstr((to_75063(sc_80111, 604800))+"")));
					F.line = 197;
					var x_80113 = x1_80088;
					F.line = 198;
					var d1pct_80115 = ((x2_80090 - x1_80088) * 1.0000000000000000e-02);
					F.line = 199;
					var cur_80117 = week_search_79203((x_80113|0), -1.0000000000000001e-01);
					F.line = 200;
					var colontmp__80950 = {Field0: 0.0, Field1: 0};
					F.line = 200;
					var sx_80120 = 0.0;
					F.line = 200;
					var nn_80122 = 0;
					F.line = 200;
					nimCopy(colontmp__80950, xaxis_week_subtick_79241(d1pct_80115), NTI79244);
					F.line = 200;
					sx_80120 = colontmp__80950["Field0"];
					F.line = 200;
					nn_80122 = colontmp__80950["Field1"];
					F.line = 201;
					var px_80124 = (-5.0000000000000000e+00 * sx_80120);
					F.line = 202;
					var n_80126 = addInt(nn_80122, 1);
					F.line = 203;
					cur_80117.Field1 = "";
					L9: do {
						F.line = 205;
							L10: while (true) {
							if (!(x_80113 < x2_80090)) break L10;
								L11: do {
									F.line = 206;
									var nxt_80128 = week_search_79203((x_80113|0), -1.0000000000000001e-01);
									F.line = 207;
									var nx_80131 = to_75057(sc_80111, x_80113);
									F.line = 208;
									x_80113 = (x_80113 + sx_80120);
									F.line = 209;
									n_80126 = addInt(n_80126, 1);
									if (((n_80126 < nn_80122) || (nxt_80128.Field1 == cur_80117.Field1))) {
									F.line = 212;
									var tup_80133 = nimCopy(null, {Field0: 2, Field1: "", Field2: (nx_80131|0)}, NTI79015);
									F.line = 213;
									nimCopy(i_80109, tup_80133, NTI79015);
									F.line = 395;
									nimCopy(tup_80049, i_80109, NTI79015);
									F.line = 440;
									debg_73036((makeNimstrLit("x-iter: ").slice(0,-1)).concat(cstrToNimstr((tup_80049.Field2)+"")));
									F.line = 441;
									px_80044 = tup_80049.Field2;
									F.line = 442;
									n_80043 = addInt(n_80043, 1);
									F.line = 443;
									var ns_80059 = cstrToNimstr((n_80043)+"");
									if ((tup_80049.Field0 == 1)) {
									F.line = 445;
									var y1_80060 = 0;
									if (((tup_80049.Field1 != null ? tup_80049.Field1.length : 0) < 1)) {
									F.line = 447;
									y1_80060 = cfg_76027[0].H5;
									}
									
									F.line = 448;
									g_80046.line(px_80044, y1_80060, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("t1-").slice(0,-1)).concat(ns_80059))).attr("class", "xtick1");
									F.line = 450;
									g_80046.line(px_80044, (cfg_76027[0].Y1|0), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("t2-").slice(0,-1)).concat(ns_80059))).attr("class", "xtick2");
									}
									
									if ((tup_80049.Field0 == 2)) {
									F.line = 453;
									g_80046.line(px_80044, cfg_76027[0].H6, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("s1-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub1");
									F.line = 455;
									gs_80047.line(px_80044, addInt((cfg_76027[0].Y1|0), 1), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("s2-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub2");
									}
									
									if ((0 < (tup_80049.Field1 != null ? tup_80049.Field1.length : 0))) {
									F.line = 457;
									gt_80048.text(tup_80049.Field1).size(cfg_76027[0].S1).x(addInt(px_80044, 2)).y(0);
									}
									
									F.line = 214;
									break L11;
									}
									
									F.line = 216;
									n_80126 = 0;
									F.line = 217;
									nimCopy(cur_80117, nxt_80128, NTI79207);
									F.line = 218;
									var name_80136 = cur_80117.Field1;
									if (((cur_80117.Field0 - px_80124) < (5.0000000000000000e+00 * d1pct_80115))) {
									F.line = 220;
									name_80136 = "";
									}
									else {
										F.line = 222;
										px_80124 = cur_80117.Field0;
									}
									
									F.line = 223;
									var tup_80138 = nimCopy(null, {Field0: 1, Field1: name_80136, Field2: (nx_80131|0)}, NTI79015);
									F.line = 224;
									nimCopy(i_80109, tup_80138, NTI79015);
									F.line = 395;
									nimCopy(tup_80049, i_80109, NTI79015);
									F.line = 440;
									debg_73036((makeNimstrLit("x-iter: ").slice(0,-1)).concat(cstrToNimstr((tup_80049.Field2)+"")));
									F.line = 441;
									px_80044 = tup_80049.Field2;
									F.line = 442;
									n_80043 = addInt(n_80043, 1);
									F.line = 443;
									var ns_80141 = cstrToNimstr((n_80043)+"");
									if ((tup_80049.Field0 == 1)) {
									F.line = 445;
									var y1_80143 = 0;
									if (((tup_80049.Field1 != null ? tup_80049.Field1.length : 0) < 1)) {
									F.line = 447;
									y1_80143 = cfg_76027[0].H5;
									}
									
									F.line = 448;
									g_80046.line(px_80044, y1_80143, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("t1-").slice(0,-1)).concat(ns_80141))).attr("class", "xtick1");
									F.line = 450;
									g_80046.line(px_80044, (cfg_76027[0].Y1|0), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("t2-").slice(0,-1)).concat(ns_80141))).attr("class", "xtick2");
									}
									
									if ((tup_80049.Field0 == 2)) {
									F.line = 453;
									g_80046.line(px_80044, cfg_76027[0].H6, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("s1-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub1");
									F.line = 455;
									gs_80047.line(px_80044, addInt((cfg_76027[0].Y1|0), 1), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("s2-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub2");
									}
									
									if ((0 < (tup_80049.Field1 != null ? tup_80049.Field1.length : 0))) {
									F.line = 457;
									gt_80048.text(tup_80049.Field1).size(cfg_76027[0].S1).x(addInt(px_80044, 2)).y(0);
									}
									
								} while(false);
							}
					} while(false);
				} while(false);
				break;
			case 2:
				if ((spn_80096 == 0)) {
				F.line = 398;
				var __80145 = {Field0: max_80039, Field1: 1.0000000000000001e-01};
				F.line = 398;
				x1_80088 = __80145["Field0"];
				F.line = 398;
				x2_80090 = __80145["Field1"];
				}
				else {
					F.line = 400;
					var __80147 = {Field0: min_80038, Field1: (spn_80096 - 1.0000000000000001e-01)};
					F.line = 400;
					x1_80088 = __80147["Field0"];
					F.line = 400;
					x2_80090 = __80147["Field1"];
				}
				
				F.line = 401;
				var __80150 = month_search_79365((x1_80088|0), x2_80090);
				F.line = 401;
				x2_80090 = __80150["Field0"];
				F.line = 401;
				dmy_80092 = __80150["Field1"];
				F.line = 402;
				var __80153 = month_search_79365((min_80038|0), -1.0000000000000001e-01);
				F.line = 402;
				x1_80088 = __80153["Field0"];
				F.line = 402;
				dmy_80092 = __80153["Field1"];
				L12: do {
					F.line = 403;
					var i_80156 = {Field0: 0, Field1: null, Field2: 0};
					F.line = 258;
					var sc_80158 = (Tmp15 = range_75048((Tmp14 = domain_75039((Tmp13 = initScaleLinear_75022(), Tmp13[0]), Tmp13[1], [x1_80088, x2_80090]), Tmp14[0]), Tmp14[1], [cfg_76027[0].X1, cfg_76027[0].X2]), Tmp15[0])[Tmp15[1]];
					F.line = 260;
					cfg_76027[0].rx = (Tmp18 = range_75048((Tmp17 = domain_75039((Tmp16 = initScaleLinear_75022(), Tmp16[0]), Tmp16[1], [cfg_76027[0].X1, cfg_76027[0].X2]), Tmp17[0]), Tmp17[1], [x1_80088, x2_80090]), Tmp18[0])[Tmp18[1]];
					F.line = 262;
					cfg_76027[0].sx = sc_80158;
					F.line = 263;
					var x_80160 = x1_80088;
					F.line = 264;
					var d1pct_80162 = ((x2_80090 - x1_80088) * 1.0000000000000000e-02);
					F.line = 265;
					var px_80164 = 0.0;
					F.line = 266;
					var n_80166 = 0;
					F.line = 267;
					var cur_80168 = month_search_79365((x_80160|0), -1.0000000000000001e-01);
					F.line = 268;
					var colontmp__80951 = {Field0: 0.0, Field1: 0};
					F.line = 268;
					var sx_80171 = 0.0;
					F.line = 268;
					var nn_80173 = 0;
					F.line = 268;
					nimCopy(colontmp__80951, xaxis_month_subtick_79384(d1pct_80162), NTI79387);
					F.line = 268;
					sx_80171 = colontmp__80951["Field0"];
					F.line = 268;
					nn_80173 = colontmp__80951["Field1"];
					L19: do {
						F.line = 269;
							L20: while (true) {
							if (!(x_80160 < x2_80090)) break L20;
								F.line = 270;
								x_80160 = (x_80160 + sx_80171);
								F.line = 271;
								var nxt_80175 = month_search_79365((x_80160|0), -1.0000000000000001e-01);
								F.line = 272;
								n_80166 = addInt(n_80166, 1);
								if ((n_80166 < nn_80173)) {
								F.line = 274;
								var nx_80178 = to_75057(sc_80158, x_80160);
								F.line = 275;
								var tup_80180 = nimCopy(null, {Field0: 2, Field1: "", Field2: (nx_80178|0)}, NTI79015);
								F.line = 276;
								nimCopy(i_80156, tup_80180, NTI79015);
								F.line = 404;
								nimCopy(tup_80049, i_80156, NTI79015);
								F.line = 440;
								debg_73036((makeNimstrLit("x-iter: ").slice(0,-1)).concat(cstrToNimstr((tup_80049.Field2)+"")));
								F.line = 441;
								px_80044 = tup_80049.Field2;
								F.line = 442;
								n_80043 = addInt(n_80043, 1);
								F.line = 443;
								var ns_80183 = cstrToNimstr((n_80043)+"");
								if ((tup_80049.Field0 == 1)) {
								F.line = 445;
								var y1_80185 = 0;
								if (((tup_80049.Field1 != null ? tup_80049.Field1.length : 0) < 1)) {
								F.line = 447;
								y1_80185 = cfg_76027[0].H5;
								}
								
								F.line = 448;
								g_80046.line(px_80044, y1_80185, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("t1-").slice(0,-1)).concat(ns_80183))).attr("class", "xtick1");
								F.line = 450;
								g_80046.line(px_80044, (cfg_76027[0].Y1|0), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("t2-").slice(0,-1)).concat(ns_80183))).attr("class", "xtick2");
								}
								
								if ((tup_80049.Field0 == 2)) {
								F.line = 453;
								g_80046.line(px_80044, cfg_76027[0].H6, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("s1-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub1");
								F.line = 455;
								gs_80047.line(px_80044, addInt((cfg_76027[0].Y1|0), 1), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("s2-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub2");
								}
								
								if ((0 < (tup_80049.Field1 != null ? tup_80049.Field1.length : 0))) {
								F.line = 457;
								gt_80048.text(tup_80049.Field1).size(cfg_76027[0].S1).x(addInt(px_80044, 2)).y(0);
								}
								
								}
								
								if ((nxt_80175.Field1 == cur_80168.Field1)) {
								F.line = 278;
								var nx_80187 = to_75057(sc_80158, x_80160);
								F.line = 279;
								var tup_80189 = nimCopy(null, {Field0: 2, Field1: "", Field2: (nx_80187|0)}, NTI79015);
								F.line = 280;
								nimCopy(i_80156, tup_80189, NTI79015);
								F.line = 404;
								nimCopy(tup_80049, i_80156, NTI79015);
								F.line = 440;
								debg_73036((makeNimstrLit("x-iter: ").slice(0,-1)).concat(cstrToNimstr((tup_80049.Field2)+"")));
								F.line = 441;
								px_80044 = tup_80049.Field2;
								F.line = 442;
								n_80043 = addInt(n_80043, 1);
								F.line = 443;
								var ns_80192 = cstrToNimstr((n_80043)+"");
								if ((tup_80049.Field0 == 1)) {
								F.line = 445;
								var y1_80194 = 0;
								if (((tup_80049.Field1 != null ? tup_80049.Field1.length : 0) < 1)) {
								F.line = 447;
								y1_80194 = cfg_76027[0].H5;
								}
								
								F.line = 448;
								g_80046.line(px_80044, y1_80194, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("t1-").slice(0,-1)).concat(ns_80192))).attr("class", "xtick1");
								F.line = 450;
								g_80046.line(px_80044, (cfg_76027[0].Y1|0), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("t2-").slice(0,-1)).concat(ns_80192))).attr("class", "xtick2");
								}
								
								if ((tup_80049.Field0 == 2)) {
								F.line = 453;
								g_80046.line(px_80044, cfg_76027[0].H6, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("s1-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub1");
								F.line = 455;
								gs_80047.line(px_80044, addInt((cfg_76027[0].Y1|0), 1), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("s2-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub2");
								}
								
								if ((0 < (tup_80049.Field1 != null ? tup_80049.Field1.length : 0))) {
								F.line = 457;
								gt_80048.text(tup_80049.Field1).size(cfg_76027[0].S1).x(addInt(px_80044, 2)).y(0);
								}
								
								}
								
								F.line = 282;
								n_80166 = 0;
								F.line = 283;
								nimCopy(cur_80168, nxt_80175, NTI79369);
								F.line = 284;
								var nx_80196 = to_75057(sc_80158, cur_80168.Field0);
								F.line = 285;
								var name_80198 = cur_80168.Field1;
								if (((cur_80168.Field0 - px_80164) < (5.0000000000000000e+00 * d1pct_80162))) {
								F.line = 287;
								name_80198 = "";
								}
								else {
									F.line = 289;
									px_80164 = cur_80168.Field0;
								}
								
								F.line = 290;
								var tup_80200 = nimCopy(null, {Field0: 1, Field1: name_80198, Field2: (nx_80196|0)}, NTI79015);
								F.line = 291;
								nimCopy(i_80156, tup_80200, NTI79015);
								F.line = 404;
								nimCopy(tup_80049, i_80156, NTI79015);
								F.line = 440;
								debg_73036((makeNimstrLit("x-iter: ").slice(0,-1)).concat(cstrToNimstr((tup_80049.Field2)+"")));
								F.line = 441;
								px_80044 = tup_80049.Field2;
								F.line = 442;
								n_80043 = addInt(n_80043, 1);
								F.line = 443;
								var ns_80203 = cstrToNimstr((n_80043)+"");
								if ((tup_80049.Field0 == 1)) {
								F.line = 445;
								var y1_80205 = 0;
								if (((tup_80049.Field1 != null ? tup_80049.Field1.length : 0) < 1)) {
								F.line = 447;
								y1_80205 = cfg_76027[0].H5;
								}
								
								F.line = 448;
								g_80046.line(px_80044, y1_80205, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("t1-").slice(0,-1)).concat(ns_80203))).attr("class", "xtick1");
								F.line = 450;
								g_80046.line(px_80044, (cfg_76027[0].Y1|0), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("t2-").slice(0,-1)).concat(ns_80203))).attr("class", "xtick2");
								}
								
								if ((tup_80049.Field0 == 2)) {
								F.line = 453;
								g_80046.line(px_80044, cfg_76027[0].H6, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("s1-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub1");
								F.line = 455;
								gs_80047.line(px_80044, addInt((cfg_76027[0].Y1|0), 1), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("s2-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub2");
								}
								
								if ((0 < (tup_80049.Field1 != null ? tup_80049.Field1.length : 0))) {
								F.line = 457;
								gt_80048.text(tup_80049.Field1).size(cfg_76027[0].S1).x(addInt(px_80044, 2)).y(0);
								}
								
							}
					} while(false);
				} while(false);
				break;
			case 3:
				if ((spn_80096 == 0)) {
				F.line = 407;
				var __80207 = {Field0: max_80039, Field1: 1.0000000000000001e-01};
				F.line = 407;
				x1_80088 = __80207["Field0"];
				F.line = 407;
				x2_80090 = __80207["Field1"];
				}
				else {
					F.line = 409;
					var __80209 = {Field0: min_80038, Field1: (divInt(spn_80096, 3) - 1.0000000000000001e-01)};
					F.line = 409;
					x1_80088 = __80209["Field0"];
					F.line = 409;
					x2_80090 = __80209["Field1"];
				}
				
				F.line = 410;
				var __80212 = quater_search_79493((x1_80088|0), x2_80090);
				F.line = 410;
				x2_80090 = __80212["Field0"];
				F.line = 410;
				dmy_80092 = __80212["Field1"];
				F.line = 411;
				var __80215 = quater_search_79493((min_80038|0), -1.0000000000000001e-01);
				F.line = 411;
				x1_80088 = __80215["Field0"];
				F.line = 411;
				dmy_80092 = __80215["Field1"];
				L21: do {
					F.line = 412;
					var i_80218 = {Field0: 0, Field1: null, Field2: 0};
					F.line = 330;
					var sc_80220 = (Tmp24 = range_75048((Tmp23 = domain_75039((Tmp22 = initScaleLinear_75022(), Tmp22[0]), Tmp22[1], [x1_80088, x2_80090]), Tmp23[0]), Tmp23[1], [cfg_76027[0].X1, cfg_76027[0].X2]), Tmp24[0])[Tmp24[1]];
					F.line = 332;
					cfg_76027[0].rx = (Tmp27 = range_75048((Tmp26 = domain_75039((Tmp25 = initScaleLinear_75022(), Tmp25[0]), Tmp25[1], [cfg_76027[0].X1, cfg_76027[0].X2]), Tmp26[0]), Tmp26[1], [x1_80088, x2_80090]), Tmp27[0])[Tmp27[1]];
					F.line = 334;
					cfg_76027[0].sx = sc_80220;
					F.line = 335;
					var x_80222 = x1_80088;
					F.line = 336;
					var d1pct_80224 = ((x2_80090 - x1_80088) * 1.0000000000000000e-02);
					F.line = 337;
					var px_80226 = 0.0;
					F.line = 338;
					var n_80228 = 0;
					F.line = 339;
					var cur_80230 = quater_search_79493((x_80222|0), -1.0000000000000001e-01);
					F.line = 340;
					var colontmp__80952 = {Field0: 0.0, Field1: 0};
					F.line = 340;
					var sx_80233 = 0.0;
					F.line = 340;
					var nn_80235 = 0;
					F.line = 340;
					nimCopy(colontmp__80952, xaxis_quater_subtick_79525(d1pct_80224), NTI79528);
					F.line = 340;
					sx_80233 = colontmp__80952["Field0"];
					F.line = 340;
					nn_80235 = colontmp__80952["Field1"];
					L28: do {
						F.line = 341;
							L29: while (true) {
							if (!(x_80222 < x2_80090)) break L29;
								F.line = 342;
								x_80222 = (x_80222 + sx_80233);
								F.line = 343;
								var nxt_80237 = quater_search_79493((x_80222|0), -1.0000000000000001e-01);
								F.line = 344;
								n_80228 = addInt(n_80228, 1);
								if ((n_80228 < nn_80235)) {
								F.line = 346;
								var nx_80240 = to_75057(sc_80220, x_80222);
								F.line = 347;
								var tup_80242 = nimCopy(null, {Field0: 2, Field1: "", Field2: (nx_80240|0)}, NTI79015);
								F.line = 348;
								nimCopy(i_80218, tup_80242, NTI79015);
								F.line = 413;
								nimCopy(tup_80049, i_80218, NTI79015);
								F.line = 440;
								debg_73036((makeNimstrLit("x-iter: ").slice(0,-1)).concat(cstrToNimstr((tup_80049.Field2)+"")));
								F.line = 441;
								px_80044 = tup_80049.Field2;
								F.line = 442;
								n_80043 = addInt(n_80043, 1);
								F.line = 443;
								var ns_80245 = cstrToNimstr((n_80043)+"");
								if ((tup_80049.Field0 == 1)) {
								F.line = 445;
								var y1_80247 = 0;
								if (((tup_80049.Field1 != null ? tup_80049.Field1.length : 0) < 1)) {
								F.line = 447;
								y1_80247 = cfg_76027[0].H5;
								}
								
								F.line = 448;
								g_80046.line(px_80044, y1_80247, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("t1-").slice(0,-1)).concat(ns_80245))).attr("class", "xtick1");
								F.line = 450;
								g_80046.line(px_80044, (cfg_76027[0].Y1|0), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("t2-").slice(0,-1)).concat(ns_80245))).attr("class", "xtick2");
								}
								
								if ((tup_80049.Field0 == 2)) {
								F.line = 453;
								g_80046.line(px_80044, cfg_76027[0].H6, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("s1-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub1");
								F.line = 455;
								gs_80047.line(px_80044, addInt((cfg_76027[0].Y1|0), 1), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("s2-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub2");
								}
								
								if ((0 < (tup_80049.Field1 != null ? tup_80049.Field1.length : 0))) {
								F.line = 457;
								gt_80048.text(tup_80049.Field1).size(cfg_76027[0].S1).x(addInt(px_80044, 2)).y(0);
								}
								
								}
								
								if ((nxt_80237.Field1 == cur_80230.Field1)) {
								F.line = 350;
								var nx_80249 = to_75057(sc_80220, x_80222);
								F.line = 351;
								var tup_80251 = nimCopy(null, {Field0: 2, Field1: "", Field2: (nx_80249|0)}, NTI79015);
								F.line = 352;
								nimCopy(i_80218, tup_80251, NTI79015);
								F.line = 413;
								nimCopy(tup_80049, i_80218, NTI79015);
								F.line = 440;
								debg_73036((makeNimstrLit("x-iter: ").slice(0,-1)).concat(cstrToNimstr((tup_80049.Field2)+"")));
								F.line = 441;
								px_80044 = tup_80049.Field2;
								F.line = 442;
								n_80043 = addInt(n_80043, 1);
								F.line = 443;
								var ns_80254 = cstrToNimstr((n_80043)+"");
								if ((tup_80049.Field0 == 1)) {
								F.line = 445;
								var y1_80256 = 0;
								if (((tup_80049.Field1 != null ? tup_80049.Field1.length : 0) < 1)) {
								F.line = 447;
								y1_80256 = cfg_76027[0].H5;
								}
								
								F.line = 448;
								g_80046.line(px_80044, y1_80256, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("t1-").slice(0,-1)).concat(ns_80254))).attr("class", "xtick1");
								F.line = 450;
								g_80046.line(px_80044, (cfg_76027[0].Y1|0), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("t2-").slice(0,-1)).concat(ns_80254))).attr("class", "xtick2");
								}
								
								if ((tup_80049.Field0 == 2)) {
								F.line = 453;
								g_80046.line(px_80044, cfg_76027[0].H6, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("s1-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub1");
								F.line = 455;
								gs_80047.line(px_80044, addInt((cfg_76027[0].Y1|0), 1), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("s2-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub2");
								}
								
								if ((0 < (tup_80049.Field1 != null ? tup_80049.Field1.length : 0))) {
								F.line = 457;
								gt_80048.text(tup_80049.Field1).size(cfg_76027[0].S1).x(addInt(px_80044, 2)).y(0);
								}
								
								}
								
								F.line = 354;
								n_80228 = 0;
								F.line = 355;
								nimCopy(cur_80230, nxt_80237, NTI79497);
								F.line = 356;
								var nx_80258 = to_75057(sc_80220, cur_80230.Field0);
								F.line = 357;
								var name_80260 = cur_80230.Field1;
								if (((cur_80230.Field0 - px_80226) < (5.0000000000000000e+00 * d1pct_80224))) {
								F.line = 359;
								name_80260 = "";
								}
								else {
									F.line = 361;
									px_80226 = cur_80230.Field0;
								}
								
								F.line = 362;
								var tup_80262 = nimCopy(null, {Field0: 1, Field1: name_80260, Field2: (nx_80258|0)}, NTI79015);
								F.line = 363;
								nimCopy(i_80218, tup_80262, NTI79015);
								F.line = 413;
								nimCopy(tup_80049, i_80218, NTI79015);
								F.line = 440;
								debg_73036((makeNimstrLit("x-iter: ").slice(0,-1)).concat(cstrToNimstr((tup_80049.Field2)+"")));
								F.line = 441;
								px_80044 = tup_80049.Field2;
								F.line = 442;
								n_80043 = addInt(n_80043, 1);
								F.line = 443;
								var ns_80265 = cstrToNimstr((n_80043)+"");
								if ((tup_80049.Field0 == 1)) {
								F.line = 445;
								var y1_80267 = 0;
								if (((tup_80049.Field1 != null ? tup_80049.Field1.length : 0) < 1)) {
								F.line = 447;
								y1_80267 = cfg_76027[0].H5;
								}
								
								F.line = 448;
								g_80046.line(px_80044, y1_80267, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("t1-").slice(0,-1)).concat(ns_80265))).attr("class", "xtick1");
								F.line = 450;
								g_80046.line(px_80044, (cfg_76027[0].Y1|0), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("t2-").slice(0,-1)).concat(ns_80265))).attr("class", "xtick2");
								}
								
								if ((tup_80049.Field0 == 2)) {
								F.line = 453;
								g_80046.line(px_80044, cfg_76027[0].H6, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("s1-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub1");
								F.line = 455;
								gs_80047.line(px_80044, addInt((cfg_76027[0].Y1|0), 1), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("s2-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub2");
								}
								
								if ((0 < (tup_80049.Field1 != null ? tup_80049.Field1.length : 0))) {
								F.line = 457;
								gt_80048.text(tup_80049.Field1).size(cfg_76027[0].S1).x(addInt(px_80044, 2)).y(0);
								}
								
							}
					} while(false);
				} while(false);
				break;
			default: 
				L30: do {
					F.line = 415;
					var i_80269 = {Field0: 0, Field1: null, Field2: 0};
					F.line = 367;
					var rng_80271 = (max_80039 - min_80038);
					if ((rng_80271 < 2.5920000000000000e+06)) {
					L31: do {
						F.line = 371;
						var i_80273 = {Field0: 0, Field1: null, Field2: 0};
						F.line = 117;
						var sc_80275 = (Tmp34 = range_75048((Tmp33 = domain_75039((Tmp32 = initScaleLinear_75022(), Tmp32[0]), Tmp32[1], [min_80038, max_80039]), Tmp33[0]), Tmp33[1], [cfg_76027[0].X1, cfg_76027[0].X2]), Tmp34[0])[Tmp34[1]];
						F.line = 119;
						cfg_76027[0].rx = (Tmp37 = range_75048((Tmp36 = domain_75039((Tmp35 = initScaleLinear_75022(), Tmp35[0]), Tmp35[1], [cfg_76027[0].X1, cfg_76027[0].X2]), Tmp36[0]), Tmp36[1], [min_80038, max_80039]), Tmp37[0])[Tmp37[1]];
						F.line = 121;
						cfg_76027[0].sx = sc_80275;
						F.line = 122;
						var x_80277 = min_80038;
						F.line = 123;
						var d1pct_80279 = ((max_80039 - min_80038) * 1.0000000000000000e-02);
						F.line = 124;
						var cur_80281 = day_search_79063((x_80277|0), -1.0000000000000001e-01);
						F.line = 125;
						var colontmp__80953 = {Field0: 0.0, Field1: 0};
						F.line = 125;
						var sx_80284 = 0.0;
						F.line = 125;
						var nn_80286 = 0;
						F.line = 125;
						nimCopy(colontmp__80953, xaxis_day_subtick_79081(d1pct_80279), NTI79084);
						F.line = 125;
						sx_80284 = colontmp__80953["Field0"];
						F.line = 125;
						nn_80286 = colontmp__80953["Field1"];
						F.line = 126;
						var px_80288 = (-5.0000000000000000e+00 * sx_80284);
						F.line = 127;
						var n_80290 = addInt(nn_80286, 1);
						F.line = 128;
						cur_80281.Field1 = "";
						L38: do {
							F.line = 130;
								L39: while (true) {
								if (!(x_80277 < max_80039)) break L39;
									L40: do {
										F.line = 131;
										var nxt_80292 = day_search_79063((x_80277|0), -1.0000000000000001e-01);
										F.line = 132;
										var nx_80295 = to_75057(sc_80275, x_80277);
										F.line = 133;
										x_80277 = (x_80277 + sx_80284);
										F.line = 134;
										n_80290 = addInt(n_80290, 1);
										if (((n_80290 < nn_80286) || (nxt_80292.Field1 == cur_80281.Field1))) {
										F.line = 137;
										var tup_80297 = nimCopy(null, {Field0: 2, Field1: "", Field2: (nx_80295|0)}, NTI79015);
										F.line = 138;
										nimCopy(i_80273, tup_80297, NTI79015);
										F.line = 372;
										nimCopy(i_80269, i_80273, NTI79015);
										F.line = 416;
										nimCopy(tup_80049, i_80269, NTI79015);
										F.line = 440;
										debg_73036((makeNimstrLit("x-iter: ").slice(0,-1)).concat(cstrToNimstr((tup_80049.Field2)+"")));
										F.line = 441;
										px_80044 = tup_80049.Field2;
										F.line = 442;
										n_80043 = addInt(n_80043, 1);
										F.line = 443;
										var ns_80300 = cstrToNimstr((n_80043)+"");
										if ((tup_80049.Field0 == 1)) {
										F.line = 445;
										var y1_80302 = 0;
										if (((tup_80049.Field1 != null ? tup_80049.Field1.length : 0) < 1)) {
										F.line = 447;
										y1_80302 = cfg_76027[0].H5;
										}
										
										F.line = 448;
										g_80046.line(px_80044, y1_80302, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("t1-").slice(0,-1)).concat(ns_80300))).attr("class", "xtick1");
										F.line = 450;
										g_80046.line(px_80044, (cfg_76027[0].Y1|0), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("t2-").slice(0,-1)).concat(ns_80300))).attr("class", "xtick2");
										}
										
										if ((tup_80049.Field0 == 2)) {
										F.line = 453;
										g_80046.line(px_80044, cfg_76027[0].H6, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("s1-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub1");
										F.line = 455;
										gs_80047.line(px_80044, addInt((cfg_76027[0].Y1|0), 1), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("s2-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub2");
										}
										
										if ((0 < (tup_80049.Field1 != null ? tup_80049.Field1.length : 0))) {
										F.line = 457;
										gt_80048.text(tup_80049.Field1).size(cfg_76027[0].S1).x(addInt(px_80044, 2)).y(0);
										}
										
										F.line = 139;
										break L40;
										}
										
										F.line = 141;
										n_80290 = 0;
										F.line = 142;
										nimCopy(cur_80281, nxt_80292, NTI79067);
										F.line = 143;
										var name_80304 = cur_80281.Field1;
										if (((cur_80281.Field0 - px_80288) < (5.0000000000000000e+00 * d1pct_80279))) {
										F.line = 145;
										name_80304 = "";
										}
										else {
											F.line = 147;
											px_80288 = cur_80281.Field0;
										}
										
										F.line = 148;
										var tup_80306 = nimCopy(null, {Field0: 1, Field1: name_80304, Field2: (nx_80295|0)}, NTI79015);
										F.line = 149;
										nimCopy(i_80273, tup_80306, NTI79015);
										F.line = 372;
										nimCopy(i_80269, i_80273, NTI79015);
										F.line = 416;
										nimCopy(tup_80049, i_80269, NTI79015);
										F.line = 440;
										debg_73036((makeNimstrLit("x-iter: ").slice(0,-1)).concat(cstrToNimstr((tup_80049.Field2)+"")));
										F.line = 441;
										px_80044 = tup_80049.Field2;
										F.line = 442;
										n_80043 = addInt(n_80043, 1);
										F.line = 443;
										var ns_80309 = cstrToNimstr((n_80043)+"");
										if ((tup_80049.Field0 == 1)) {
										F.line = 445;
										var y1_80311 = 0;
										if (((tup_80049.Field1 != null ? tup_80049.Field1.length : 0) < 1)) {
										F.line = 447;
										y1_80311 = cfg_76027[0].H5;
										}
										
										F.line = 448;
										g_80046.line(px_80044, y1_80311, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("t1-").slice(0,-1)).concat(ns_80309))).attr("class", "xtick1");
										F.line = 450;
										g_80046.line(px_80044, (cfg_76027[0].Y1|0), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("t2-").slice(0,-1)).concat(ns_80309))).attr("class", "xtick2");
										}
										
										if ((tup_80049.Field0 == 2)) {
										F.line = 453;
										g_80046.line(px_80044, cfg_76027[0].H6, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("s1-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub1");
										F.line = 455;
										gs_80047.line(px_80044, addInt((cfg_76027[0].Y1|0), 1), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("s2-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub2");
										}
										
										if ((0 < (tup_80049.Field1 != null ? tup_80049.Field1.length : 0))) {
										F.line = 457;
										gt_80048.text(tup_80049.Field1).size(cfg_76027[0].S1).x(addInt(px_80044, 2)).y(0);
										}
										
									} while(false);
								}
						} while(false);
					} while(false);
					}
					else {
					if ((rng_80271 < 1.5552000000000000e+07)) {
					L41: do {
						F.line = 374;
						var i_80313 = {Field0: 0, Field1: null, Field2: 0};
						F.line = 190;
						var sc_80315 = (Tmp44 = range_75048((Tmp43 = domain_75039((Tmp42 = initScaleLinear_75022(), Tmp42[0]), Tmp42[1], [min_80038, max_80039]), Tmp43[0]), Tmp43[1], [cfg_76027[0].X1, cfg_76027[0].X2]), Tmp44[0])[Tmp44[1]];
						F.line = 192;
						cfg_76027[0].rx = (Tmp47 = range_75048((Tmp46 = domain_75039((Tmp45 = initScaleLinear_75022(), Tmp45[0]), Tmp45[1], [cfg_76027[0].X1, cfg_76027[0].X2]), Tmp46[0]), Tmp46[1], [min_80038, max_80039]), Tmp47[0])[Tmp47[1]];
						F.line = 194;
						cfg_76027[0].sx = sc_80315;
						F.line = 195;
						warn_73060((makeNimstrLit("xaxis_week: ").slice(0,-1)).concat(cstrToNimstr((min_80038)+"").slice(0,-1),makeNimstrLit(" to ").slice(0,-1),cstrToNimstr((max_80039)+"")));
						F.line = 196;
						warn_73060((makeNimstrLit("xaxis_week: sx to ").slice(0,-1)).concat(cstrToNimstr((to_75063(sc_80315, 604800))+"")));
						F.line = 197;
						var x_80317 = min_80038;
						F.line = 198;
						var d1pct_80319 = ((max_80039 - min_80038) * 1.0000000000000000e-02);
						F.line = 199;
						var cur_80321 = week_search_79203((x_80317|0), -1.0000000000000001e-01);
						F.line = 200;
						var colontmp__80954 = {Field0: 0.0, Field1: 0};
						F.line = 200;
						var sx_80324 = 0.0;
						F.line = 200;
						var nn_80326 = 0;
						F.line = 200;
						nimCopy(colontmp__80954, xaxis_week_subtick_79241(d1pct_80319), NTI79244);
						F.line = 200;
						sx_80324 = colontmp__80954["Field0"];
						F.line = 200;
						nn_80326 = colontmp__80954["Field1"];
						F.line = 201;
						var px_80328 = (-5.0000000000000000e+00 * sx_80324);
						F.line = 202;
						var n_80330 = addInt(nn_80326, 1);
						F.line = 203;
						cur_80321.Field1 = "";
						L48: do {
							F.line = 205;
								L49: while (true) {
								if (!(x_80317 < max_80039)) break L49;
									L50: do {
										F.line = 206;
										var nxt_80332 = week_search_79203((x_80317|0), -1.0000000000000001e-01);
										F.line = 207;
										var nx_80335 = to_75057(sc_80315, x_80317);
										F.line = 208;
										x_80317 = (x_80317 + sx_80324);
										F.line = 209;
										n_80330 = addInt(n_80330, 1);
										if (((n_80330 < nn_80326) || (nxt_80332.Field1 == cur_80321.Field1))) {
										F.line = 212;
										var tup_80337 = nimCopy(null, {Field0: 2, Field1: "", Field2: (nx_80335|0)}, NTI79015);
										F.line = 213;
										nimCopy(i_80313, tup_80337, NTI79015);
										F.line = 375;
										nimCopy(i_80269, i_80313, NTI79015);
										F.line = 416;
										nimCopy(tup_80049, i_80269, NTI79015);
										F.line = 440;
										debg_73036((makeNimstrLit("x-iter: ").slice(0,-1)).concat(cstrToNimstr((tup_80049.Field2)+"")));
										F.line = 441;
										px_80044 = tup_80049.Field2;
										F.line = 442;
										n_80043 = addInt(n_80043, 1);
										F.line = 443;
										var ns_80340 = cstrToNimstr((n_80043)+"");
										if ((tup_80049.Field0 == 1)) {
										F.line = 445;
										var y1_80342 = 0;
										if (((tup_80049.Field1 != null ? tup_80049.Field1.length : 0) < 1)) {
										F.line = 447;
										y1_80342 = cfg_76027[0].H5;
										}
										
										F.line = 448;
										g_80046.line(px_80044, y1_80342, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("t1-").slice(0,-1)).concat(ns_80340))).attr("class", "xtick1");
										F.line = 450;
										g_80046.line(px_80044, (cfg_76027[0].Y1|0), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("t2-").slice(0,-1)).concat(ns_80340))).attr("class", "xtick2");
										}
										
										if ((tup_80049.Field0 == 2)) {
										F.line = 453;
										g_80046.line(px_80044, cfg_76027[0].H6, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("s1-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub1");
										F.line = 455;
										gs_80047.line(px_80044, addInt((cfg_76027[0].Y1|0), 1), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("s2-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub2");
										}
										
										if ((0 < (tup_80049.Field1 != null ? tup_80049.Field1.length : 0))) {
										F.line = 457;
										gt_80048.text(tup_80049.Field1).size(cfg_76027[0].S1).x(addInt(px_80044, 2)).y(0);
										}
										
										F.line = 214;
										break L50;
										}
										
										F.line = 216;
										n_80330 = 0;
										F.line = 217;
										nimCopy(cur_80321, nxt_80332, NTI79207);
										F.line = 218;
										var name_80344 = cur_80321.Field1;
										if (((cur_80321.Field0 - px_80328) < (5.0000000000000000e+00 * d1pct_80319))) {
										F.line = 220;
										name_80344 = "";
										}
										else {
											F.line = 222;
											px_80328 = cur_80321.Field0;
										}
										
										F.line = 223;
										var tup_80346 = nimCopy(null, {Field0: 1, Field1: name_80344, Field2: (nx_80335|0)}, NTI79015);
										F.line = 224;
										nimCopy(i_80313, tup_80346, NTI79015);
										F.line = 375;
										nimCopy(i_80269, i_80313, NTI79015);
										F.line = 416;
										nimCopy(tup_80049, i_80269, NTI79015);
										F.line = 440;
										debg_73036((makeNimstrLit("x-iter: ").slice(0,-1)).concat(cstrToNimstr((tup_80049.Field2)+"")));
										F.line = 441;
										px_80044 = tup_80049.Field2;
										F.line = 442;
										n_80043 = addInt(n_80043, 1);
										F.line = 443;
										var ns_80349 = cstrToNimstr((n_80043)+"");
										if ((tup_80049.Field0 == 1)) {
										F.line = 445;
										var y1_80351 = 0;
										if (((tup_80049.Field1 != null ? tup_80049.Field1.length : 0) < 1)) {
										F.line = 447;
										y1_80351 = cfg_76027[0].H5;
										}
										
										F.line = 448;
										g_80046.line(px_80044, y1_80351, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("t1-").slice(0,-1)).concat(ns_80349))).attr("class", "xtick1");
										F.line = 450;
										g_80046.line(px_80044, (cfg_76027[0].Y1|0), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("t2-").slice(0,-1)).concat(ns_80349))).attr("class", "xtick2");
										}
										
										if ((tup_80049.Field0 == 2)) {
										F.line = 453;
										g_80046.line(px_80044, cfg_76027[0].H6, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("s1-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub1");
										F.line = 455;
										gs_80047.line(px_80044, addInt((cfg_76027[0].Y1|0), 1), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("s2-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub2");
										}
										
										if ((0 < (tup_80049.Field1 != null ? tup_80049.Field1.length : 0))) {
										F.line = 457;
										gt_80048.text(tup_80049.Field1).size(cfg_76027[0].S1).x(addInt(px_80044, 2)).y(0);
										}
										
									} while(false);
								}
						} while(false);
					} while(false);
					}
					else {
					if ((rng_80271 < 6.3072000000000000e+07)) {
					L51: do {
						F.line = 377;
						var i_80353 = {Field0: 0, Field1: null, Field2: 0};
						F.line = 258;
						var sc_80355 = (Tmp54 = range_75048((Tmp53 = domain_75039((Tmp52 = initScaleLinear_75022(), Tmp52[0]), Tmp52[1], [min_80038, max_80039]), Tmp53[0]), Tmp53[1], [cfg_76027[0].X1, cfg_76027[0].X2]), Tmp54[0])[Tmp54[1]];
						F.line = 260;
						cfg_76027[0].rx = (Tmp57 = range_75048((Tmp56 = domain_75039((Tmp55 = initScaleLinear_75022(), Tmp55[0]), Tmp55[1], [cfg_76027[0].X1, cfg_76027[0].X2]), Tmp56[0]), Tmp56[1], [min_80038, max_80039]), Tmp57[0])[Tmp57[1]];
						F.line = 262;
						cfg_76027[0].sx = sc_80355;
						F.line = 263;
						var x_80357 = min_80038;
						F.line = 264;
						var d1pct_80359 = ((max_80039 - min_80038) * 1.0000000000000000e-02);
						F.line = 265;
						var px_80361 = 0.0;
						F.line = 266;
						var n_80363 = 0;
						F.line = 267;
						var cur_80365 = month_search_79365((x_80357|0), -1.0000000000000001e-01);
						F.line = 268;
						var colontmp__80955 = {Field0: 0.0, Field1: 0};
						F.line = 268;
						var sx_80368 = 0.0;
						F.line = 268;
						var nn_80370 = 0;
						F.line = 268;
						nimCopy(colontmp__80955, xaxis_month_subtick_79384(d1pct_80359), NTI79387);
						F.line = 268;
						sx_80368 = colontmp__80955["Field0"];
						F.line = 268;
						nn_80370 = colontmp__80955["Field1"];
						L58: do {
							F.line = 269;
								L59: while (true) {
								if (!(x_80357 < max_80039)) break L59;
									F.line = 270;
									x_80357 = (x_80357 + sx_80368);
									F.line = 271;
									var nxt_80372 = month_search_79365((x_80357|0), -1.0000000000000001e-01);
									F.line = 272;
									n_80363 = addInt(n_80363, 1);
									if ((n_80363 < nn_80370)) {
									F.line = 274;
									var nx_80375 = to_75057(sc_80355, x_80357);
									F.line = 275;
									var tup_80377 = nimCopy(null, {Field0: 2, Field1: "", Field2: (nx_80375|0)}, NTI79015);
									F.line = 276;
									nimCopy(i_80353, tup_80377, NTI79015);
									F.line = 378;
									nimCopy(i_80269, i_80353, NTI79015);
									F.line = 416;
									nimCopy(tup_80049, i_80269, NTI79015);
									F.line = 440;
									debg_73036((makeNimstrLit("x-iter: ").slice(0,-1)).concat(cstrToNimstr((tup_80049.Field2)+"")));
									F.line = 441;
									px_80044 = tup_80049.Field2;
									F.line = 442;
									n_80043 = addInt(n_80043, 1);
									F.line = 443;
									var ns_80380 = cstrToNimstr((n_80043)+"");
									if ((tup_80049.Field0 == 1)) {
									F.line = 445;
									var y1_80382 = 0;
									if (((tup_80049.Field1 != null ? tup_80049.Field1.length : 0) < 1)) {
									F.line = 447;
									y1_80382 = cfg_76027[0].H5;
									}
									
									F.line = 448;
									g_80046.line(px_80044, y1_80382, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("t1-").slice(0,-1)).concat(ns_80380))).attr("class", "xtick1");
									F.line = 450;
									g_80046.line(px_80044, (cfg_76027[0].Y1|0), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("t2-").slice(0,-1)).concat(ns_80380))).attr("class", "xtick2");
									}
									
									if ((tup_80049.Field0 == 2)) {
									F.line = 453;
									g_80046.line(px_80044, cfg_76027[0].H6, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("s1-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub1");
									F.line = 455;
									gs_80047.line(px_80044, addInt((cfg_76027[0].Y1|0), 1), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("s2-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub2");
									}
									
									if ((0 < (tup_80049.Field1 != null ? tup_80049.Field1.length : 0))) {
									F.line = 457;
									gt_80048.text(tup_80049.Field1).size(cfg_76027[0].S1).x(addInt(px_80044, 2)).y(0);
									}
									
									}
									
									if ((nxt_80372.Field1 == cur_80365.Field1)) {
									F.line = 278;
									var nx_80384 = to_75057(sc_80355, x_80357);
									F.line = 279;
									var tup_80386 = nimCopy(null, {Field0: 2, Field1: "", Field2: (nx_80384|0)}, NTI79015);
									F.line = 280;
									nimCopy(i_80353, tup_80386, NTI79015);
									F.line = 378;
									nimCopy(i_80269, i_80353, NTI79015);
									F.line = 416;
									nimCopy(tup_80049, i_80269, NTI79015);
									F.line = 440;
									debg_73036((makeNimstrLit("x-iter: ").slice(0,-1)).concat(cstrToNimstr((tup_80049.Field2)+"")));
									F.line = 441;
									px_80044 = tup_80049.Field2;
									F.line = 442;
									n_80043 = addInt(n_80043, 1);
									F.line = 443;
									var ns_80389 = cstrToNimstr((n_80043)+"");
									if ((tup_80049.Field0 == 1)) {
									F.line = 445;
									var y1_80391 = 0;
									if (((tup_80049.Field1 != null ? tup_80049.Field1.length : 0) < 1)) {
									F.line = 447;
									y1_80391 = cfg_76027[0].H5;
									}
									
									F.line = 448;
									g_80046.line(px_80044, y1_80391, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("t1-").slice(0,-1)).concat(ns_80389))).attr("class", "xtick1");
									F.line = 450;
									g_80046.line(px_80044, (cfg_76027[0].Y1|0), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("t2-").slice(0,-1)).concat(ns_80389))).attr("class", "xtick2");
									}
									
									if ((tup_80049.Field0 == 2)) {
									F.line = 453;
									g_80046.line(px_80044, cfg_76027[0].H6, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("s1-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub1");
									F.line = 455;
									gs_80047.line(px_80044, addInt((cfg_76027[0].Y1|0), 1), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("s2-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub2");
									}
									
									if ((0 < (tup_80049.Field1 != null ? tup_80049.Field1.length : 0))) {
									F.line = 457;
									gt_80048.text(tup_80049.Field1).size(cfg_76027[0].S1).x(addInt(px_80044, 2)).y(0);
									}
									
									}
									
									F.line = 282;
									n_80363 = 0;
									F.line = 283;
									nimCopy(cur_80365, nxt_80372, NTI79369);
									F.line = 284;
									var nx_80393 = to_75057(sc_80355, cur_80365.Field0);
									F.line = 285;
									var name_80395 = cur_80365.Field1;
									if (((cur_80365.Field0 - px_80361) < (5.0000000000000000e+00 * d1pct_80359))) {
									F.line = 287;
									name_80395 = "";
									}
									else {
										F.line = 289;
										px_80361 = cur_80365.Field0;
									}
									
									F.line = 290;
									var tup_80397 = nimCopy(null, {Field0: 1, Field1: name_80395, Field2: (nx_80393|0)}, NTI79015);
									F.line = 291;
									nimCopy(i_80353, tup_80397, NTI79015);
									F.line = 378;
									nimCopy(i_80269, i_80353, NTI79015);
									F.line = 416;
									nimCopy(tup_80049, i_80269, NTI79015);
									F.line = 440;
									debg_73036((makeNimstrLit("x-iter: ").slice(0,-1)).concat(cstrToNimstr((tup_80049.Field2)+"")));
									F.line = 441;
									px_80044 = tup_80049.Field2;
									F.line = 442;
									n_80043 = addInt(n_80043, 1);
									F.line = 443;
									var ns_80400 = cstrToNimstr((n_80043)+"");
									if ((tup_80049.Field0 == 1)) {
									F.line = 445;
									var y1_80402 = 0;
									if (((tup_80049.Field1 != null ? tup_80049.Field1.length : 0) < 1)) {
									F.line = 447;
									y1_80402 = cfg_76027[0].H5;
									}
									
									F.line = 448;
									g_80046.line(px_80044, y1_80402, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("t1-").slice(0,-1)).concat(ns_80400))).attr("class", "xtick1");
									F.line = 450;
									g_80046.line(px_80044, (cfg_76027[0].Y1|0), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("t2-").slice(0,-1)).concat(ns_80400))).attr("class", "xtick2");
									}
									
									if ((tup_80049.Field0 == 2)) {
									F.line = 453;
									g_80046.line(px_80044, cfg_76027[0].H6, px_80044, (cfg_76027[0].Y1|0)).id(toJSStr((makeNimstrLit("s1-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub1");
									F.line = 455;
									gs_80047.line(px_80044, addInt((cfg_76027[0].Y1|0), 1), px_80044, (cfg_76027[0].Y2|0)).id(toJSStr((makeNimstrLit("s2-").slice(0,-1)).concat(cstrToNimstr((n_80043)+"")))).attr("class", "xtick-sub2");
									}
									
									if ((0 < (tup_80049.Field1 != null ? tup_80049.Field1.length : 0))) {
									F.line = 457;
									gt_80048.text(tup_80049.Field1).size(cfg_76027[0].S1).x(addInt(px_80044, 2)).y(0);
									}
									
								}
						} while(false);
					} while(false);
					}
					}}
				} while(false);
				break;
			}
		} while(false);
		F.line = 458;
		g_80046.stroke({color: "#000", width: 2, opacity: 1.0000000000000000e+00}).id("xtics");
		F.line = 459;
		gs_80047.id("xtics-sub");
		F.line = 460;
		ga_80045.id("xaxis");
	framePtr = F.prev;

	
}

function on_csv_yaxis_80403(min_80405, max_80406, sc_80407) {
	var F={procname:"gannt.on_csv_yaxis",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
		F.line = 464;
		var svg_80408 = SVG.select("svg").get(0).doc();
		F.line = 465;
		var y1_80409 = to_75057(sc_80407, min_80405);
		F.line = 466;
		var y2_80410 = to_75057(sc_80407, max_80406);
		F.line = 467;
		var bbox_80412 = svg_80408.rect(199, ((y2_80410 - y1_80409)|0));
		F.line = 468;
		bbox_80412.x(0).y((cfg_76027[0].Y1|0));
		F.line = 469;
		rect_black_80032(bbox_80412, "yaxis: bbox");
	framePtr = F.prev;

	
}

function xmlid_78268(self_78270) {
	var result_78271 = null;

	var F={procname:"bars.xmlid",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 156;
		result_78271 = toJSStr((makeNimstrLit("stone-").slice(0,-1)).concat(cstrToNimstr((self_78270.idx)+"")));
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_78271;

}

function regist_as_milestone_78523(mi_78525) {
	var result_78526 = {m_type: NTI77005, idx: 0, at_or_on: 0.0, title: null};

	var F={procname:"bars.regist_as_milestone",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 277;
		var ret_78527 = {m_type: NTI77005, idx: 0, at_or_on: 0.0, title: null};
		F.line = 278;
		ret_78527.title = mi_78525.text;
		F.line = 279;
		ret_78527.at_or_on = mi_begin_78241(mi_78525);
		F.line = 280;
		var Tmp1 = nimCopy(null, ret_78527, NTI77005);
		if (mi_stones_77065[0] != null) { mi_stones_77065[0].push(Tmp1); } else { mi_stones_77065[0] = [Tmp1]; };
		F.line = 281;
		ret_78527.idx = subInt((mi_stones_77065[0] != null ? mi_stones_77065[0].length : 0), 1);
		F.line = 284;
		var svg_78545 = SVG.select("svg").get(0).doc();
		F.line = 285;
		var g_78546 = svg_78545.group();
		F.line = 286;
		g_78546.id(xmlid_78268(ret_78527));
		F.line = 287;
		var x_78547 = (to_75057(cfg_76027[0].sx, ret_78527.at_or_on)|0);
		F.line = 288;
		var y_78548 = (to_75063(cfg_76027[0].sy, 0)|0);
		F.line = 289;
		var t_78549 = g_78546.text(ret_78527.title);
		F.line = 290;
		t_78549.x(addInt(x_78547, cfg_76027[0].W1)).y(y_78548);
		F.line = 291;
		var p_78550 = g_78546.path(toJSStr((makeNimstrLit("M").slice(0,-1)).concat(cstrToNimstr((x_78547)+"").slice(0,-1),makeNimstrLit(" ").slice(0,-1),cstrToNimstr((addInt(y_78548, cfg_76027[0].H4))+""))));
		F.line = 292;
		var mk_78551 = SVG.select("#marker-2").get(0);
		F.line = 293;
		p_78550.marker("start", mk_78551);
		F.line = 294;
		nimCopy(result_78526, ret_78527, NTI77005);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_78526;

}

function on_csv_79010(dat_79013) {
		var Tmp1;
		var Tmp2;
		var Tmp3;
		var Tmp4;
		var Tmp5;
		var Tmp6;

	var F={procname:"gannt.on_csv",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
		F.line = 713;
		debg_73036((makeNimstrLit("inst:").slice(0,-1)).concat(cstrToNimstr(((dat_79013 != null ? dat_79013.length : 0))+"")));
		F.line = 714;
		clear_svg_80663();
		F.line = 717;
		var minx_80681 = min_from_78555(dat_79013, mi_begin_78241);
		F.line = 718;
		var maxx_80682 = max_from_78611(dat_79013, mi_end_78246);
		F.line = 719;
		on_csv_xaxis_80036(minx_80681, maxx_80682);
		F.line = 722;
		var dom_80685 = nimCopy(null, [0.0, ((cfg_76027[0].Y2 - cfg_76027[0].Y1) / cfg_76027[0].H1)], NTI80683);
		F.line = 723;
		var rng_80688 = nimCopy(null, [cfg_76027[0].Y1, cfg_76027[0].Y2], NTI80686);
		F.line = 724;
		var sy_80689 = (Tmp3 = range_75048((Tmp2 = domain_75039((Tmp1 = initScaleLinear_75022(), Tmp1[0]), Tmp1[1], dom_80685), Tmp2[0]), Tmp2[1], rng_80688), Tmp3[0])[Tmp3[1]];
		F.line = 725;
		cfg_76027[0].ry = (Tmp6 = range_75048((Tmp5 = domain_75039((Tmp4 = initScaleLinear_75022(), Tmp4[0]), Tmp4[1], rng_80688), Tmp5[0]), Tmp5[1], dom_80685), Tmp6[0])[Tmp6[1]];
		F.line = 726;
		cfg_76027[0].sy = sy_80689;
		F.line = 729;
		on_csv_yaxis_80403(dom_80685[chckIndx(0, 0, dom_80685.length-1)-0], dom_80685[chckIndx(1, 0, dom_80685.length-1)-0], sy_80689);
		L7: do {
			F.line = 732;
			var i_80698 = null;
			F.line = 3639;
			var i_80703 = 0;
			F.line = 3640;
			var L_80705 = (dat_79013 != null ? dat_79013.length : 0);
			L8: do {
				F.line = 3641;
					L9: while (true) {
					if (!(i_80703 < L_80705)) break L9;
						F.line = 3642;
						i_80698 = dat_79013[chckIndx(i_80703, 0, dat_79013.length-1)-0];
						L10: do {
							if ((i_80698.group == "1")) {
							F.line = 734;
							regist_as_milestone_78523(i_80698);
							F.line = 735;
							break L10;
							}
							
							F.line = 736;
							regist_as_bar_78501(i_80698);
						} while(false);
						F.line = 3643;
						i_80703 = addInt(i_80703, 1);
						if (!(((dat_79013 != null ? dat_79013.length : 0) == L_80705))) {
						F.line = 3644;
						failedAssertImpl_22439(makeNimstrLit("len(a) == L seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 738;
		regist_bars_event_79008();
	framePtr = F.prev;

	
}

function on_drag_finish_80487(ev_80489) {
	var result_80490 = false;

	var F={procname:"gannt.on_drag_finish",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
		F.line = 518;
		var rc_80491 = SVG.select(("#" + ev_80489.originalTarget.id)).get(0);
		F.line = 519;
		var x_80492 = rc_80491.x();
		F.line = 520;
		switch (drag_mode_79030[0]) {
		case 1:
			if ((x_80492 < drag_x_79031[0])) {
			F.line = 523;
			var w_80493 = addInt(subInt(drag_x_79031[0], x_80492), rc_80491.width());
			F.line = 524;
			rc_80491.width(w_80493);
			F.line = 525;
			debg_73036((makeNimstrLit("left<:").slice(0,-1)).concat(cstrToNimstr((rc_80491.width())+"")));
			}
			else {
				F.line = 527;
				var w_80494 = subInt(rc_80491.width(), subInt(x_80492, drag_x_79031[0]));
				if ((w_80494 < 0)) {
				F.line = 529;
				rc_80491.x(drag_x_79031[0]);
				F.line = 530;
				debg_73036((makeNimstrLit("left0:").slice(0,-1)).concat(cstrToNimstr((rc_80491.x())+"")));
				}
				else {
					F.line = 532;
					rc_80491.width(w_80494);
					F.line = 533;
					debg_73036((makeNimstrLit("left>:").slice(0,-1)).concat(cstrToNimstr((rc_80491.width())+"")));
				}
				
			}
			
			break;
		case 2:
			if ((drag_x_79031[0] < x_80492)) {
			F.line = 536;
			var w_80495 = addInt(subInt(x_80492, drag_x_79031[0]), rc_80491.width());
			F.line = 537;
			rc_80491.x(drag_x_79031[0]);
			F.line = 538;
			rc_80491.width(w_80495);
			F.line = 539;
			debg_73036((makeNimstrLit("rigt>:").slice(0,-1)).concat(cstrToNimstr((rc_80491.width())+"")));
			}
			else {
				F.line = 541;
				var w_80496 = subInt(rc_80491.width(), subInt(drag_x_79031[0], x_80492));
				if ((w_80496 < 0)) {
				F.line = 543;
				rc_80491.x(drag_x_79031[0]);
				F.line = 544;
				rc_80491.x(drag_x_79031[0]);
				F.line = 545;
				debg_73036((makeNimstrLit("rigt0:").slice(0,-1)).concat(cstrToNimstr((rc_80491.x())+"")));
				}
				else {
					F.line = 547;
					rc_80491.x(drag_x_79031[0]);
					F.line = 548;
					rc_80491.width(w_80496);
					F.line = 549;
					debg_73036((makeNimstrLit("rigt<:").slice(0,-1)).concat(cstrToNimstr((rc_80491.width())+"")));
				}
				
			}
			
			break;
		case 3:
			F.line = 551;
			var idx_80497 = (to_75063(cfg_76027[0].ry, rc_80491.y())|0);
			F.line = 552;
			info_73048((makeNimstrLit("on_drag_finish_y: now moving to ").slice(0,-1)).concat(cstrToNimstr((idx_80497)+"")));
			F.line = 553;
			var bar_80498 = initBar_from_rect_78470(rc_80491);
			F.line = 554;
			info_73087((toJSStr((makeNimstrLit("on_drag_finish_y: bar-").slice(0,-1)).concat(cstrToNimstr((bar_80498.idx)+"").slice(0,-1),makeNimstrLit(": "))) + bar_80498.text));
			F.line = 555;
			move_to_idx_77177(bar_80498, idx_80497);
			F.line = 556;
			var data_80499 = bars_get_all_seq_77156();
			F.line = 557;
			on_csv_79010(data_80499);
			break;
		default: 
			F.line = 560;
			debg_73036(makeNimstrLit("abc"));
			break;
		}
	framePtr = F.prev;

	return result_80490;

}

function on_drag_limit_y_80416(el_80418, x_80419, y_80420, m_80421) {
	var result_80422 = null;

	var F={procname:"gannt.on_drag_limit_y",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 474;
		var ret_80423 = {};
		if ((2 < drag_mode_79030[0])) {
		F.line = 476;
		ret_80423.y = true;
		F.line = 477;
		result_80422 = ret_80423;
		break BeforeRet;
		}
		
		F.line = 478;
		ret_80423.x = true;
		F.line = 479;
		result_80422 = ret_80423;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_80422;

}

function nsuStartsWith(s_37510, prefix_37511) {
	var result_37512 = false;

	BeforeRet: do {
		var i_37513 = 0;
		L1: do {
				L2: while (true) {
				if (!true) break L2;
					if ((prefix_37511[i_37513] == 0)) {
					result_37512 = true;
					break BeforeRet;
					}
					
					if (!((s_37510[i_37513] == prefix_37511[i_37513]))) {
					result_37512 = false;
					break BeforeRet;
					}
					
					i_37513 += 1;
				}
		} while(false);
	} while (false);

	return result_37512;

}

function class_to_group_77111(cname_77113) {
	var result_77114 = 0;

	var F={procname:"bars.class_to_group",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 61;
		var name_77115 = makeNimstrLit("");
		L1: do {
			F.line = 62;
			var i_77116 = null;
			F.line = 532;
			var colontmp__77128 = null;
			F.line = 62;
			colontmp__77128 = cstrToNimstr(cname_77113);
			F.line = 504;
			var last_77132 = 0;
			F.line = 505;
			var splits_77134 = -1;
			if ((0 < (colontmp__77128 != null ? colontmp__77128.length-1 : 0))) {
			L2: do {
				F.line = 508;
					L3: while (true) {
					if (!(last_77132 <= (colontmp__77128 != null ? colontmp__77128.length-1 : 0))) break L3;
						F.line = 509;
						var first_77136 = last_77132;
						L4: do {
							F.line = 510;
								L5: while (true) {
								if (!((last_77132 < (colontmp__77128 != null ? colontmp__77128.length-1 : 0)) && !((ConstSet5[colontmp__77128[chckIndx(last_77132, 0, colontmp__77128.length-1)-0]] != undefined)))) break L5;
									F.line = 511;
									last_77132 = addInt(last_77132, 1);
								}
						} while(false);
						if ((splits_77134 == 0)) {
						F.line = 512;
						last_77132 = (colontmp__77128 != null ? colontmp__77128.length-1 : 0);
						}
						
						F.line = 513;
						i_77116 = (colontmp__77128.slice(first_77136, (subInt(last_77132, 1))+1).concat(0));
						L6: do {
							if (!(nsuStartsWith(i_77116, makeNimstrLit("bar-")))) {
							F.line = 64;
							break L6;
							}
							
							F.line = 66;
							name_77115 = nimCopy(null, X5BX5D__21642(i_77116, dotdot__37462(4, subInt((i_77116 != null ? i_77116.length-1 : 0), 1))), NTI138);
						} while(false);
						if ((splits_77134 == 0)) {
						F.line = 514;
						break L2;
						}
						
						F.line = 515;
						splits_77134 = subInt(splits_77134, 1);
						F.line = 516;
						last_77132 = addInt(last_77132, 1);
					}
			} while(false);
			}
			
		} while(false);
		F.line = 67;
		result_77114 = (parseFloat(toJSStr(name_77115))|0);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_77114;

}

function fetch_from_rect_78258(self_78260, r_78261) {
	var result_78262 = null;

	var F={procname:"bars.fetch_from_rect",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 142;
		debg_73036((makeNimstrLit("update rect: ").slice(0,-1)).concat(cstrToNimstr((r_78261.x())+"").slice(0,-1),makeNimstrLit(",").slice(0,-1),cstrToNimstr((r_78261.width())+"")));
		F.line = 143;
		var x1_78264 = to_75063(cfg_76027[0].rx, r_78261.x());
		F.line = 144;
		var x2_78265 = to_75063(cfg_76027[0].rx, addInt(r_78261.x(), r_78261.width()));
		F.line = 145;
		debg_73036((makeNimstrLit("update rect: ").slice(0,-1)).concat(cstrToNimstr((x1_78264)+"").slice(0,-1),makeNimstrLit(",").slice(0,-1),cstrToNimstr((x2_78265)+"")));
		F.line = 146;
		var d1_78266 = getLocalTime_43644(fromSeconds_43656(x1_78264));
		F.line = 147;
		var d2_78267 = getLocalTime_43644(fromSeconds_43656(x2_78265));
		F.line = 148;
		self_78260.begin = x1_78264;
		F.line = 149;
		self_78260.fin = x2_78265;
		F.line = 150;
		self_78260.beginstr = toJSStr(format_44699(d1_78266, makeNimstrLit("yyyy/MM/dd HH:mm:ss")));
		F.line = 151;
		self_78260.endstr = toJSStr(format_44699(d2_78267, makeNimstrLit("yyyy/MM/dd HH:mm:ss")));
		F.line = 152;
		result_78262 = self_78260;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_78262;

}

function copyBar_78454(id_78456) {
	var result_78457 = null;

	var F={procname:"bars.copyBar",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 193;
		var obj_78465 = new_78277();
		F.line = 195;
		var cname_78466 = jQuery((("#" + id_78456) + " rect")).attr("class");
		F.line = 196;
		var name_78467 = toJSStr(cstrToNimstr((class_to_group_77111(cname_78466))+""));
		F.line = 198;
		obj_78465.file = "gui";
		F.line = 199;
		obj_78465.group = name_78467;
		F.line = 200;
		obj_78465.text = jQuery((("#" + id_78456) + " text")).text();
		F.line = 201;
		obj_78465.idx = 0;
		F.line = 203;
		var rc_78468 = SVG.select((("#" + id_78456) + " rect")).get(0);
		F.line = 204;
		fetch_from_rect_78258(obj_78465, rc_78468);
		F.line = 205;
		result_78457 = obj_78465;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_78457;

}

function on_cm_copybar_80521(ev_80523) {
	var result_80524 = false;

	var F={procname:"gannt.on_cm_copybar",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 582;
		var li_80525 = jQuery("li:first", ev_80523.target.parentNode);
		F.line = 583;
		var id_80526 = li_80525.text();
		F.line = 584;
		var bar_80527 = copyBar_78454(id_80526);
		F.line = 585;
		regist_as_bar_78501(bar_80527);
		F.line = 586;
		jQuery("#contextmenu").css("display", "none");
		F.line = 587;
		regist_bars_event_79008();
		F.line = 588;
		result_80524 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_80524;

}

function on_bars_select_79005(ev_79007) {
	var result_80539 = false;

	var F={procname:"gannt.on_bars_select",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 605;
		var node_80540 = ev_79007.target.parentNode;
		F.line = 606;
		info_73087(("on_bars_select: " + node_80540.id));
		F.line = 607;
		jQuery(".edit").css("display", "none");
		F.line = 608;
		jQuery(".edit-bar").css("display", "block");
		F.line = 609;
		var t_80541 = jQuery((("#" + node_80540.id) + " text")).text();
		F.line = 610;
		jQuery("#edit-bar-title").val(t_80541);
		F.line = 611;
		jQuery("#edit-bar-id").attr("readonly", t_80541).val(node_80540.id);
		F.line = 612;
		result_80539 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_80539;

}

function on_cm_bars_80542(ev_80544) {
	var result_80545 = false;

	var F={procname:"gannt.on_cm_bars",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 617;
		var node_80546 = ev_80544.target.parentNode;
		F.line = 618;
		info_73087(("on_cm_bars: " + node_80546.id));
		F.line = 619;
		var colontmp__80956 = {Field0: null, Field1: 0, Field2: 0};
		F.line = 619;
		var ul_80547 = null;
		F.line = 619;
		var x_80548 = 0;
		F.line = 619;
		var y_80549 = 0;
		F.line = 619;
		nimCopy(colontmp__80956, on_cm_setup_80507(ev_80544), NTI80510);
		F.line = 619;
		ul_80547 = colontmp__80956["Field0"];
		F.line = 619;
		x_80548 = colontmp__80956["Field1"];
		F.line = 619;
		y_80549 = colontmp__80956["Field2"];
		F.line = 620;
		ul_80547.append((("<li>" + node_80546.id) + "</li>"));
		F.line = 621;
		ul_80547.append("<li id=\"cm_copybar2\">copy bar</li>");
		F.line = 622;
		ul_80547.append("<li id=\"cm_newbar2\">new bar</li>");
		F.line = 623;
		jQuery("#cm_copybar2").off("click").on("click", on_cm_copybar_80521);
		F.line = 624;
		jQuery("#cm_newbar2").off("click").on("click", on_cm_newbar_80517);
		F.line = 627;
		on_bars_select_79005(ev_80544);
		F.line = 628;
		result_80545 = false;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_80545;

}

function regist_bars_event_79008() {
	var F={procname:"gannt.regist_bars_event",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
		F.line = 745;
		SVG.select("rect.bars").off("beforedrag.mm").on("beforedrag.mm", on_drag_before_80483).off("dragend.mm").on("dragend.mm", on_drag_finish_80487).draggable(on_drag_limit_y_80416);
		F.line = 746;
		jQuery("rect.bars").off("contextmenu.mm").on("contextmenu.mm", on_cm_bars_80542);
		F.line = 747;
		jQuery("rect.bars").off("click").on("click", on_bars_select_79005);
	framePtr = F.prev;

	
}

function on_cm_newbar_80517(ev_80519) {
	var result_80520 = false;

	var F={procname:"gannt.on_cm_newbar",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 575;
		create_new_bar_79001("new item", "");
		F.line = 576;
		jQuery("#contextmenu").css("display", "none");
		F.line = 577;
		regist_bars_event_79008();
		F.line = 578;
		result_80520 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_80520;

}

function on_contextmenu_80913(ev_80915) {
	var result_80916 = false;

	var F={procname:"gannt.on_contextmenu",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 913;
		var colontmp__80949 = {Field0: null, Field1: 0, Field2: 0};
		F.line = 913;
		var ul_80917 = null;
		F.line = 913;
		var x_80918 = 0;
		F.line = 913;
		var y_80919 = 0;
		F.line = 913;
		nimCopy(colontmp__80949, on_cm_setup_80507(ev_80915), NTI80510);
		F.line = 913;
		ul_80917 = colontmp__80949["Field0"];
		F.line = 913;
		x_80918 = colontmp__80949["Field1"];
		F.line = 913;
		y_80919 = colontmp__80949["Field2"];
		L1: do {
			F.line = 914;
			var tup_80920 = {Field0: null, Field1: null, Field2: null};
			F.line = 888;
			var id_area_80923 = 0;
			if (((cfg_76027[0].X1|0) < x_80918)) {
			if (((cfg_76027[0].Y1|0) < y_80919)) {
			F.line = 891;
			id_area_80923 = 3;
			}
			else {
				F.line = 893;
				id_area_80923 = 1;
			}
			
			}
			else {
			if (((cfg_76027[0].Y1|0) < y_80919)) {
			F.line = 895;
			id_area_80923 = 2;
			}
			}
			F.line = 896;
			switch (id_area_80923) {
			case 1:
				F.line = 898;
				nimCopy(tup_80920, {Field0: makeNimstrLit("cm_focus_xrange"), Field1: makeNimstrLit("Change range"), Field2: on_cm_focus_80865}, NTI80873);
				F.line = 918;
				ul_80917.append(toJSStr((makeNimstrLit("<li id=\"").slice(0,-1)).concat(tup_80920.Field0.slice(0,-1),makeNimstrLit("\">").slice(0,-1),tup_80920.Field1.slice(0,-1),makeNimstrLit("</li>"))));
				F.line = 919;
				jQuery(toJSStr((makeNimstrLit("#").slice(0,-1)).concat(tup_80920.Field0))).off("click").on("click", tup_80920.Field2);
				F.line = 900;
				nimCopy(tup_80920, {Field0: makeNimstrLit("cm_focus_xmin"), Field1: makeNimstrLit("Select start"), Field2: on_cm_focus_80865}, NTI80873);
				F.line = 918;
				ul_80917.append(toJSStr((makeNimstrLit("<li id=\"").slice(0,-1)).concat(tup_80920.Field0.slice(0,-1),makeNimstrLit("\">").slice(0,-1),tup_80920.Field1.slice(0,-1),makeNimstrLit("</li>"))));
				F.line = 919;
				jQuery(toJSStr((makeNimstrLit("#").slice(0,-1)).concat(tup_80920.Field0))).off("click").on("click", tup_80920.Field2);
				F.line = 901;
				nimCopy(tup_80920, {Field0: makeNimstrLit("cm_focus_xmax"), Field1: makeNimstrLit("Select end"), Field2: on_cm_focus_80865}, NTI80873);
				F.line = 918;
				ul_80917.append(toJSStr((makeNimstrLit("<li id=\"").slice(0,-1)).concat(tup_80920.Field0.slice(0,-1),makeNimstrLit("\">").slice(0,-1),tup_80920.Field1.slice(0,-1),makeNimstrLit("</li>"))));
				F.line = 919;
				jQuery(toJSStr((makeNimstrLit("#").slice(0,-1)).concat(tup_80920.Field0))).off("click").on("click", tup_80920.Field2);
				break;
			case 2:
				F.line = 903;
				nimCopy(tup_80920, {Field0: makeNimstrLit("cm_newbar"), Field1: makeNimstrLit("Create bar"), Field2: on_cm_newbar_80517}, NTI80873);
				F.line = 918;
				ul_80917.append(toJSStr((makeNimstrLit("<li id=\"").slice(0,-1)).concat(tup_80920.Field0.slice(0,-1),makeNimstrLit("\">").slice(0,-1),tup_80920.Field1.slice(0,-1),makeNimstrLit("</li>"))));
				F.line = 919;
				jQuery(toJSStr((makeNimstrLit("#").slice(0,-1)).concat(tup_80920.Field0))).off("click").on("click", tup_80920.Field2);
				break;
			case 3:
				F.line = 905;
				nimCopy(tup_80920, {Field0: makeNimstrLit("cm_focus_xrange"), Field1: makeNimstrLit("Change range"), Field2: on_cm_focus_80865}, NTI80873);
				F.line = 918;
				ul_80917.append(toJSStr((makeNimstrLit("<li id=\"").slice(0,-1)).concat(tup_80920.Field0.slice(0,-1),makeNimstrLit("\">").slice(0,-1),tup_80920.Field1.slice(0,-1),makeNimstrLit("</li>"))));
				F.line = 919;
				jQuery(toJSStr((makeNimstrLit("#").slice(0,-1)).concat(tup_80920.Field0))).off("click").on("click", tup_80920.Field2);
				F.line = 906;
				nimCopy(tup_80920, {Field0: makeNimstrLit("cm_focus_title"), Field1: makeNimstrLit("Edit text"), Field2: on_cm_focus_80865}, NTI80873);
				F.line = 918;
				ul_80917.append(toJSStr((makeNimstrLit("<li id=\"").slice(0,-1)).concat(tup_80920.Field0.slice(0,-1),makeNimstrLit("\">").slice(0,-1),tup_80920.Field1.slice(0,-1),makeNimstrLit("</li>"))));
				F.line = 919;
				jQuery(toJSStr((makeNimstrLit("#").slice(0,-1)).concat(tup_80920.Field0))).off("click").on("click", tup_80920.Field2);
				F.line = 907;
				nimCopy(tup_80920, {Field0: makeNimstrLit("cm_newbar"), Field1: makeNimstrLit("Create bar"), Field2: on_cm_newbar_80517}, NTI80873);
				F.line = 918;
				ul_80917.append(toJSStr((makeNimstrLit("<li id=\"").slice(0,-1)).concat(tup_80920.Field0.slice(0,-1),makeNimstrLit("\">").slice(0,-1),tup_80920.Field1.slice(0,-1),makeNimstrLit("</li>"))));
				F.line = 919;
				jQuery(toJSStr((makeNimstrLit("#").slice(0,-1)).concat(tup_80920.Field0))).off("click").on("click", tup_80920.Field2);
				break;
			default: 
				F.line = 909;
				nimCopy(tup_80920, {Field0: makeNimstrLit("cm_newbar"), Field1: makeNimstrLit("Create bar"), Field2: on_cm_newbar_80517}, NTI80873);
				F.line = 918;
				ul_80917.append(toJSStr((makeNimstrLit("<li id=\"").slice(0,-1)).concat(tup_80920.Field0.slice(0,-1),makeNimstrLit("\">").slice(0,-1),tup_80920.Field1.slice(0,-1),makeNimstrLit("</li>"))));
				F.line = 919;
				jQuery(toJSStr((makeNimstrLit("#").slice(0,-1)).concat(tup_80920.Field0))).off("click").on("click", tup_80920.Field2);
				break;
			}
		} while(false);
		F.line = 920;
		result_80916 = false;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_80916;

}

function xmlid_77151(item_77153) {
	var result_77154 = null;

	var F={procname:"bars.xmlid",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 84;
		result_77154 = toJSStr((makeNimstrLit("gntbar-").slice(0,-1)).concat(cstrToNimstr((item_77153.idx)+"")));
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_77154;

}

function debg_73084(fmt_73086) {
	var F={procname:"logging.debg",prev:framePtr,filename:"logging.nim",line:0};
	framePtr = F;
		F.line = 56;
		debg_73036(cstrToNimstr(fmt_73086));
	framePtr = F.prev;

	
}

function update_bars_from_svg_80603() {
	var result_80606 = null;

	var F={procname:"gannt.update_bars_from_svg",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 660;
		var data_80607 = bars_get_all_seq_77156();
		L1: do {
			F.line = 661;
			var i_80616 = null;
			F.line = 3639;
			var i_80621 = 0;
			F.line = 3640;
			var L_80623 = (data_80607 != null ? data_80607.length : 0);
			L2: do {
				F.line = 3641;
					L3: while (true) {
					if (!(i_80621 < L_80623)) break L3;
						F.line = 3642;
						i_80616 = data_80607[chckIndx(i_80621, 0, data_80607.length-1)-0];
						F.line = 662;
						var r_80617 = SVG.select((("#" + xmlid_77151(i_80616)) + " rect")).get(0);
						F.line = 663;
						fetch_from_rect_78258(i_80616, r_80617);
						F.line = 664;
						debg_73084(((("update rect: " + i_80616.beginstr) + ",") + i_80616.endstr));
						F.line = 3643;
						i_80621 = addInt(i_80621, 1);
						if (!(((data_80607 != null ? data_80607.length : 0) == L_80623))) {
						F.line = 3644;
						failedAssertImpl_22439(makeNimstrLit("len(a) == L seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 665;
		result_80606 = nimCopy(null, data_80607, NTI77158);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_80606;

}

function on_refresh_80858(ev_80860) {
	var result_80861 = false;

	var F={procname:"gannt.on_refresh",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 874;
		cfg_76027[0].mode_xrange = (parseFloat(jQuery("#xrange").val())|0);
		F.line = 875;
		cfg_76027[0].mode_title = (parseFloat(jQuery("#title").val())|0);
		F.line = 876;
		var data_80862 = update_bars_from_svg_80603();
		F.line = 877;
		on_csv_79010(data_80862);
		F.line = 878;
		result_80861 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_80861;

}

function mi_len_77097() {
	var result_77099 = 0;

	var F={procname:"bars.mi_len",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 53;
		result_77099 = (gnt_bars_77047[0] != null ? gnt_bars_77047[0].length : 0);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_77099;

}

function create_new_text_80833(t1_80835, t2_80836) {
	var F={procname:"gannt.create_new_text",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((t1_80835 != null ? t1_80835.length : 0) < 1)) {
		F.line = 824;
		debg_73036(makeNimstrLit("new_txt: title text is not specified."));
		F.line = 825;
		break BeforeRet;
		}
		
		F.line = 826;
		var y_80837 = (to_75063(cfg_76027[0].sy, mi_len_77097())|0);
		if ((0 < (t2_80836 != null ? t2_80836.length : 0))) {
		F.line = 828;
		y_80837 = (parseFloat(t2_80836)|0);
		}
		
		F.line = 829;
		var svg_80838 = SVG.select("svg").get(0).doc();
		F.line = 830;
		var txt_80839 = svg_80838.text(t1_80835);
		F.line = 831;
		var x_80840 = 0;
		F.line = 832;
		txt_80839.x(x_80840).y(y_80837);
	} while (false);
	framePtr = F.prev;

	
}

function nsuIsDigitChar(c_34659) {
	var result_34660 = false;

	var F={procname:"strutils.isDigit",prev:framePtr,filename:"lib/nim/pure/strutils.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 92;
		result_34660 = (ConstSet6[c_34659] != undefined);
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_34660;

}

function nsuIsDigitStr(s_34737) {
	var result_34738 = false;

	var F={procname:"strutils.isDigit",prev:framePtr,filename:"lib/nim/pure/strutils.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if (((s_34737 != null ? s_34737.length-1 : 0) == 0)) {
		F.line = 152;
		result_34738 = false;
		break BeforeRet;
		}
		
		F.line = 154;
		result_34738 = true;
		L1: do {
			F.line = 155;
			var c_34740 = 0;
			F.line = 3657;
			var i_34744 = 0;
			F.line = 3658;
			var L_34746 = (s_34737 != null ? s_34737.length-1 : 0);
			L2: do {
				F.line = 3659;
					L3: while (true) {
					if (!(i_34744 < L_34746)) break L3;
						F.line = 3660;
						c_34740 = s_34737[chckIndx(i_34744, 0, s_34737.length-1)-0];
						F.line = 156;
						result_34738 = (nsuIsDigitChar(c_34740) && result_34738);
						F.line = 3661;
						i_34744 = addInt(i_34744, 1);
						if (!(((s_34737 != null ? s_34737.length-1 : 0) == L_34746))) {
						F.line = 3662;
						failedAssertImpl_22439(makeNimstrLit("len(a) == L string modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
	} while (false);
	framePtr = F.prev;

	return result_34738;

}

function bars_get_77107(n_77109) {
	var result_77110 = null;

	var F={procname:"bars.bars_get",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 57;
		result_77110 = gnt_bars_77047[0][chckIndx(n_77109, 0, gnt_bars_77047[0].length-1)-0];
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_77110;

}

function mi_select_79033(src_79035) {
	var result_79036 = null;

	var F={procname:"gannt.mi_select",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 48;
		var xmlid_79037 = "";
		if (nsuIsDigitStr(cstrToNimstr(src_79035))) {
		F.line = 50;
		var n_79038 = (parseFloat(src_79035)|0);
		if ((mi_len_77097() <= n_79038)) {
		F.line = 52;
		result_79036 = "";
		break BeforeRet;
		}
		
		F.line = 53;
		var mi_79039 = bars_get_77107(n_79038);
		F.line = 54;
		xmlid_79037 = xmlid_77151(mi_79039);
		}
		else {
			F.line = 58;
			var sel_79040 = jQuery(("#" + src_79035));
			if ((sel_79040.length < 1)) {
			F.line = 60;
			result_79036 = "";
			break BeforeRet;
			}
			
			F.line = 61;
			xmlid_79037 = src_79035;
		}
		
		F.line = 62;
		result_79036 = xmlid_79037;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_79036;

}

function create_new_arrow_core_80799(r1_80801, r2_80802) {
	var F={procname:"gannt.create_new_arrow_core",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
		F.line = 785;
		var x1_80803 = addInt(r1_80801.x(), r1_80801.width());
		F.line = 786;
		var x2_80804 = r2_80802.x();
		F.line = 787;
		var y1_80805 = addInt(r1_80801.y(), (slash__21607(r1_80801.height(), 2)|0));
		F.line = 788;
		var y2_80806 = addInt(r2_80802.y(), (slash__21607(r2_80802.height(), 2)|0));
		F.line = 789;
		var svg_80807 = SVG.select("svg").get(0).doc();
		F.line = 790;
		var lin_80808 = svg_80807.line(x1_80803, y1_80805, x2_80804, y2_80806);
		F.line = 793;
		var mk_80809 = SVG.select("marker").get(0);
		F.line = 794;
		lin_80808.stroke({color: "#000", width: 2, opacity: 1.0000000000000000e+00});
		F.line = 795;
		lin_80808.marker("end", mk_80809);
	framePtr = F.prev;

	
}

function create_new_arrow_80843(t1_80845, t2_80846) {
	var F={procname:"gannt.create_new_arrow",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((((t1_80845 != null ? t1_80845.length : 0) < 1) || ((t2_80846 != null ? t2_80846.length : 0) < 1))) {
		F.line = 837;
		debg_73036(makeNimstrLit("new_arw: IDs are not specified"));
		F.line = 838;
		break BeforeRet;
		}
		
		F.line = 839;
		var id1_80847 = mi_select_79033(t1_80845);
		F.line = 840;
		var id2_80848 = mi_select_79033(t2_80846);
		if (((id1_80847 != null ? id1_80847.length : 0) < 1)) {
		F.line = 842;
		debg_73036(makeNimstrLit("new_arw: ID1 can not be found"));
		F.line = 843;
		break BeforeRet;
		}
		
		if (((id2_80848 != null ? id2_80848.length : 0) < 1)) {
		F.line = 845;
		debg_73036(makeNimstrLit("new_arw: ID2 can not be found"));
		F.line = 846;
		break BeforeRet;
		}
		
		F.line = 847;
		var r1_80849 = SVG.select(("#" + id1_80847));
		F.line = 848;
		var r2_80850 = SVG.select(("#" + id2_80848));
		if ((((id1_80847 != null ? id1_80847.length : 0) < 1) || ((id2_80848 != null ? id2_80848.length : 0) < 1))) {
		F.line = 850;
		debg_73036(makeNimstrLit("new_arw: "));
		F.line = 851;
		break BeforeRet;
		}
		
		F.line = 852;
		create_new_arrow_core_80799(r1_80849.get(0), r2_80850.get(0));
	} while (false);
	framePtr = F.prev;

	
}

function on_new_object_80851(ev_80853) {
	var result_80854 = false;

	var F={procname:"gannt.on_new_object",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 856;
		var sel_80855 = cstrToNimstr(jQuery("#new_object").val());
		F.line = 857;
		var t1_80856 = jQuery("#new_text1").val();
		F.line = 858;
		var t2_80857 = jQuery("#new_text2").val();
		F.line = 859;
		switch (toJSStr(sel_80855)) {
		case "bar":
			F.line = 861;
			create_new_bar_79001(t1_80856, t2_80857);
			break;
		case "text":
			F.line = 863;
			create_new_text_80833(t1_80856, t2_80857);
			break;
		case "arrow":
			F.line = 865;
			create_new_arrow_80843(t1_80856, t2_80857);
			break;
		default: 
			F.line = 868;
			sel_80855 = nimCopy(null, makeNimstrLit(""), NTI138);
			break;
		}
		F.line = 869;
		jQuery("#new_object").val("0");
		F.line = 870;
		result_80854 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_80854;

}

function warn_73090(fmt_73092) {
	var F={procname:"logging.warn",prev:framePtr,filename:"logging.nim",line:0};
	framePtr = F;
		F.line = 64;
		warn_73060(cstrToNimstr(fmt_73092));
	framePtr = F.prev;

	
}

function on_save_core_80550(dat_80552, ext_80553) {
	var F={procname:"gannt.on_save_core",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
		F.line = 632;
		var anc_80554 = jQuery("<a style=\"display: none;\" />");
		F.line = 633;
		var opt_80564 = {};
		F.line = 634;
		opt_80564["type"] = makeNimstrLit("data:attachment/text");
		F.line = 635;
		var blob_80595 = new Blob([dat_80552], opt_80564);
		F.line = 636;
		var url_80596 = window.URL.createObjectURL(blob_80595);
		F.line = 637;
		warn_73090(url_80596);
		F.line = 638;
		var chn_80597 = anc_80554.attr("href", url_80596).attr("download", ("download." + ext_80553));
		F.line = 640;
		chn_80597 = jQuery("body").append(anc_80554);
		F.line = 641;
		anc_80554[0].click();
		F.line = 642;
		window.URL.revokeObjectURL(url_80596);
	framePtr = F.prev;

	
}

function on_save_80598(ev_80600) {
	var result_80601 = false;

	var F={procname:"gannt.on_save",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 653;
		var dat_80602 = jQuery("#root").html();
		F.line = 654;
		dat_80602 = (("<svg>" + dat_80602) + "</svg>");
		F.line = 655;
		on_save_core_80550(dat_80602, "svg");
		F.line = 656;
		result_80601 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_80601;

}

function nsuIntToStr(x_36644, minchars_36645) {
	var result_36646 = null;

		result_36646 = nimCopy(null, cstrToNimstr((Math.abs(x_36644))+""), NTI138);
		L1: do {
			var i_36656 = 0;
			var colontmp__36658 = 0;
			colontmp__36658 = (minchars_36645 - (result_36646 != null ? result_36646.length-1 : 0));
			var res_36661 = 1;
			L2: do {
					L3: while (true) {
					if (!(res_36661 <= colontmp__36658)) break L3;
						i_36656 = res_36661;
						result_36646 = nimCopy(null, [48].concat(result_36646), NTI138);
						res_36661 += 1;
					}
			} while(false);
		} while(false);
		if ((x_36644 < 0)) {
		result_36646 = nimCopy(null, [45].concat(result_36646), NTI138);
		}
		

	return result_36646;

}

function format_78251(self_78253) {
	var result_78254 = null;

	var F={procname:"bars.format",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 129;
		var dat_78255 = self_78253.group;
		F.line = 130;
		if (dat_78255 != null) { dat_78255 += ",sample.txt,"; } else { dat_78255 = ",sample.txt,"; };
		F.line = 131;
		if (dat_78255 != null) { dat_78255 += toJSStr((cstrToNimstr((self_78253.idx)+"").slice(0,-1)).concat(makeNimstrLit(","))); } else { dat_78255 = toJSStr((cstrToNimstr((self_78253.idx)+"").slice(0,-1)).concat(makeNimstrLit(","))); };
		F.line = 132;
		if (dat_78255 != null) { dat_78255 += toJSStr((nsuIntToStr((self_78253.begin|0), 9).slice(0,-1)).concat(makeNimstrLit(","))); } else { dat_78255 = toJSStr((nsuIntToStr((self_78253.begin|0), 9).slice(0,-1)).concat(makeNimstrLit(","))); };
		F.line = 133;
		if (dat_78255 != null) { dat_78255 += toJSStr((nsuIntToStr((self_78253.fin|0), 9).slice(0,-1)).concat(makeNimstrLit(","))); } else { dat_78255 = toJSStr((nsuIntToStr((self_78253.fin|0), 9).slice(0,-1)).concat(makeNimstrLit(","))); };
		F.line = 134;
		if (dat_78255 != null) { dat_78255 += ((((self_78253.beginstr + ",") + self_78253.endstr) + ",") + self_78253.text); } else { dat_78255 = ((((self_78253.beginstr + ",") + self_78253.endstr) + ",") + self_78253.text); };
		F.line = 135;
		if (dat_78255 != null) { dat_78255 += "\n"; } else { dat_78255 = "\n"; };
		F.line = 136;
		result_78254 = dat_78255;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_78254;

}

function on_save_csv_80624(ev_80626) {
	var result_80627 = false;

	var F={procname:"gannt.on_save_csv",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 669;
		var dat_80628 = "group,file,idx,begin,end,beginstr,endstr,text\n";
		L1: do {
			F.line = 670;
			var i_80637 = null;
			F.line = 3637;
			var colontmp__80640 = null;
			F.line = 670;
			colontmp__80640 = update_bars_from_svg_80603();
			F.line = 3639;
			var i_80643 = 0;
			F.line = 3640;
			var L_80645 = (colontmp__80640 != null ? colontmp__80640.length : 0);
			L2: do {
				F.line = 3641;
					L3: while (true) {
					if (!(i_80643 < L_80645)) break L3;
						F.line = 3642;
						i_80637 = colontmp__80640[chckIndx(i_80643, 0, colontmp__80640.length-1)-0];
						F.line = 671;
						if (dat_80628 != null) { dat_80628 += format_78251(i_80637); } else { dat_80628 = format_78251(i_80637); };
						F.line = 3643;
						i_80643 = addInt(i_80643, 1);
						if (!(((colontmp__80640 != null ? colontmp__80640.length : 0) == L_80645))) {
						F.line = 3644;
						failedAssertImpl_22439(makeNimstrLit("len(a) == L seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 672;
		on_save_core_80550(dat_80628, "csv");
		F.line = 673;
		result_80627 = false;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_80627;

}

function newBar_78411(row_78413) {
	var result_78414 = null;

	var F={procname:"bars.newBar",prev:framePtr,filename:"bars.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 164;
		var obj_78422 = new_78277();
		F.line = 165;
		var col_78423 = 0;
		L1: do {
			F.line = 166;
			var cell_78424 = null;
			F.line = 65;
			var f_quote_78441 = false;
			F.line = 66;
			var f_esc_78443 = false;
			F.line = 67;
			var col_78445 = 0;
			F.line = 68;
			var cell_78447 = makeNimstrLit("");
			F.line = 69;
			debg_73036((makeNimstrLit("row...").slice(0,-1)).concat(row_78413));
			L2: do {
				F.line = 70;
				var c2_78449 = 0;
				F.line = 3657;
				var i_78451 = 0;
				F.line = 3658;
				var L_78453 = (row_78413 != null ? row_78413.length-1 : 0);
				L3: do {
					F.line = 3659;
						L4: while (true) {
						if (!(i_78451 < L_78453)) break L4;
							F.line = 3660;
							c2_78449 = row_78413[chckIndx(i_78451, 0, row_78413.length-1)-0];
							L5: do {
								if (f_quote_78441) {
								if (f_esc_78443) {
								F.line = 73;
								f_esc_78443 = false;
								}
								else {
								if ((c2_78449 == 92)) {
								F.line = 75;
								f_esc_78443 = true;
								F.line = 76;
								break L5;
								}
								else {
								if ((c2_78449 == 34)) {
								F.line = 78;
								f_quote_78441 = false;
								}
								}}
								F.line = 79;
								if (cell_78447 != null) { addChar(cell_78447, c2_78449); } else { cell_78447 = [c2_78449, 0]; };
								F.line = 80;
								break L5;
								}
								
								if (f_esc_78443) {
								F.line = 83;
								f_esc_78443 = false;
								}
								else {
								if ((c2_78449 == 34)) {
								F.line = 85;
								f_quote_78441 = true;
								F.line = 86;
								break L5;
								}
								else {
								if ((c2_78449 == 92)) {
								F.line = 88;
								f_esc_78443 = true;
								F.line = 89;
								break L5;
								}
								else {
								if ((c2_78449 == 44)) {
								F.line = 91;
								debg_73036((makeNimstrLit("cells...").slice(0,-1)).concat(cell_78447));
								F.line = 92;
								cell_78424 = toJSStr(cell_78447);
								F.line = 167;
								col_78423 = addInt(col_78423, 1);
								F.line = 168;
								switch (col_78423) {
								case 1:
									F.line = 170;
									obj_78422.group = cell_78424;
									break;
								case 2:
									F.line = 172;
									obj_78422.file = cell_78424;
									break;
								case 3:
									F.line = 174;
									obj_78422.idx = (parseFloat(cell_78424)|0);
									break;
								case 4:
									F.line = 176;
									obj_78422.begin = parseFloat(cell_78424);
									break;
								case 5:
									F.line = 178;
									obj_78422.fin = parseFloat(cell_78424);
									break;
								case 6:
									F.line = 180;
									obj_78422.beginstr = cell_78424;
									break;
								case 7:
									F.line = 182;
									obj_78422.endstr = cell_78424;
									break;
								case 8:
									F.line = 184;
									obj_78422.text = cell_78424;
									break;
								default: 
									F.line = 186;
									obj_78422.misc = cell_78424;
									break;
								}
								F.line = 93;
								col_78445 = addInt(col_78445, 1);
								F.line = 94;
								cell_78447 = nimCopy(null, makeNimstrLit(""), NTI138);
								F.line = 95;
								break L5;
								}
								}}}
								F.line = 96;
								if (cell_78447 != null) { addChar(cell_78447, c2_78449); } else { cell_78447 = [c2_78449, 0]; };
							} while(false);
							F.line = 3661;
							i_78451 = addInt(i_78451, 1);
							if (!(((row_78413 != null ? row_78413.length-1 : 0) == L_78453))) {
							F.line = 3662;
							failedAssertImpl_22439(makeNimstrLit("len(a) == L string modified while iterating over it"));
							}
							
						}
				} while(false);
			} while(false);
			if ((0 < (cell_78447 != null ? cell_78447.length-1 : 0))) {
			F.line = 98;
			debg_73036((makeNimstrLit("cells...").slice(0,-1)).concat(cell_78447));
			F.line = 99;
			cell_78424 = toJSStr(cell_78447);
			F.line = 167;
			col_78423 = addInt(col_78423, 1);
			F.line = 168;
			switch (col_78423) {
			case 1:
				F.line = 170;
				obj_78422.group = cell_78424;
				break;
			case 2:
				F.line = 172;
				obj_78422.file = cell_78424;
				break;
			case 3:
				F.line = 174;
				obj_78422.idx = (parseFloat(cell_78424)|0);
				break;
			case 4:
				F.line = 176;
				obj_78422.begin = parseFloat(cell_78424);
				break;
			case 5:
				F.line = 178;
				obj_78422.fin = parseFloat(cell_78424);
				break;
			case 6:
				F.line = 180;
				obj_78422.beginstr = cell_78424;
				break;
			case 7:
				F.line = 182;
				obj_78422.endstr = cell_78424;
				break;
			case 8:
				F.line = 184;
				obj_78422.text = cell_78424;
				break;
			default: 
				F.line = 186;
				obj_78422.misc = cell_78424;
				break;
			}
			}
			
		} while(false);
		if ((8 <= col_78423)) {
		F.line = 188;
		result_78414 = obj_78422;
		break BeforeRet;
		}
		
		F.line = 189;
		result_78414 = null;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_78414;

}

function ajax_text_80708(data_80710, textStatus_80711, jqXHR_80712) {
	var F={procname:"gannt.ajax_text",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
		F.line = 754;
		var f_first_80713 = true;
		F.line = 755;
		var dat_80730 = nimCopy(null, [], NTI80729);
		F.line = 756;
		debg_73084(("ajax_text..." + data_80710));
		L1: do {
			F.line = 757;
			var row_80731 = null;
			F.line = 726;
			var colontmp__80764 = null;
			F.line = 757;
			colontmp__80764 = cstrToNimstr(data_80710);
			F.line = 749;
			var first_80768 = 0;
			F.line = 750;
			var last_80770 = 0;
			L2: do {
				F.line = 751;
					L3: while (true) {
					if (!true) break L3;
						L4: do {
							F.line = 752;
								L5: while (true) {
								if (!!((ConstSet7[colontmp__80764[chckIndx(last_80770, 0, colontmp__80764.length-1)-0]] != undefined))) break L5;
									F.line = 752;
									last_80770 = addInt(last_80770, 1);
								}
						} while(false);
						F.line = 753;
						row_80731 = (colontmp__80764.slice(first_80768, (subInt(last_80770, 1))+1).concat(0));
						L6: do {
							F.line = 758;
							debg_73036((makeNimstrLit("lines...").slice(0,-1)).concat(cstrToNimstr(((dat_80730 != null ? dat_80730.length : 0))+"")));
							if (f_first_80713) {
							F.line = 760;
							f_first_80713 = false;
							F.line = 761;
							break L6;
							}
							
							F.line = 762;
							var obj_80739 = newBar_78411(row_80731);
							if (!((obj_80739 == null))) {
							F.line = 764;
							if (dat_80730 != null) { dat_80730.push(obj_80739); } else { dat_80730 = [obj_80739]; };
							}
							
						} while(false);
						if ((colontmp__80764[chckIndx(last_80770, 0, colontmp__80764.length-1)-0] == 10)) {
						F.line = 755;
						last_80770 = addInt(last_80770, 1);
						}
						else {
						if ((colontmp__80764[chckIndx(last_80770, 0, colontmp__80764.length-1)-0] == 13)) {
						F.line = 757;
						last_80770 = addInt(last_80770, 1);
						if ((colontmp__80764[chckIndx(last_80770, 0, colontmp__80764.length-1)-0] == 10)) {
						F.line = 758;
						last_80770 = addInt(last_80770, 1);
						}
						
						}
						else {
							F.line = 759;
							break L2;
						}
						}
						F.line = 760;
						first_80768 = last_80770;
					}
			} while(false);
		} while(false);
		F.line = 765;
		on_csv_79010(dat_80730);
		F.line = 767;
		jQuery("svg:eq(1)").remove();
	framePtr = F.prev;

	
}

function upload_csv_80771(ev_80773) {
	var result_80774 = false;

	var F={procname:"gannt.upload_csv",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
		F.line = 771;
		var data_80775 = ev_80773.target.result;
		F.line = 772;
		ajax_text_80708(data_80775, "", null);
	framePtr = F.prev;

	return result_80774;

}

function on_upload_csv_80776(ev_80778) {
	var result_80779 = false;

	var F={procname:"gannt.on_upload_csv",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 776;
		var files_80780 = jQuery("#upload_file")[0].files;
		F.line = 777;
		var fileData_80781 = files_80780[chckIndx(0, 0, files_80780.length-1)-0];
		F.line = 778;
		var fr_80782 = new FileReader();
		F.line = 779;
		fr_80782.onload = upload_csv_80771;
		F.line = 780;
		fr_80782.readAsText((fileData_80781));
		F.line = 781;
		result_80779 = false;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_80779;

}

function on_cm_leave_80935(ev_80937) {
	var result_80938 = false;

	var F={procname:"gannt.on_cm_leave",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 924;
		jQuery("#contextmenu").css("display", "none");
		F.line = 925;
		result_80938 = false;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_80938;

}

function on_edit_bar_80528(ev_80530) {
	var result_80531 = false;

	var F={procname:"gannt.on_edit_bar",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		F.line = 593;
		var id_80532 = jQuery("#edit-bar-id").val();
		F.line = 594;
		var t_80533 = jQuery("#edit-bar-title").val();
		F.line = 595;
		jQuery((("#" + id_80532) + " text tspan")).text(t_80533);
		F.line = 598;
		var idx_80534 = xmlid_to_idx_77138(id_80532);
		F.line = 599;
		var bar_80535 = bars_get_77107(subInt(idx_80534, 1));
		F.line = 600;
		bar_80535.text = t_80533;
		F.line = 601;
		result_80531 = true;
		break BeforeRet;
	} while (false);
	framePtr = F.prev;

	return result_80531;

}

function on_init_80939(ev_80941) {
	var F={procname:"gannt.on_init",prev:framePtr,filename:"gannt.nim",line:0};
	framePtr = F;
		F.line = 929;
		setLevel_73033(cfg_76027[0].log_level);
		F.line = 930;
		cfg_76027[0].mode_xrange = 0;
		F.line = 932;
		var url_80942 = new URL(window.location.href);
		F.line = 933;
		var xrange_80943 = url_80942.searchParams.get("xrange");
		if (!((xrange_80943 == null))) {
		F.line = 935;
		cfg_76027[0].mode_xrange = (parseFloat(xrange_80943)|0);
		}
		
		F.line = 936;
		var title_80944 = url_80942.searchParams.get("title");
		if (!((title_80944 == null))) {
		F.line = 938;
		cfg_76027[0].mode_title = (parseFloat(title_80944)|0);
		}
		
		F.line = 940;
		jQuery("svg").off("contextmenu").on("contextmenu", on_contextmenu_80913);
		F.line = 941;
		jQuery("#xrange").off("change").on("change", on_refresh_80858);
		F.line = 942;
		jQuery("#title").off("change").on("change", on_refresh_80858);
		F.line = 943;
		jQuery("#new_object").off("change").on("change", on_new_object_80851);
		F.line = 944;
		jQuery("#save").off("click").on("click", on_save_80598);
		F.line = 945;
		jQuery("#save_csv").off("click").on("click", on_save_csv_80624);
		F.line = 946;
		jQuery("#upload").off("click").on("click", on_upload_csv_80776);
		F.line = 947;
		jQuery("#refresh").off("click").on("click", on_refresh_80858);
		F.line = 948;
		jQuery("#contextmenu").off("mouseleave").on("mouseleave", on_cm_leave_80935);
		F.line = 950;
		jQuery("#edit-bar-update").off("click").on("click", on_edit_bar_80528);
		F.line = 953;
		var fname_80945 = url_80942.searchParams.get("file");
		if (!((fname_80945 == null))) {
		F.line = 955;
		jQuery.ajax(fname_80945).then(ajax_text_80708);
		}
		
	framePtr = F.prev;

	
}
var pm_80948 = [jQuery.when(jQuery.ready).then(on_init_80939)];
